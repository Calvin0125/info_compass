---
http_interactions:
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22crispr%22%20OR%20abs:%22crispr%22&sortBy=submittedDate&sortOrder=descending&start=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 22 Aug 2021 23:18:16 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '7625'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZlZWQgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSI+CiAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hcGkvcXVlcnk/c2VhcmNoX3F1ZXJ5JTNEdGklM0ElMjJjcmlzcHIlMjIlMjBPUiUyMGFicyUzQSUyMmNyaXNwciUyMiUyNmlkX2xpc3QlM0QlMjZzdGFydCUzRDAlMjZtYXhfcmVzdWx0cyUzRDEwIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL2F0b20reG1sIi8+CiAgPHRpdGxlIHR5cGU9Imh0bWwiPkFyWGl2IFF1ZXJ5OiBzZWFyY2hfcXVlcnk9dGk6ImNyaXNwciIgT1IgYWJzOiJjcmlzcHIiJmFtcDtpZF9saXN0PSZhbXA7c3RhcnQ9MCZhbXA7bWF4X3Jlc3VsdHM9MTA8L3RpdGxlPgogIDxpZD5odHRwOi8vYXJ4aXYub3JnL2FwaS9VM0hjUFB4eWZVZW93ZjRzbnlOQ2xiWFYxb0k8L2lkPgogIDx1cGRhdGVkPjIwMjEtMDgtMjJUMDA6MDA6MDAtMDQ6MDA8L3VwZGF0ZWQ+CiAgPG9wZW5zZWFyY2g6dG90YWxSZXN1bHRzIHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+MzA8L29wZW5zZWFyY2g6dG90YWxSZXN1bHRzPgogIDxvcGVuc2VhcmNoOnN0YXJ0SW5kZXggeG1sbnM6b3BlbnNlYXJjaD0iaHR0cDovL2E5LmNvbS8tL3NwZWMvb3BlbnNlYXJjaC8xLjEvIj4wPC9vcGVuc2VhcmNoOnN0YXJ0SW5kZXg+CiAgPG9wZW5zZWFyY2g6aXRlbXNQZXJQYWdlIHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+MTA8L29wZW5zZWFyY2g6aXRlbXNQZXJQYWdlPgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTAxLjAxMzAzdjE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wMS0wNVQwMToyNzoyNFo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDEtMDVUMDE6Mjc6MjRaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+QSBzbWFsbCBQQU0gb3B0aW1pc2VzIHRhcmdldCByZWNvZ25pdGlvbiBpbiB0aGUgQ1JJU1BSLUNhcyBpbW11bmUgc3lzdGVtPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgQ1JJU1BSLUNhcyBpcyBhbiBhZGFwdGl2ZSBpbW11bmUgbWVjaGFuaXNtIHRoYXQgaGFzIGJlZW4gaGFybmVzc2VkIGZvciBhCnZhcmlldHkgb2YgZ2VuZXRpYyBlbmdpbmVlcmluZyBhcHBsaWNhdGlvbnM6IHRoZSBDYXM5IHByb3RlaW4gcmVjb2duaXNlcyBhCjItNW50IEROQSBtb3RpZiwga25vd24gYXMgdGhlIFBBTSwgYW5kIGEgcHJvZ3JhbW1hYmxlIGNyUk5BIGJpbmRzIGEgdGFyZ2V0IEROQQpzZXF1ZW5jZSB0aGF0IGlzIHRoZW4gY2xlYXZlZC4gV2hpbGUgb2ZmLXRhcmdldCBhY3Rpdml0eSBpcyB1bmRlc2lyYWJsZSwgaXQKb2NjdXJzIGJlY2F1c2UgY3Jvc3MtcmVhY3Rpdml0eSB3YXMgYmVuZWZpY2lhbCBpbiB0aGUgaW1tdW5lIHN5c3RlbSBvbiB3aGljaAp0aGUgbWFjaGluZXJ5IGlzIGJhc2VkLiBIZXJlLCBhIHN0b2NoYXN0aWMgbW9kZWwgb2YgdGhlIHRhcmdldCByZWNvZ25pdGlvbgpyZWFjdGlvbiB3YXMgZGVyaXZlZCB0byBzdHVkeSB0aGUgc3BlY2lmaWNpdHkgb2YgdGhlIGlubmF0ZSBpbW11bmUgbWVjaGFuaXNtIGluCmJhY3RlcmlhLiBDUklTUFIgc3lzdGVtcyB3aXRoIENhczkgcHJvdGVpbnMgdGhhdCByZWNvZ25pc2VkIFBBTXMgb2YgdmFyeWluZwpsZW5ndGhzIHdlcmUgdGVzdGVkIG9uIHNlbGYgYW5kIHBoYWdlIEROQS4gVGhlIG1vZGVsIHNob3dlZCB0aGF0IHRoZSBlbmVyZ3kKYXNzb2NpYXRlZCB3aXRoIFBBTSBiaW5kaW5nIGltcGFjdGVkIG1pc21hdGNoIHRvbGVyYW5jZSwgY2xlYXZhZ2UgcHJvYmFiaWxpdHksCmFuZCBjbGVhdmFnZSB0aW1lLiBTbWFsbCBQQU1zIGFsbG93ZWQgdGhlIENSSVNQUiB0byBiYWxhbmNlIGNhdGNoaW5nIG11dGFudApwaGFnZXMsIGF2b2lkaW5nIHNlbGYtdGFyZ2V0aW5nLCBhbmQgcXVpY2tseSBkaXNzb2NpYXRpbmcgZnJvbSBjcml0aWNhbGx5Cm5vbi1tYXRjaGluZyBzZXF1ZW5jZXMuIEFkZGl0aW9uYWxseSwgdGhlIHJlc3VsdHMgcmV2ZWFsZWQgYSBsb3dlciB0b2xlcmFuY2UgdG8KbWlzbWF0Y2hlcyBpbiB0aGUgUEFNIGFuZCBhIFBBTS1wcm94aW1hbCByZWdpb24ga25vd24gYXMgdGhlIHNlZWQsIGFzIHNlZW4gaW4KZXhwZXJpbWVudHMuIFRoaXMgd29yayBpbGx1c3RyYXRlcyB0aGUgcm9sZSB0aGF0IHRoZSBDYXM5IHByb3RlaW4gaGFzIGluCmRpY3RhdGluZyB0aGUgc3BlY2lmaWNpdHkgb2YgRE5BIGNsZWF2YWdlIHRoYXQgY2FuIGFpZCBpbiBwcmV2ZW50aW5nIG9mZi10YXJnZXQKYWN0aXZpdHkgaW4gYmlvdGVjaG5vbG9neSBhcHBsaWNhdGlvbnMuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1lbGlhIEUuIEJvbm9tbzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj4yMCBwYWdlcywgNiBmaWd1cmVzLCAxIHRhYmxlPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwMS4wMTMwM3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTAxLjAxMzAzdjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InBoeXNpY3MuYmlvLXBoIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icGh5c2ljcy5iaW8tcGgiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJxLWJpby5CTSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDEuMDEyNjd2MjwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA4LTA0VDE2OjAyOjA3WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wMS0wNFQyMjo0Mzo0MFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5IZXRlcm9sb2dvdXMgYXV0b2ltbXVuaXR5IGFuZCBwcm9rYXJ5b3RpYyBpbW11bmUgZGVmZW5zZTwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFNvbWUgcHJva2FyeW90ZXMgcG9zc2VzcyBDUklTUFItQ2FzIHN5c3RlbXMgdGhhdCBwcm92aWRlIGFkYXB0aXZlIGltbXVuaXR5IHRvCnZpcnVzZXMgZ3VpZGVkIGJ5IEROQSBzZWdtZW50cyBjYWxsZWQgc3BhY2VycyBhY3F1aXJlZCBmcm9tIGludmFkaW5nIHBoYWdlLgpIb3dldmVyLCB0aGUgcGF0Y2h5IGluY2lkZW5jZSBhbmQgbGltaXRlZCBtZW1vcnkgYnJlYWR0aCBvZiBDUklTUFItQ2FzIHN5c3RlbXMKc3VnZ2VzdCB0aGF0IHRoZWlyIGZpdG5lc3MgYmVuZWZpdHMgYXJlIG9mZnNldCBieSBjb3N0cy4gSGVyZSwgd2UgcHJvcG9zZSB0aGF0CmNyb3NzLXJlYWN0aXZlIENSSVNQUiB0YXJnZXRpbmcgY2FuIGxlYWQgdG8gaGV0ZXJvbG9nb3VzIGF1dG9pbW11bml0eSwgd2hlcmVieQpmb3JlaWduIHNwYWNlcnMgZ3VpZGUgc2VsZi10YXJnZXRpbmcgaW4gYSBzcGFjZXItbGVuZ3RoIGRlcGVuZGVudCBmYXNoaW9uLgpCYWxhbmNpbmcgYW50aXZpcmFsIGRlZmVuc2UgYWdhaW5zdCBhdXRvaW1tdW5pdHkgcHJlZGljdHMgYSBzY2FsaW5nIHJlbGF0aW9uCmJldHdlZW4gc3BhY2VyIGxlbmd0aCBhbmQgQ1JJU1BSIHJlcGVydG9pcmUgc2l6ZS4gV2UgZmluZCBldmlkZW5jZSBmb3IgdGhpcwpzY2FsaW5nIHRocm91Z2ggY29tcGFyYXRpdmUgYW5hbHlzaXMgb2Ygc2VxdWVuY2VkIHByb2thcnlvdGljIGdlbm9tZXMsIGFuZCBzaG93CnRoYXQgdGhpcyBhc3NvY2lhdGlvbiBhbHNvIGhvbGRzIGF0IHRoZSBsZXZlbCBvZiBDUklTUFIgdHlwZXMuIEluIGNvbnRyYXN0LCB0aGUKc2NhbGluZyBpcyBhYnNlbnQgaW4gc3RyYWlucyB3aXRoIG5vbmZ1bmN0aW9uYWwgQ1JJU1BSIGxvY2kuIEZpbmFsbHksIHdlCmRlbW9uc3RyYXRlIHRoYXQgc3RvY2hhc3RpYyBzcGFjZXIgbG9zcyBjYW4gZXhwbGFpbiB2YXJpYXRpb25zIGFyb3VuZCB0aGUKc2NhbGluZyByZWxhdGlvbiwgZXZlbiBiZXR3ZWVuIHN0cmFpbnMgb2YgdGhlIHNhbWUgc3BlY2llcy4gT3VyIHJlc3VsdHMgc3VnZ2VzdAp0aGF0IGhldGVyb2xvZ291cyBhdXRvaW1tdW5pdHkgaXMgYSBzZWxlY3RpdmUgZmFjdG9yIHNoYXBpbmcgdGhlIGV2b2x1dGlvbiBvZgpDUklTUFItQ2FzIHN5c3RlbXMuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkhhbnJvbmcgQ2hlbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QW5kcmVhcyBNYXllcjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+VmlqYXkgQmFsYXN1YnJhbWFuaWFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPlJldmlzZWQgbWFudXNjcmlwdCB3aXRoIGFkZGl0aW9uYWwgcm9idXN0bmVzcyBjaGVja3MuIDExIHBhZ2VzIHdpdGggNAogIGZpZ3VyZXMgKyAxMCBwYWdlcyBzdXBwbGVtZW50IHdpdGggMTEgZmlndXJlczwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDEuMDEyNjd2MiIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwMS4wMTI2N3YyIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWJpby5QRSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLlBFIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icGh5c2ljcy5iaW8tcGgiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMDA5LjExOTIwdjQ8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wMVQxNToyNToxMlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjAtMDktMjRUMTk6Mjk6MzRaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+RnVuZGluZyBDUklTUFI6IFVuZGVyc3RhbmRpbmcgdGhlIHJvbGUgb2YgZ292ZXJubWVudCBhbmQgcGhpbGFudGhyb3BpYwogIGluc3RpdHV0aW9ucyBpbiBzdXBwb3J0aW5nIGFjYWRlbWljIHJlc2VhcmNoIHdpdGhpbiB0aGUgQ1JJU1BSIGlubm92YXRpb24KICBzeXN0ZW08L3RpdGxlPgogICAgPHN1bW1hcnk+ICBDUklTUFIvQ2FzIGhhcyB0aGUgcG90ZW50aWFsIHRvIHJldm9sdXRpb25pemUgbWVkaWNpbmUsIGFncmljdWx0dXJlLCBhbmQKYmlvbG9neS4gVW5kZXJzdGFuZGluZyB0aGUgdHJhamVjdG9yeSBvZiBpbm5vdmF0aW9uLCBob3cgaXQgaXMgaW5mbHVlbmNlZCBhbmQKd2hvIHBheXMgZm9yIGl0LCBpcyBhbiBlc3NlbnRpYWwgcmVzZWFyY2ggcG9saWN5IHF1ZXN0aW9uLCBlc3BlY2lhbGx5IGFzIFVTCmdvdmVybm1lbnQgc3VwcG9ydCBmb3IgcmVzZWFyY2ggZXhwZXJpZW5jZXMgYSByZWxhdGl2ZSBkZWNsaW5lLiBXZSB1c2UgYSBuZXcKbWV0aG9kIC0tIGJhc2VkIG9uIGZ1bmRpbmcgc291cmNlcyBpZGVudGlmaWVkIGluIHB1YmxpY2F0aW9ucycgZnVuZGluZwphY2tub3dsZWRnZW1lbnRzIC0tIHRvIG1hcCB0aGUgbmV0d29ya3MgaW52b2x2ZWQgaW4gc3VwcG9ydGluZyBrZXkgc3RhZ2VzIG9mCmhpZ2hseSBpbmZsdWVudGlhbCByZXNlYXJjaCwgbmFtZWx5IGJhc2ljIGJpb2xvZ2ljYWwgcmVzZWFyY2ggYW5kIHRlY2hub2xvZ3kKZGV2ZWxvcG1lbnQuIFdlIHByZXNlbnQgYSBtb2RlbCBvZiBjby1mdW5kaW5nIG5ldHdvcmtzIGF0IHRoZSB0d28gbW9zdApwcm9taW5lbnQgaW5zdGl0dXRpb25zIGZvciBDUklTUFIvQ2FzIHJlc2VhcmNoLCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhCmFuZCB0aGUgSGFydmFyZC9NSVQvQnJvYWQgSW5zdGl0dXRlLCB0byBpbGx1bWluYXRlIGhvdyBwaGlsYW50aHJvcGljIGFuZApjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnMgaGF2ZSBhcnRpY3VsYXRlZCB3aXRoIFVTIGdvdmVybm1lbnQgYWdlbmNpZXMgdG8KY28tZmluYW5jZSB0aGUgZGlzY292ZXJ5IGFuZCBkZXZlbG9wbWVudCBvZiBDUklTUFIvQ2FzLiBXZSBtYXBwZWQgZm91bmRhdGlvbmFsClVTIGdvdmVybm1lbnQgc3VwcG9ydCB0byBib3RoIHN0YWdlcyBvZiBDUklTUFIvQ2FzIHJlc2VhcmNoIGF0IGJvdGgKaW5zdGl0dXRpb25zLCB3aGlsZSBwaGlsYW50aHJvcGljIG9yZ2FuaXphdGlvbnMgaGF2ZSBjb25jZW50cmF0ZWQgaW4gY28tZnVuZGluZwpDUklTUFIvQ2FzIHRlY2hub2xvZ3kgZGV2ZWxvcG1lbnQgYXMgb3Bwb3NlZCB0byBiYXNpYyBiaW9sb2dpY2FsIHJlc2VhcmNoLiBUaGlzCmlzIHBhcnRpY3VsYXJseSB0cnVlIGZvciB0aGUgQnJvYWQvSGFydmFyZC9NSVQgc3lzdGVtLCB3aGVyZSBwaGlsYW50aHJvcGljCmludmVzdG1lbnQgY2x1c3RlcmVkIGFyb3VuZCBwYXJ0aWN1bGFyIHRlY2hub2xvZ2ljYWwgZGV2ZWxvcG1lbnQgdGhlbWVzLiBUaGVzZQpuZXR3b3JrIG1vZGVscyByYWlzZSBmdW5kYW1lbnRhbCBxdWVzdGlvbnMgYWJvdXQgdGhlIHJvbGUgb2YgdGhlIHN0YXRlIGFuZCB0aGUKaW5mbHVlbmNlIG9mIHBoaWxhbnRocm9weSBvdmVyIHRoZSB0cmFqZWN0b3J5IG9mIHRyYW5zZm9ybWF0aXZlIHRlY2hub2xvZ2llcy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGF2aWQgRmFqYXJkby1PcnRpejwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U3RlZmFuIEhvcm5ib3N0ZWw8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1heXdhIE1vbnRlbmVncm8tZGUtV2l0PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Bbm5pZSBTaGF0dHVjazwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj4xNyBwYWdlcywgMiBmaWd1cmVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjAwOS4xMTkyMHY0IiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMDA5LjExOTIwdjQiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkRMIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuREwiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5TSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIwMDguMDA4NzR2MjwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTAyLTA5VDE3OjMwOjMxWjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMC0wNy0xNVQxNDoxMjo1M1o8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5IaWdoIENvbnRyYXN0IFByb2JlIENsZWF2YWdlIERldGVjdGlvbjwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFBob3RvbmljIGJpb3NlbnNvcnMgdGhhdCB1c2Ugb3B0aWNhbCByZXNvbmFuY2VzIHRvIGFtcGxpZnkgc2lnbmFscyBmcm9tCnJlZnJhY3RpdmUgaW5kZXggY2hhbmdlcyBvZmZlciBoaWdoLXNlbnNpdGl2aXR5LCByZWFsLXRpbWUgcmVhZG91dCwgYW5kCnNjYWxhYmxlLCBsb3ctY29zdCBmYWJyaWNhdGlvbi4gSG93ZXZlciwgd2hlbiB1c2VkIHdpdGggY2xhc3NpYyBhZmZpbml0eSBhc3NheXMKdGhleSBzdHJ1Z2dsZSB3aXRoIG5vaXNlIGZyb20gbm9uLXNwZWNpZmljIGJpbmRpbmcgYW5kIGFyZSBsaW1pdGVkIGJ5IHRoZSBsb3cKcmVmcmFjdGl2ZSBpbmRleCBhbmQgc21hbGwgc2l6ZSBvZiB0YXJnZXQgYmlvbG9naWNhbCBtb2xlY3VsZXMuIEluIHRoaXMgbGV0dGVyLAp3ZSBpbnRyb2R1Y2UgdGhlIEhpZ2ggQ29udHJhc3QgQ2xlYXZhZ2UgRGV0ZWN0aW9uIChIQ0NEKSBtZWNoYW5pc20sIHdoaWNoIG1ha2VzCnVzZSBvZiBkcmFtYXRpYyBvcHRpY2FsIHNpZ25hbCBhbXBsaWZpY2F0aW9uIGNhdXNlZCBieSB0aGUgY2xlYXZhZ2Ugb2YgbGFyZ2UKbnVtYmVycyBvZiBoaWdoLWNvbnRyYXN0IG5hbm9wYXJ0aWNsZSByZXBvcnRlcnMgaW5zdGVhZCBvZiB0aGUgYWRzb3JwdGlvbiBvZgpsYWJlbGVkIG9yIHVubGFiZWxlZCBsb3ctaW5kZXggYmlvbG9naWNhbCBtb2xlY3VsZXMuIFdlIGV2YWx1YXRlIHRoZSBhZHZhbnRhZ2VzCm9mIHRoZSBIQ0NEIGRldGVjdGlvbiBtZWNoYW5pc20gb3ZlciBjb252ZW50aW9uYWwgdGFyZ2V0LWNhcHR1cmUgZGV0ZWN0aW9uCnRlY2huaXF1ZXMgd2hlbiB1c2luZyB0aGUgc2FtZSBsYWJlbCBhbmQgdGhlIHNhbWUgcGhvdG9uaWMgYmlvc2Vuc29yIHBsYXRmb3JtCmFuZCBpbGx1c3RyYXRlIG51bWVyaWNhbGx5IHRoZSBwb3NzaWJpbGl0eSBmb3IgYXR0b21vbGFyIHNlbnNpdGl2aXR5IGZvciBIQ0NECnVzaW5nIGFuIGV4YW1wbGUgb2YgYSBzaWxpY29uIHJpbmcgcmVzb25hdG9yIGFzIGFuIG9wdGljYWwgdHJhbnNkdWNlciBkZWNvcmF0ZWQKd2l0aCBzaWxpY29uIG5hbm9wYXJ0aWNsZXMgYXMgaGlnaC1jb250cmFzdCByZXBvcnRlcnMuIEluIHRoZSBwcmFjdGljYWwKcmVhbGl6YXRpb24gb2YgdGhpcyBkZXRlY3Rpb24gc2NoZW1lLCBkZXRlY3Rpb24gc3BlY2lmaWNpdHkgYW5kIHNpZ25hbAphbXBsaWZpY2F0aW9uIGNhbiBiZSBhY2hpZXZlZCB2aWEgY29sbGF0ZXJhbCBudWNsZWljIGFjaWQgY2xlYXZhZ2UgY2F1c2VkIGJ5CmVuenltZXMgc3VjaCBhcyBDUklTUFIgQ2FzMTJhIGFuZCBDYXMxMyBhZnRlciBiaW5kaW5nIHRvIGEgdGFyZ2V0IEROQS9STkEKc2VxdWVuY2UgaW4gc29sdXRpb24uCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1pY2hhZWwgRHVicm92c2t5PC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5TaVBob3ggSW5jLiwgQ2FtYnJpZGdlLCBNQSwgVVNBPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+TWFzc2FjaHVzZXR0cyBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neSwgQ2FtYnJpZGdlLCBNQSwgVVNBPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+TW9yZ2FuIEJsZXZpbnM8L25hbWU+CiAgICAgIDxhcnhpdjphZmZpbGlhdGlvbiB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPk1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3ksIENhbWJyaWRnZSwgTUEsIFVTQTwvYXJ4aXY6YWZmaWxpYXRpb24+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlN2ZXRsYW5hIFYuIEJvcmlza2luYTwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+TWFzc2FjaHVzZXR0cyBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neSwgQ2FtYnJpZGdlLCBNQSwgVVNBPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGllZHJpayBWZXJtZXVsZW48L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+NCBwYWdlcywgNCBmaWd1cmVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjAwOC4wMDg3NHYyIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMDA4LjAwODc0djIiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InBoeXNpY3MuYXBwLXBoIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icGh5c2ljcy5hcHAtcGgiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJwaHlzaWNzLmJpby1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InBoeXNpY3MuY2hlbS1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InBoeXNpY3Mub3B0aWNzIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjAwNS4wNzMzMnYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjAtMDUtMTVUMDM6MDU6MjFaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIwLTA1LTE1VDAzOjA1OjIxWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkEgQ1JJU1BSLUNhcy1JbnNwaXJlZCBNZWNoYW5pc20gZm9yIERldGVjdGluZyBIYXJkd2FyZSBUcm9qYW5zIGluIEZQR0EKICBEZXZpY2VzPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgSGFyZHdhcmUgc2VjdXJpdHkgaGFzIHJpc2VuIGluIHByb21pbmVuY2UgaW4gcmVjZW50IHllYXJzIHdpdGggY29uY2VybnMKc3RlbW1pbmcgZnJvbSBhIGdsb2JhbGl6aW5nIHNlbWljb25kdWN0b3Igc3VwcGx5IGNoYWluIGFuZCBpbmNyZWFzZWQKdGhpcmQtcGFydHkgSVAgKGludGVsbGVjdHVhbCBwcm9wZXJ0eSkgdXNhZ2UuIFRyb2phbiBkZXRlY3Rpb24gaXMgb2YgcGFyYW1vdW50CmltcG9ydGFuY2UgZm9yIGVuc3VyaW5nIHN5c3RlbXMgd2l0aCBjb25maWRlbnRpYWxpdHksIGludGVncml0eSwgYW5kCmF2YWlsYWJpbGl0eS4gRXhpc3RpbmcgbWV0aG9kcyBmb3IgaGFyZHdhcmUgVHJvamFuIGRldGVjdGlvbiBpbiBGUEdBIChmaWVsZApwcm9ncmFtbWFibGUgZ2F0ZSBhcnJheSkgZGV2aWNlcyBpbmNsdWRlIHRlc3QtdGltZSBtZXRob2RzLCBwcmUtaW1wbGVtZW50YXRpb24KbWV0aG9kcywgYW5kIHJ1bi10aW1lIG1ldGhvZHMuIFRoZSBmaXJzdCB0d28gbWV0aG9kcyBwcm92aWRlIGVmZmVjdGl2ZSB3YXlzIG9mCmRldGVjdGluZyBzb21lIFRyb2phbnM7IGhvd2V2ZXIsIFRyb2phbnMgbWF5IGJlIHNwZWNpZmljYWxseSBkZXNpZ25lZCB0byBhdm9pZApkZXRlY3Rpb24gYXQgdGVzdC10aW1lIG9yIGJlZm9yZSBpbXBsZW1lbnRhdGlvbiBtYWtpbmcgcnVuLXRpbWUgZGV0ZWN0aW9uIGEKbW9yZSBhdHRyYWN0aXZlIG9wdGlvbi4gUnVuLXRpbWUgZGV0ZWN0aW9uIGFuZCByZW1vdmFsIG9mIFRyb2phbnMgaXMgaGlnaGx5CmRlc2lyYWJsZSBkdWUgdG8gdGhlIHdpZGUgcmFuZ2Ugb2YgY3JpdGljYWwgc3lzdGVtcyB3aGljaCBhcmUgZGVwbG95ZWQgb24gRlBHQXMKYW5kIG1heSBiZSBkaWZmaWN1bHQgb3IgY29zdGx5IHRvIHJlbW92ZSBmcm9tIG9wZXJhdGlvbi4gTWFueSBwYXJhbGxlbHMgY2FuIGJlCmRyYXduIGJldHdlZW4gaGFyZHdhcmUgYW5kIG5hdHVyYWwgc3lzdGVtcywgYW5kIG9uZSBleGFtcGxlIGNyZWF0ZXMgYW4gYW5hbG9neQpiZXR3ZWVuIGhhcmR3YXJlIGF0dGFja3MgYW5kIGJpb2xvZ2ljYWwgYXR0YWNrcy4gV2UgcHJvcG9zZSBhCkNSSVNQUi1DYXMtaW5zcGlyZWQgKGNsdXN0ZXJlZCByZWd1bGFybHkgaW50ZXJzcGFjZWQgcGFsaW5kcm9taWMgcmVwZWF0cykKbWV0aG9kIGZvciBkZXRlY3RpbmcgaGFyZHdhcmUgVHJvamFucyBpbiBGUEdBcy4gVGhlIGZ1bmRhbWVudGFsIGNvbmNlcHRzIG9mIHRoZQpUeXBlIDEtRSBDUklTUFItQ2FzIG1lY2hhbmlzbSBhcmUgZGlzY3Vzc2VkIGFuZCBzaW11bGF0ZWQgdG8gcHJlZGljdCB0aGUgZmxvdwpvZiBnZW5ldGljIGluZm9ybWF0aW9uIHRocm91Z2ggdGhpcyBiaW9sb2dpY2FsIHN5c3RlbS4gVGhlIGJhc2ljIHN0cnVjdHVyZSBvZgp0aGlzIHN5c3RlbSBpcyB1dGlsaXplZCB0byBwcm9wb3NlIGEgbm92ZWwgcnVuLXRpbWUgVHJvamFuIGRldGVjdGlvbiBtZXRob2QKdGl0bGVkIENBREVGVCAoQ1JJU1BSLUNhcy1iYXNlZCBBbGdvcml0aG0gZm9yIERFdGVjdGlvbiBvZiBGUEdBIFRyb2phbnMpLgpEaWZmZXJlbnQgbGV2ZWxzIG9mIEZQR0EgYXBwbGljYXRpb24gZGVzaWduIGZsb3cgYXJlIGV4cGxvcmVkLCBhbmQgQ0FERUZUIGlzCnByb3Bvc2VkIGZvciByZWFsaXphdGlvbiBhdCB0aGUgYml0c3RyZWFtIGxldmVsIHRvIG1vbml0b3IgdGhlIGNvbmZpZ3VyYXRpb24KYml0c3RyZWFtIGFuZCB0aGUgcnVuLXRpbWUgcHJvcGVydGllcyBvZiB0aGUgRlBHQS4gVGhlIGZsZXhpYmlsaXR5IG9mIENBREVGVApvcmlnaW5hdGVzIGluIHRoZSBDUklTUFItQ2FzIG1lY2hhbmlzbSdzIGFiaWxpdHkgdG8gcmVjb2duaXplIHNpbWlsYXIgYWxiZWl0CnByZXZpb3VzbHkgdW5zZWVuIHBhdHRlcm5zIHdoaWNoIG1heSBwb3NlIGEgdGhyZWF0IHRvIHRoZSBzeXN0ZW0uCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkRpbGxvbiBTdGF1YjwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+VW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+UmFzaG1pIEpoYTwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+VW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGF2aWQgS2FwcDwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+QWlyIEZvcmNlIFJlc2VhcmNoIExhYjwvYXJ4aXY6YWZmaWxpYXRpb24+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+MTggcGFnZXMsIDggZmlndXJlczwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIwMDUuMDczMzJ2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjAwNS4wNzMzMnYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5DUiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkNSIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjAwNC4wOTIzN3YxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjAtMDQtMjBUMTI6MzQ6NDRaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIwLTA0LTIwVDEyOjM0OjQ0WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPlByb29mcmVhZGluZyBtZWNoYW5pc20gb2YgQ2xhc3MgMiBDUklTUFItQ2FzIHN5c3RlbXM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBDUklTUFIgc3lzdGVtcyBleHBlcmllbmNlIG9mZi10YXJnZXQgZWZmZWN0cyB0aGF0IGludGVyZmVyZSB3aXRoIHRoZSBhYmlsaXR5CnRvIGFjY3VyYXRlbHkgcGVyZm9ybSBnZW5ldGljIGVkaXRzLiBXaGlsZSBlbXBpcmljYWwgbW9kZWxzIHByZWRpY3Qgb2ZmLXRhcmdldAplZmZlY3RzIGluIHNwZWNpZmljIHBsYXRmb3JtcywgdGhlcmUgaXMgYSBnYXAgZm9yIGEgd2lkZS1yYW5naW5nIG1lY2hhbmlzdGljCm1vZGVsIG9mIENSSVNQUiBzeXN0ZW1zIGJhc2VkIG9uIGV2aWRlbmNlIGZyb20gdGhlIGVzc2VudGlhbCBwcm9jZXNzZXMgb2YKdGFyZ2V0IHJlY29nbml0aW9uLiBJbiB0aGlzIHdvcmssIHdlIHByZXNlbnQgYSBmaXJzdCBwcmluY2lwbGVzIG1vZGVsIHN1cHBvcnRlZApieSBtYW55IGV4cGVyaW1lbnRzIHBlcmZvcm1lZCBpbiB2aXZvIGFuZCBpbiB2aXRyby4gRmlyc3QsIHdlIG9ic2VydmUgYW5kIG1vZGVsCnRoZSBjb25mb3JtYXRpb25hbCBjaGFuZ2VzIGFuZCBkaXNjcmV0ZSBzdGVwcGVkIEROQSB1bndpbmRpbmcgZXZlbnRzIG9mClNwQ2FzOS1DUklTUFIgdGFyZ2V0IHJlY29nbml0aW9uIHByb2Nlc3MgaW4gYSBjZWxsLWZyZWUKdHJhbnNjcmlwdGlvbi10cmFuc2xhdGlvbiBzeXN0ZW0gdXNpbmcgdHJ1bmNhdGVkIGd1aWRlIFJOQXMsIGNvbmZpcm1pbmcKc3RydWN0dXJhbCBhbmQgRlJFVCBtaWNyb3Njb3B5IGV4cGVyaW1lbnRzLiBTZWNvbmQsIHdlIGltcGxlbWVudCBhbiBlbmVyZ3kKbGFuZHNjYXBlIHRvIGRlc2NyaWJlIHNpbmdsZSBtaXNtYXRjaCBlZmZlY3RzIG9ic2VydmVkIGluIHZpdm8gZm9yIHNwQ2FzOSBhbmQKQ2FzMTJhIENSSVNQUiBzeXN0ZW1zLiBGcm9tIHRoZSBtaXNtYXRjaCBhbmFseXNpcyByZXN1bHRzIHdlIHVuY292ZXIgdGhhdApDUklTUFIgY2xhc3MgMiBzeXN0ZW1zIG1haW50YWluIHRoZWlyIGtpbmV0aWMgcHJvb2ZyZWFkaW5nIG1lY2hhbmlzbSBieQp1dGlsaXppbmcgaW50ZXJtaXR0ZW50IGVuZXJnZXRpYyBiYXJyaWVycyBhbmQgd2Ugc2hvdyBob3cgdG8gbGV2ZXJhZ2UgdGhlCmxhbmRzY2FwZSB0byBpbXByb3ZlIHRhcmdldCBzcGVjaWZpY2l0eS4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QXNldCBLaGFraW16aGFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5EYXZpZCBHYXJlbm5lPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CZW5qYW1pbiBJLiBUaWNrbWFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5KYXNvbiBGb250YW5hPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5KYW1lcyBDYXJvdGhlcnM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlZpbmNlbnQgTm9pcmVhdXg8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+OCBmaWd1cmVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjAwNC4wOTIzN3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMDA0LjA5MjM3djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InEtYmlvLkJNIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uQk0iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJwaHlzaWNzLmJpby1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzE5MTEuMDIzNDZ2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDE5LTExLTA2VDEyOjUyOjU4WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAxOS0xMS0wNlQxMjo1Mjo1OFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5Lbm9ja2Rvd24gb2YgaHVtYW4gQU1QSyB1c2luZyB0aGUgQ1JJU1BSLUNhczkgZ2Vub21lLWVkaXRpbmcgc3lzdGVtPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgQU1QIGFjdGl2YXRlZCBwcm90ZWluIGtpbmFzZSAoQU1QSykgaXMgYSBjcml0aWNhbCBlbmVyZ3kgc2Vuc29yLCByZWd1bGF0aW5nCnNpZ25hbGluZyBuZXR3b3JrcyBpbnZvbHZlZCBpbiBwYXRob2xvZ3kgaW5jbHVkaW5nIG1ldGFib2xpYyBkaXNlYXNlcyBhbmQKY2FuY2VyLiBUaGlzIGluY3JlYXNpbmdseSByZWNvZ25pemVkIHJvbGUgb2YgQU1QSyBoYXMgcHJvbXB0ZWQgdHJlbWVuZG91cwpyZXNlYXJjaCBlZmZvcnRzIHRvIGRldmVsb3AgbmV3IHBoYXJtYWNvbG9naWNhbCBBTVBLIGFjdGl2YXRvcnMuIFRvIHByZWNpc2VseQpzdHVkeSB0aGUgcm9sZSBvZiBBTVBLLCBhbmQgdGhlIHNwZWNpZmljaXR5IGFuZCBhY3Rpdml0eSBvZiBBTVBLIGFjdGl2YXRvcnMgaW4KY2VsbHVsYXIgbW9kZWxzLCBnZW5ldGljIEFNUEsgaW5hY3RpdmF0aW5nIHRvb2xzIGFyZSByZXF1aXJlZC4gV2UgcmVwb3J0IGhlcmUKbWV0aG9kcyBmb3IgZ2VuZXRpYyBpbmFjdGl2YXRpb24gb2YgQU1QSyAkXGFscGhhMS8gXGFscGhhMiQgY2F0YWx5dGljIHN1YnVuaXRzCmluIGh1bWFuIGNlbGwgbGluZXMgYnkgdGhlIENSSVNQUi9DYXM5IHRlY2hub2xvZ3ksIGEgcmVjZW50IGJyZWFrdGhyb3VnaAp0ZWNobmlxdWUgZm9yIGdlbm9tZSBlZGl0aW5nLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BZHJpZW4gR3JlbmllcjwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+Q1JDTDwvYXJ4aXY6YWZmaWxpYXRpb24+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlBpZXJyZSBTdWpvYmVydDwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+Q1JDTDwvYXJ4aXY6YWZmaWxpYXRpb24+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlPDqXZlcmluZSBPbGl2aWVyPC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5JQyBVTTM8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Iw6lsw6huZSBHdWVybW91Y2hlPC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5JQyBVTTM8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Kb2hhbm5hIE1vbmRlc2lyPC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5JQyBVTTM8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5PbGl2aWVyIEtvc21pZGVyPC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5JQyBVTTM8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CZW5vaXQgVmlvbGxldDwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+RU1EPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SsOpcsO0bWUgVGFtYnVyaW5pPC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5JQyBVTTM8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6ZG9pIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+MTAuMTAwNy85NzgtMS00OTM5LTc1OTgtM18xMTwvYXJ4aXY6ZG9pPgogICAgPGxpbmsgdGl0bGU9ImRvaSIgaHJlZj0iaHR0cDovL2R4LmRvaS5vcmcvMTAuMTAwNy85NzgtMS00OTM5LTc1OTgtM18xMSIgcmVsPSJyZWxhdGVkIi8+CiAgICA8YXJ4aXY6am91cm5hbF9yZWYgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5NZXRob2RzIE1vbCBCaW9sLCAxNzMyLCBwcC4xNzEtMTk0LCAyMDE4PC9hcnhpdjpqb3VybmFsX3JlZj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzE5MTEuMDIzNDZ2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTkxMS4wMjM0NnYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWJpby5PVCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLk9UIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMTkwNC4wNjM3NXYyPC9pZD4KICAgIDx1cGRhdGVkPjIwMTktMDctMjRUMDA6MDU6MjBaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDE5LTA0LTEyVDE5OjAwOjI0WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPk1vbGVjdWxhciBzaW11bGF0aW9ucyBoYXZlIGJvb3N0ZWQga25vd2xlZGdlIG9mIENSSVNQUi9DYXM5OiBBIFJldmlldzwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIEdlbm9tZSBlZGl0aW5nIGFsbG93cyBzY2llbnRpc3RzIHRvIGNoYW5nZSBhbiBvcmdhbmlzbSdzIEROQS4gT25lIHByb21pc2luZwpnZW5vbWUgZWRpdGluZyBwcm90b2NvbCwgYWxyZWFkeSB2YWxpZGF0ZWQgaW4gbGl2aW5nIG9yZ2FuaXNtcywgaXMgYmFzZWQgb24KY2x1c3RlcmVkIHJlZ3VsYXJseSBpbnRlcnNwYWNlZCBzaG9ydCBwYWxpbmRyb21pYyByZXBlYXRzIChDUklTUFIpL0Nhcwpwcm90ZWluLW51Y2xlaWMgYWNpZCBjb21wbGV4ZXMuIFdoZW4gdGhlIENSSVNQUi9DYXMgYXBwcm9hY2ggd2FzIGZpcnN0CmRlbW9uc3RyYXRlZCBpbiAyMDEyLCBpdHMgYWR2YW50YWdlcyB3aXRoIHJlc3BlY3QgdG8gcHJldmlvdXNseSBhdmFpbGFibGUKdGVjaG5pcXVlcywgc3VjaCBhcyB6aW5jLWZpbmdlciBudWNsZWFzZXMgKFpGTnMpIGFuZCB0cmFuc2NyaXB0aW9uCmFjdGl2YXRvci1saWtlIGVmZmVjdG9yIG51Y2xlYXNlcyAoVEFMRU5zKSwgaW1tZWRpYXRlbHkgZ290IGF0dGVudGlvbiBhbmQgdGhlCm1ldGhvZCBoYXMgc2VlbiBhIHN1cmdlIG9mIGV4cGVyaW1lbnRhbCBhbmQgY29tcHV0YXRpb25hbCBpbnZlc3RpZ2F0aW9ucyBzaW5jZQp0aGVuLiBIb3dldmVyLCB0aGUgbW9sZWN1bGFyIG1lY2hhbmlzbXMgaW52b2x2ZWQgaW4gdGFyZ2V0IEROQSByZWNvZ25pdGlvbiBhbmQKY2xlYXZhZ2UgYXJlIHN0aWxsIG5vdCBjb21wbGV0ZWx5IHJlc29sdmVkIGFuZCBuZWVkIGZ1cnRoZXIgYXR0ZW50aW9uLiBUaGUKbGFyZ2Ugc2l6ZSBhbmQgY29tcGxleCBuYXR1cmUgb2YgQ1JJU1BSL0NhczkgY29tcGxleGVzIGhhcyBiZWVuIGEgY2hhbGxlbmdlIGZvcgpjb21wdXRhdGlvbmFsIHN0dWRpZXMsIGJ1dCBzb21lIHNlZWQgcmVzdWx0cyBleGlzdCBhbmQgYXJlIGlsbHVtaW5hdGluZyBvbiB0aGUKY2xlYXZhZ2UgYWN0aXZpdHkuIEluIHRoaXMgc2hvcnQgcmV2aWV3LCB3ZSBwcmVzZW50IHJlY2VudCBwcm9ncmVzcyBpbiBzdHVkeWluZwpDUklTUFIvQ2FzOSBzeXN0ZW1zIGJ5IG1vbGVjdWxhciBkeW5hbWljcyBzaW11bGF0aW9ucyB3aXRoIGNvYXJzZS1ncmFpbmVkIGFuZAphdG9taXN0aWMgZGVzY3JpcHRpb25zLCBpbmNsdWRpbmcgZW5oYW5jZWQgc2FtcGxpbmcuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFuZ2FuYSBSYXk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlJvc2EgRGkgRmVsaWNlPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPjI0IHBhZ2VzLCAxMCBmaWd1cmVzLCBmZXcgZmlndXJlcyBhcmUgZnJvbSBwcmV2aW91c2x5IHB1Ymxpc2hlZCB3b3JrCiAgZm9yIHdoaWNoIGFwcHJvcHJpYXRlIHBlcm1pc3Npb25zIGhhdmUgYmVlbiB0YWtlbjwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzE5MDQuMDYzNzV2MiIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMTkwNC4wNjM3NXYyIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJwaHlzaWNzLmJpby1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InBoeXNpY3MuYmlvLXBoIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uQk0iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8xOTA0LjAwMTE3djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAxOS0wMy0yOVQyMzoyNzozNlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMTktMDMtMjlUMjM6Mjc6MzZaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+RXN0aW1hdGlvbiBvZiBjZWxsIGxpbmVhZ2UgdHJlZXMgYnkgbWF4aW11bS1saWtlbGlob29kIHBoeWxvZ2VuZXRpY3M8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBDUklTUFIgdGVjaG5vbG9neSBoYXMgZW5hYmxlZCBsYXJnZS1zY2FsZSBjZWxsIGxpbmVhZ2UgdHJhY2luZyBmb3IgY29tcGxleAptdWx0aWNlbGx1bGFyIG9yZ2FuaXNtcyBieSBtdXRhdGluZyBzeW50aGV0aWMgZ2Vub21pYyBiYXJjb2RlcyBkdXJpbmcKb3JnYW5pc21hbCBkZXZlbG9wbWVudC4gSG93ZXZlciwgdGhlc2Ugc29waGlzdGljYXRlZCBiaW9sb2dpY2FsIHRvb2xzIGN1cnJlbnRseQp1c2UgYWQtaG9jIGFuZCBvdXRtb2RlZCBjb21wdXRhdGlvbmFsIG1ldGhvZHMgdG8gcmVjb25zdHJ1Y3QgdGhlIGNlbGwgbGluZWFnZQp0cmVlIGZyb20gdGhlIG11dGF0ZWQgYmFyY29kZXMuIEJlY2F1c2UgdGhlc2UgbWV0aG9kcyBhcmUgYWdub3N0aWMgdG8gdGhlCmJpb2xvZ2ljYWwgbWVjaGFuaXNtLCB0aGV5IGFyZSB1bmFibGUgdG8gdGFrZSBmdWxsIGFkdmFudGFnZSBvZiB0aGUgZGF0YSdzCnN0cnVjdHVyZS4gV2UgcHJvcG9zZSBhIHN0YXRpc3RpY2FsIG1vZGVsIGZvciB0aGUgbXV0YXRpb24gcHJvY2VzcyBhbmQgZGV2ZWxvcAphIHByb2NlZHVyZSB0byBlc3RpbWF0ZSB0aGUgdHJlZSB0b3BvbG9neSwgYnJhbmNoIGxlbmd0aHMsIGFuZCBtdXRhdGlvbgpwYXJhbWV0ZXJzIGJ5IGl0ZXJhdGl2ZWx5IGFwcGx5aW5nIHBlbmFsaXplZCBtYXhpbXVtIGxpa2VsaWhvb2QgZXN0aW1hdGlvbi4gSW4KY29udHJhc3QgdG8gZXhpc3RpbmcgdGVjaG5pcXVlcywgb3VyIG1ldGhvZCBlc3RpbWF0ZXMgdGltZSBhbG9uZyBlYWNoIGJyYW5jaCwKcmF0aGVyIHRoYW4gbnVtYmVyIG9mIG11dGF0aW9uIGV2ZW50cywgdGh1cyBwcm92aWRpbmcgYSBkZXRhaWxlZCBhY2NvdW50IG9mCnRpc3N1ZS10eXBlIGRpZmZlcmVudGlhdGlvbi4gVmlhIHNpbXVsYXRpb25zLCB3ZSBkZW1vbnN0cmF0ZSB0aGF0IG91ciBtZXRob2QgaXMKc3Vic3RhbnRpYWxseSBtb3JlIGFjY3VyYXRlIHRoYW4gZXhpc3RpbmcgYXBwcm9hY2hlcy4gT3VyIHJlY29uc3RydWN0ZWQgdHJlZXMKYWxzbyBiZXR0ZXIgcmVjYXBpdHVsYXRlIGtub3duIGFzcGVjdHMgb2YgemVicmFmaXNoIGRldmVsb3BtZW50IGFuZCByZXByb2R1Y2UKc2ltaWxhciByZXN1bHRzIGFjcm9zcyBmaXNoIHJlcGxpY2F0ZXMuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkplYW4gRmVuZzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+V2lsbGlhbSBTIERlV2l0dCBJSUk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFhcm9uIE1jS2VubmE8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk5vYWggU2ltb248L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFteSBXaWxsaXM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkZyZWRlcmljayBBIE1hdHNlbiBJVjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMTkwNC4wMDExN3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8xOTA0LjAwMTE3djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InEtYmlvLlFNIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uUU0iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJzdGF0LkFQIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMTkwMy4xMjE5OXYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMTktMDMtMjhUMTg6MDU6MjlaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDE5LTAzLTI4VDE4OjA1OjI5WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPlN0cmFuZCBkaXNwbGFjZW1lbnQ6IGEgZnVuZGFtZW50YWwgbWVjaGFuaXNtIGluIFJOQSBiaW9sb2d5PzwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIEROQSBhbmQgUk5BIGFyZSBnZW5lcmFsbHkgcmVnYXJkZWQgYXMgY2VudHJhbCBtb2xlY3VsZXMgaW4gbW9sZWN1bGFyIGJpb2xvZ3kuClJlY2VudCBhZHZhbmNlbWVudHMgaW4gdGhlIGZpZWxkIG9mIEROQS9STkEgbmFub3RlY2hub2xvZ3kgc3VjY2Vzc2Z1bGx5IHVzZWQKRE5BL1JOQSBhcyBwcm9ncmFtbWFibGUgbW9sZWN1bGVzIHRvIGNvbnN0cnVjdCBtb2xlY3VsYXIgbWFjaGluZXMgYW5kCm5hbm9zdHJ1Y3R1cmVzIHdpdGggcHJlZGVmaW5lZCBzaGFwZXMgYW5kIGZ1bmN0aW9ucy4gVGhlIGtleSBtZWNoYW5pc20gZm9yCmR5bmFtaWMgY29udHJvbCBvZiB0aGUgY29uZm9ybWF0aW9ucyBvZiB0aGVzZSBETkEvUk5BIG5hbm9kZXZpY2VzIGlzIGEgcmVhY3Rpb24KY2FsbGVkIHN0cmFuZCBkaXNwbGFjZW1lbnQsIGluIHdoaWNoIG9uZSBzdHJhbmQgaW4gYSBmb3JtZWQgZHVwbGV4IGlzIHJlcGxhY2VkCmJ5IGEgdGhpcmQgaW52YWRpbmcgc3RyYW5kLiBXaGlsZSBETkEvUk5BIHN0cmFuZCBkaXNwbGFjZW1lbnQgaGFzIG1haW5seSBiZWVuCnVzZWQgdG8gZGUtbm92byBkZXNpZ24gbW9sZWN1bGFyIGRldmljZXMsIHdlIGFyZ3VlIGluIHRoaXMgcmV2aWV3IHRoYXQgdGhpcwpyZWFjdGlvbiBpcyBhbHNvIGxpa2VseSB0byBwbGF5IGEga2V5IHJvbGUgaW4gbXVsdGlwbGUgY2VsbHVsYXIgZXZlbnRzIHN1Y2ggYXMKZ2VuZSByZWNvbWJpbmF0aW9uLCBDUklTUFItYmFzZWQgZ2Vub21lIGVkaXRpbmcsIGFuZCBSTkEgY290cmFuc2NyaXB0aW9uYWwKZm9sZGluZy4gV2UgaW50cm9kdWNlIHRoZSBnZW5lcmFsIG1lY2hhbmlzbSBvZiBzdHJhbmQgZGlzcGxhY2VtZW50IHJlYWN0aW9uLApnaXZlIGV4YW1wbGVzIG9mIGl0cyB1c2UgaW4gdGhlIGNvbnN0cnVjdGlvbiBvZiBtb2xlY3VsYXIgbWFjaGluZXMsIGFuZCBmaW5hbGx5CnJldmlldyBuYXR1cmFsIHByb2Nlc3NlcyBoYXZpbmcgY2hhcmFjdGVyaXN0aWMgd2hpY2ggc3VnZ2VzdCB0aGF0IHN0cmFuZApkaXNwbGFjZW1lbnQgaXMgb2NjdXJyaW5nLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5GYW4gSG9uZzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+UGV0ciDFoHVsYzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMTkwMy4xMjE5OXYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8xOTAzLjEyMTk5djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InEtYmlvLkJNIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uQk0iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJwaHlzaWNzLmJpby1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLk1OIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KPC9mZWVkPgo=
  recorded_at: Sun, 22 Aug 2021 23:18:31 GMT
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22crispr%22%20OR%20abs:%22crispr%22&sortBy=submittedDate&sortOrder=descending&start=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 22 Aug 2021 23:18:19 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '6795'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 22 Aug 2021 23:18:34 GMT
recorded_with: VCR 6.0.0
