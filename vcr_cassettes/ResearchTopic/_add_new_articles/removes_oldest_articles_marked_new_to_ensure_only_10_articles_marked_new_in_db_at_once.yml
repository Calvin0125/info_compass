---
http_interactions:
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22artificial%20intelligence%22%20OR%20abs:%22artificial%20intelligence%22&sortBy=submittedDate&sortOrder=descending&start=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 21 Aug 2021 18:55:48 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '8012'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 21 Aug 2021 18:56:03 GMT
recorded_with: VCR 6.0.0
