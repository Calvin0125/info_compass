---
http_interactions:
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22artificial%20intelligence%22%20OR%20abs:%22artificial%20intelligence%22&sortBy=submittedDate&sortOrder=descending&start=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 10 Jun 2021 19:26:07 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '6916'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZlZWQgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSI+CiAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hcGkvcXVlcnk/c2VhcmNoX3F1ZXJ5JTNEdGklM0ElMjJhcnRpZmljaWFsJTIwaW50ZWxsaWdlbmNlJTIyJTIwT1IlMjBhYnMlM0ElMjJhcnRpZmljaWFsJTIwaW50ZWxsaWdlbmNlJTIyJTI2aWRfbGlzdCUzRCUyNnN0YXJ0JTNEMCUyNm1heF9yZXN1bHRzJTNEMTAiIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vYXRvbSt4bWwiLz4KICA8dGl0bGUgdHlwZT0iaHRtbCI+QXJYaXYgUXVlcnk6IHNlYXJjaF9xdWVyeT10aToiYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UiIE9SIGFiczoiYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UiJmFtcDtpZF9saXN0PSZhbXA7c3RhcnQ9MCZhbXA7bWF4X3Jlc3VsdHM9MTA8L3RpdGxlPgogIDxpZD5odHRwOi8vYXJ4aXYub3JnL2FwaS9qcEJBeFJWVzdnRFErNnFsUUE3dy9uajhGc0E8L2lkPgogIDx1cGRhdGVkPjIwMjEtMDYtMTBUMDA6MDA6MDAtMDQ6MDA8L3VwZGF0ZWQ+CiAgPG9wZW5zZWFyY2g6dG90YWxSZXN1bHRzIHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+NDU2ODwvb3BlbnNlYXJjaDp0b3RhbFJlc3VsdHM+CiAgPG9wZW5zZWFyY2g6c3RhcnRJbmRleCB4bWxuczpvcGVuc2VhcmNoPSJodHRwOi8vYTkuY29tLy0vc3BlYy9vcGVuc2VhcmNoLzEuMS8iPjA8L29wZW5zZWFyY2g6c3RhcnRJbmRleD4KICA8b3BlbnNlYXJjaDppdGVtc1BlclBhZ2UgeG1sbnM6b3BlbnNlYXJjaD0iaHR0cDovL2E5LmNvbS8tL3NwZWMvb3BlbnNlYXJjaC8xLjEvIj4xMDwvb3BlbnNlYXJjaDppdGVtc1BlclBhZ2U+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDUwMzd2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA5VDEyOjUxOjQwWjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wOVQxMjo1MTo0MFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5BIGdlbmVyYWwgYXBwcm9hY2ggZm9yIEV4cGxhbmF0aW9ucyBpbiB0ZXJtcyBvZiBNaWRkbGUgTGV2ZWwgRmVhdHVyZXM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBOb3dhZGF5cywgaXQgaXMgZ3Jvd2luZyBpbnRlcmVzdCB0byBtYWtlIE1hY2hpbmUgTGVhcm5pbmcgKE1MKSBzeXN0ZW1zIG1vcmUKdW5kZXJzdGFuZGFibGUgYW5kIHRydXN0aW5nIHRvIGdlbmVyYWwgdXNlcnMuIFRodXMsIGdlbmVyYXRpbmcgZXhwbGFuYXRpb25zIGZvcgpNTCBzeXN0ZW0gYmVoYXZpb3VycyB0aGF0IGFyZSB1bmRlcnN0YW5kYWJsZSB0byBodW1hbiBiZWluZ3MgaXMgYSBjZW50cmFsCnNjaWVudGlmaWMgYW5kIHRlY2hub2xvZ2ljYWwgaXNzdWUgYWRkcmVzc2VkIGJ5IHRoZSByYXBpZGx5IGdyb3dpbmcgcmVzZWFyY2gKYXJlYSBvZiBlWHBsYWluYWJsZSBBcnRpZmljaWFsIEludGVsbGlnZW5jZSAoWEFJKS4gUmVjZW50bHksIGl0IGlzIGJlY29taW5nCm1vcmUgYW5kIG1vcmUgZXZpZGVudCB0aGF0IG5ldyBkaXJlY3Rpb25zIHRvIGNyZWF0ZSBiZXR0ZXIgZXhwbGFuYXRpb25zIHNob3VsZAp0YWtlIGludG8gYWNjb3VudCB3aGF0IGEgZ29vZCBleHBsYW5hdGlvbiBpcyB0byBhIGh1bWFuIHVzZXIsIGFuZCBjb25zZXF1ZW50bHksCmRldmVsb3AgWEFJIHNvbHV0aW9ucyBhYmxlIHRvIHByb3ZpZGUgdXNlci1jZW50cmVkIGV4cGxhbmF0aW9ucy4gVGhpcyBwYXBlcgpzdWdnZXN0cyB0YWtpbmcgYWR2YW50YWdlIG9mIGRldmVsb3BpbmcgYW4gWEFJIGdlbmVyYWwgYXBwcm9hY2ggdGhhdCBhbGxvd3MKcHJvZHVjaW5nIGV4cGxhbmF0aW9ucyBmb3IgYW4gTUwgc3lzdGVtIGJlaGF2aW91ciBpbiB0ZXJtcyBvZiBkaWZmZXJlbnQgYW5kCnVzZXItc2VsZWN0ZWQgaW5wdXQgZmVhdHVyZXMsIGkuZS4sIGV4cGxhbmF0aW9ucyBjb21wb3NlZCBvZiBpbnB1dCBwcm9wZXJ0aWVzCnRoYXQgdGhlIGh1bWFuIHVzZXIgY2FuIHNlbGVjdCBhY2NvcmRpbmcgdG8gaGlzIGJhY2tncm91bmQga25vd2xlZGdlIGFuZCBnb2Fscy4KVG8gdGhpcyBlbmQsIHdlIHByb3Bvc2UgYW4gWEFJIGdlbmVyYWwgYXBwcm9hY2ggd2hpY2ggaXMgYWJsZTogMSkgdG8gY29uc3RydWN0CmV4cGxhbmF0aW9ucyBpbiB0ZXJtcyBvZiBpbnB1dCBmZWF0dXJlcyB0aGF0IHJlcHJlc2VudCBtb3JlIHNhbGllbnQgYW5kCnVuZGVyc3RhbmRhYmxlIGlucHV0IHByb3BlcnRpZXMgZm9yIGEgdXNlciwgd2hpY2ggd2UgY2FsbCBoZXJlIE1pZGRsZS1MZXZlbAppbnB1dCBGZWF0dXJlcyAoTUxGcyksIDIpIHRvIGJlIGFwcGxpZWQgdG8gZGlmZmVyZW50IHR5cGVzIG9mIE1MRnMuIFdlCmV4cGVyaW1lbnRhbGx5IHRlc3RlZCBvdXIgYXBwcm9hY2ggb24gdHdvIGRpZmZlcmVudCBkYXRhc2V0cyBhbmQgdXNpbmcgdGhyZWUKZGlmZmVyZW50IHR5cGVzIG9mIE1MRnMuIFRoZSByZXN1bHRzIHNlZW0gZW5jb3VyYWdpbmcuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFuZHJlYSBBcGljZWxsYTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RnJhbmNlc2NvIElzZ3LDsjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Um9iZXJ0byBQcmV2ZXRlPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPlRoaXMgd29yayBoYXMgYmVlbiBzdWJtaXR0ZWQgdG8gdGhlIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlIEpvdXJuYWwKICBmb3IgcG9zc2libGUgcHVibGljYXRpb248L2FyeGl2OmNvbW1lbnQ+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjA1MDM3djEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDUwMzd2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5MRyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkFJIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wNDg1M3YxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMDlUMDc6MjU6MjZaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTA5VDA3OjI1OjI2WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkRyYXZpZGlhbk11bHRpTW9kYWxpdHk6IEEgRGF0YXNldCBmb3IgTXVsdGktbW9kYWwgU2VudGltZW50IEFuYWx5c2lzIGluCiAgVGFtaWwgYW5kIE1hbGF5YWxhbTwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIEh1bWFuIGNvbW11bmljYXRpb24gaXMgaW5oZXJlbnRseSBtdWx0aW1vZGFsIGFuZCBhc3luY2hyb25vdXMuIEFuYWx5emluZwpodW1hbiBlbW90aW9ucyBhbmQgc2VudGltZW50IGlzIGFuIGVtZXJnaW5nIGZpZWxkIG9mIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLgpXZSBhcmUgd2l0bmVzc2luZyBhbiBpbmNyZWFzaW5nIGFtb3VudCBvZiBtdWx0aW1vZGFsIGNvbnRlbnQgaW4gbG9jYWwgbGFuZ3VhZ2VzCm9uIHNvY2lhbCBtZWRpYSBhYm91dCBwcm9kdWN0cyBhbmQgb3RoZXIgdG9waWNzLiBIb3dldmVyLCB0aGVyZSBhcmUgbm90IG1hbnkKbXVsdGltb2RhbCByZXNvdXJjZXMgYXZhaWxhYmxlIGZvciB1bmRlci1yZXNvdXJjZWQgRHJhdmlkaWFuIGxhbmd1YWdlcy4gT3VyCnN0dWR5IGFpbXMgdG8gY3JlYXRlIGEgbXVsdGltb2RhbCBzZW50aW1lbnQgYW5hbHlzaXMgZGF0YXNldCBmb3IgdGhlCnVuZGVyLXJlc291cmNlZCBUYW1pbCBhbmQgTWFsYXlhbGFtIGxhbmd1YWdlcy4gRmlyc3QsIHdlIGRvd25sb2FkZWQgcHJvZHVjdCBvcgptb3ZpZXMgcmV2aWV3IHZpZGVvcyBmcm9tIFlvdVR1YmUgZm9yIFRhbWlsIGFuZCBNYWxheWFsYW0uIE5leHQsIHdlIGNyZWF0ZWQKY2FwdGlvbnMgZm9yIHRoZSB2aWRlb3Mgd2l0aCB0aGUgaGVscCBvZiBhbm5vdGF0b3JzLiBUaGVuIHdlIGxhYmVsbGVkIHRoZQp2aWRlb3MgZm9yIHNlbnRpbWVudCwgYW5kIHZlcmlmaWVkIHRoZSBpbnRlci1hbm5vdGF0b3IgYWdyZWVtZW50IHVzaW5nIEZsZWlzcydzCkthcHBhLiBUaGlzIGlzIHRoZSBmaXJzdCBtdWx0aW1vZGFsIHNlbnRpbWVudCBhbmFseXNpcyBkYXRhc2V0IGZvciBUYW1pbCBhbmQKTWFsYXlhbGFtIGJ5IHZvbHVudGVlciBhbm5vdGF0b3JzLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CaGFyYXRoaSBSYWphIENoYWtyYXZhcnRoaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SmlzaG51IFBhcmFtZXN3YXJhbiBQLiBLPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5QcmVtaml0aCBCPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LLiBQIFNvbWFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5SYWh1bCBQb25udXNhbXk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlByYXNhbm5hIEt1bWFyIEt1bWFyZXNhbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+S2luZ3N0b24gUGFsIFRoYW1idXJhajwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Sm9obiBQLiBNY0NyYWU8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+MzE8L2FyeGl2OmNvbW1lbnQ+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjA0ODUzdjEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDQ4NTN2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iY3MuQ0wiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5DTCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQ1NTR2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA4VDE3OjQzOjA4WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wOFQxNzo0MzowOFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5BIFN1cnZleSBvZiBUcmFuc2Zvcm1lcnM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBUcmFuc2Zvcm1lcnMgaGF2ZSBhY2hpZXZlZCBncmVhdCBzdWNjZXNzIGluIG1hbnkgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UKZmllbGRzLCBzdWNoIGFzIG5hdHVyYWwgbGFuZ3VhZ2UgcHJvY2Vzc2luZywgY29tcHV0ZXIgdmlzaW9uLCBhbmQgYXVkaW8KcHJvY2Vzc2luZy4gVGhlcmVmb3JlLCBpdCBpcyBuYXR1cmFsIHRvIGF0dHJhY3QgbG90cyBvZiBpbnRlcmVzdCBmcm9tIGFjYWRlbWljCmFuZCBpbmR1c3RyeSByZXNlYXJjaGVycy4gVXAgdG8gdGhlIHByZXNlbnQsIGEgZ3JlYXQgdmFyaWV0eSBvZiBUcmFuc2Zvcm1lcgp2YXJpYW50cyAoYS5rLmEuIFgtZm9ybWVycykgaGF2ZSBiZWVuIHByb3Bvc2VkLCBob3dldmVyLCBhIHN5c3RlbWF0aWMgYW5kCmNvbXByZWhlbnNpdmUgbGl0ZXJhdHVyZSByZXZpZXcgb24gdGhlc2UgVHJhbnNmb3JtZXIgdmFyaWFudHMgaXMgc3RpbGwgbWlzc2luZy4KSW4gdGhpcyBzdXJ2ZXksIHdlIHByb3ZpZGUgYSBjb21wcmVoZW5zaXZlIHJldmlldyBvZiB2YXJpb3VzIFgtZm9ybWVycy4gV2UKZmlyc3QgYnJpZWZseSBpbnRyb2R1Y2UgdGhlIHZhbmlsbGEgVHJhbnNmb3JtZXIgYW5kIHRoZW4gcHJvcG9zZSBhIG5ldyB0YXhvbm9teQpvZiBYLWZvcm1lcnMuIE5leHQsIHdlIGludHJvZHVjZSB0aGUgdmFyaW91cyBYLWZvcm1lcnMgZnJvbSB0aHJlZSBwZXJzcGVjdGl2ZXM6CmFyY2hpdGVjdHVyYWwgbW9kaWZpY2F0aW9uLCBwcmUtdHJhaW5pbmcsIGFuZCBhcHBsaWNhdGlvbnMuIEZpbmFsbHksIHdlIG91dGxpbmUKc29tZSBwb3RlbnRpYWwgZGlyZWN0aW9ucyBmb3IgZnV0dXJlIHJlc2VhcmNoLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5UaWFueWFuZyBMaW48L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPll1eGluIFdhbmc8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlhpYW5neWFuZyBMaXU8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlhpcGVuZyBRaXU8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQ1NTR2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wNDU1NHYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5MRyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQUkiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5DTCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQ0OTR2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA4VDE2OjI3OjU1WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wOFQxNjoyNzo1NVo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5PcHRpbWl6YXRpb24gb2YgU2VydmljZSBBZGRpdGlvbiBpbiBNdWx0aWxldmVsIEluZGV4IE1vZGVsIGZvciBFZGdlCiAgQ29tcHV0aW5nPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgV2l0aCB0aGUgZGV2ZWxvcG1lbnQgb2YgRWRnZSBDb21wdXRpbmcgYW5kIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlIChBSSkKdGVjaG5vbG9naWVzLCBlZGdlIGRldmljZXMgYXJlIHdpdG5lc3NlZCB0byBnZW5lcmF0ZSBkYXRhIGF0IHVucHJlY2VkZW50ZWQKdm9sdW1lLiBUaGUgRWRnZSBJbnRlbGxpZ2VuY2UgKEVJKSBoYXMgbGVkIHRvIHRoZSBlbWVyZ2VuY2Ugb2YgZWRnZSBkZXZpY2VzIGluCnZhcmlvdXMgYXBwbGljYXRpb24gZG9tYWlucy4gVGhlIEVJIGNhbiBwcm92aWRlIGVmZmljaWVudCBzZXJ2aWNlcyB0bwpkZWxheS1zZW5zaXRpdmUgYXBwbGljYXRpb25zLCB3aGVyZSB0aGUgZWRnZSBkZXZpY2VzIGFyZSBkZXBsb3llZCBhcyBlZGdlIG5vZGVzCnRvIGhvc3QgdGhlIG1ham9yaXR5IG9mIGV4ZWN1dGlvbiwgd2hpY2ggY2FuIGVmZmVjdGl2ZWx5IG1hbmFnZSBzZXJ2aWNlcyBhbmQKaW1wcm92ZSBzZXJ2aWNlIGRpc2NvdmVyeSBlZmZpY2llbmN5LiBUaGUgbXVsdGlsZXZlbCBpbmRleCBtb2RlbCBpcyBhCndlbGwta25vd24gbW9kZWwgdXNlZCBmb3IgaW5kZXhpbmcgc2VydmljZSwgc3VjaCBhIG1vZGVsIGlzIGJlaW5nIGludHJvZHVjZWQKYW5kIG9wdGltaXplZCBpbiB0aGUgZWRnZSBlbnZpcm9ubWVudHMgdG8gZWZmaWNpZW50bHkgc2VydmljZXMgZGlzY292ZXJ5IHdoaWxzdAptYW5hZ2luZyBsYXJnZSB2b2x1bWVzIG9mIGRhdGEuIEhvd2V2ZXIsIGVmZmVjdGl2ZWx5IHVwZGF0aW5nIHRoZSBtdWx0aWxldmVsCmluZGV4IG1vZGVsIGJ5IGFkZGluZyBuZXcgc2VydmljZXMgdGltZWx5IGFuZCBwcmVjaXNlbHkgaW4gdGhlIGR5bmFtaWMgRWRnZQpDb21wdXRpbmcgZW52aXJvbm1lbnRzIGlzIHN0aWxsIGEgY2hhbGxlbmdlLiBBZGRyZXNzaW5nIHRoaXMgaXNzdWUsIHRoaXMgcGFwZXIKcHJvcG9zZXMgYSBkZXNpZ25hdGVkIGtleSBzZWxlY3Rpb24gbWV0aG9kIHRvIGltcHJvdmUgdGhlIGVmZmljaWVuY3kgb2YgYWRkaW5nCnNlcnZpY2VzIGluIHRoZSBtdWx0aWxldmVsIGluZGV4IG1vZGVscy4gT3VyIGV4cGVyaW1lbnRhbCByZXN1bHRzIHNob3cgdGhhdCBpbgp0aGUgcGFydGlhbCBpbmRleCBhbmQgdGhlIGZ1bGwgaW5kZXggb2YgbXVsdGlsZXZlbCBpbmRleCBtb2RlbCwgb3VyIG1ldGhvZApyZWR1Y2VzIHRoZSBzZXJ2aWNlIGFkZGl0aW9uIHRpbWUgYnkgYXJvdW5kIDg0JSBhbmQgNzYlLCByZXNwZWN0aXZlbHkgd2hlbgpjb21wYXJlZCB3aXRoIHRoZSBvcmlnaW5hbCBrZXkgc2VsZWN0aW9uIG1ldGhvZCBhbmQgYnkgYXJvdW5kIDc4JSBhbmQgNjYlLApyZXNwZWN0aXZlbHkgd2hlbiBjb21wYXJlZCB3aXRoIHRoZSByYW5kb20gc2VsZWN0aW9uIG1ldGhvZC4gT3VyIHByb3Bvc2VkCm1ldGhvZCBzaWduaWZpY2FudGx5IGltcHJvdmVzIHRoZSBzZXJ2aWNlIGFkZGl0aW9uIGVmZmljaWVuY3kgaW4gdGhlIG11bHRpbGV2ZWwKaW5kZXggbW9kZWwsIHdoZW4gY29tcGFyZWQgd2l0aCBleGlzdGluZyBzdGF0ZS1vZi10aGUtYXJ0IGtleSBzZWxlY3Rpb24KbWV0aG9kcywgd2l0aG91dCBjb21wcm9taXNpbmcgdGhlIHNlcnZpY2UgcmV0cmlldmFsIHN0YWJpbGl0eSB0byBhbnkgbm90YWJsZQpsZXZlbC4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SmlheWFuIEd1PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5ZYW4gV3U8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFzaGlxIEFuanVtPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Kb2huIFBhbm5lZXJzZWx2YW08L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPllhbyBMdTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Qm8gWXVhbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wNDQ5NHYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjA0NDk0djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLklSIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuSVIiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjA0MzM4djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wOFQxMzo1NToxOVo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDhUMTM6NTU6MTlaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+RW5naW5lcyBvZiBQb3dlcjogRWxlY3RyaWNpdHksIEFJLCBhbmQgR2VuZXJhbC1QdXJwb3NlIE1pbGl0YXJ5CiAgVHJhbnNmb3JtYXRpb25zPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgTWFqb3IgdGhlb3JpZXMgb2YgbWlsaXRhcnkgaW5ub3ZhdGlvbiBmb2N1cyBvbiByZWxhdGl2ZWx5IG5hcnJvdwp0ZWNobm9sb2dpY2FsIGRldmVsb3BtZW50cywgc3VjaCBhcyBudWNsZWFyIHdlYXBvbnMgb3IgYWlyY3JhZnQgY2FycmllcnMuCkFyZ3VhYmx5IHRoZSBtb3N0IHByb2ZvdW5kIG1pbGl0YXJ5IGltcGxpY2F0aW9ucyBvZiB0ZWNobm9sb2dpY2FsIGNoYW5nZSwKaG93ZXZlciwgY29tZSBmcm9tIG1vcmUgZnVuZGFtZW50YWwgYWR2YW5jZXMgYXJpc2luZyBmcm9tIGdlbmVyYWwgcHVycG9zZQp0ZWNobm9sb2dpZXMsIHN1Y2ggYXMgdGhlIHN0ZWFtIGVuZ2luZSwgZWxlY3RyaWNpdHksIGFuZCB0aGUgY29tcHV0ZXIuIFdpdGggZmV3CmV4Y2VwdGlvbnMsIHBvbGl0aWNhbCBzY2llbnRpc3RzIGhhdmUgbm90IHRoZW9yaXplZCBhYm91dCBHUFRzLiBEcmF3aW5nIGZyb20KdGhlIGVjb25vbWljcyBsaXRlcmF0dXJlIG9uIEdQVHMsIHdlIGRpc3RpbGwgc2V2ZXJhbCBwcm9wb3NpdGlvbnMgb24gaG93IGFuZAp3aGVuIEdQVHMgYWZmZWN0IG1pbGl0YXJ5IGFmZmFpcnMuIFdlIGNhbGwgdGhlc2UgZWZmZWN0cyBnZW5lcmFsLXB1cnBvc2UKbWlsaXRhcnkgdHJhbnNmb3JtYXRpb25zLiBJbiBwYXJ0aWN1bGFyLCB3ZSBhcmd1ZSB0aGF0IHRoZSBpbXBhY3RzIG9mIEdNVHMgb24KbWlsaXRhcnkgZWZmZWN0aXZlbmVzcyBhcmUgYnJvYWQsIGRlbGF5ZWQsIGFuZCBzaGFwZWQgYnkgaW5kaXJlY3QgcHJvZHVjdGl2aXR5CnNwaWxsb3ZlcnMuIEFkZGl0aW9uYWxseSwgR01UcyBkaWZmZXJlbnRpYWxseSBhZHZhbnRhZ2UgdGhvc2UgbWlsaXRhcmllcyB0aGF0CmNhbiBkcmF3IGZyb20gYSByb2J1c3QgaW5kdXN0cmlhbCBiYXNlIGluIHRoZSBHUFQuIFRvIGlsbHVzdHJhdGUgdGhlCmV4cGxhbmF0b3J5IHZhbHVlIG9mIG91ciB0aGVvcnksIHdlIGNvbmR1Y3QgYSBjYXNlIHN0dWR5IG9mIHRoZSBtaWxpdGFyeQpjb25zZXF1ZW5jZXMgb2YgZWxlY3RyaWNpdHksIHRoZSBwcm90b3R5cGljYWwgR1BULiBGaW5hbGx5LCB3ZSBhcHBseSBvdXIKZmluZGluZ3MgdG8gYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIHdoaWNoIHdpbGwgcGxhdXNpYmx5IGNhdXNlIGEgcHJvZm91bmQKZ2VuZXJhbC1wdXJwb3NlIG1pbGl0YXJ5IHRyYW5zZm9ybWF0aW9uLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5KZWZmcmV5IERpbmc8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFsbGFuIERhZm9lPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjA0MzM4djEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDQzMzh2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iZWNvbi5HTiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImVjb24uR04iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJxLWZpbi5FQyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQyMTB2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA4VDA5OjQyOjA1WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wOFQwOTo0MjowNVo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5EZWZpbmluZyBkZWZpbml0aW9uOiBhIFRleHQgbWluaW5nIEFwcHJvYWNoIHRvIERlZmluZSBJbm5vdmF0aXZlCiAgVGVjaG5vbG9naWNhbCBGaWVsZHM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBPbmUgb2YgdGhlIGZpcnN0IHRhc2sgb2YgYW4gaW5ub3ZhdGl2ZSBwcm9qZWN0IGlzIGRlbGluZWF0aW5nIHRoZSBzY29wZSBvZgp0aGUgcHJvamVjdCBpdHNlbGYgb3Igb2YgdGhlIHByb2R1Y3Qvc2VydmljZSB0byBiZSBkZXZlbG9wZWQuIEEgd3Jvbmcgc2NvcGUKZGVmaW5pdGlvbiBjYW4gZGV0ZXJtaW5lIChpbiB0aGUgd29yc3QgY2FzZSkgcHJvamVjdCBmYWlsdXJlLiBBIGdvb2Qgc2NvcGUKZGVmaW5pdGlvbiBiZWNvbWUgZXZlbiBtb3JlIHJlbGV2YW50IGluIHRlY2hub2xvZ2ljYWwgaW50ZW5zaXZlIGlubm92YXRpb24KcHJvamVjdHMsIG5vd2FkYXlzIGNoYXJhY3Rlcml6ZWQgYnkgYSBoaWdobHkgZHluYW1pYyBtdWx0aWRpc2NpcGxpbmFyeSwKdHVyYnVsZW50IGFuZCB1bmNlcnRhaW4gZW52aXJvbm1lbnQuIEluIHRoZXNlIGNhc2VzLCB0aGUgYm91bmRhcmllcyBvZiB0aGUKcHJvamVjdCBhcmUgbm90IGVhc2lseSBkZXRlY3RhYmxlIGFuZCBpdCBpcyBkaWZmaWN1bHQgdG8gZGVjaWRlIHdoYXQgaXQgaXMKaW4tc2NvcGUgYW5kIG91dC1vZi1zY29wZS4gVGhlIHByZXNlbnQgd29yayBwcm9wb3NlcyBhIHRvb2wgZm9yIHRoZSBzY29wZQpkZWxpbmVhdGlvbiBwcm9jZXNzLCB0aGF0IGF1dG9tYXRpY2FsbHkgZGVmaW5lIGFuIGlubm92YXRpdmUgdGVjaG5vbG9naWNhbApmaWVsZCBvciBhIG5ldyB0ZWNobm9sb2d5LiBUaGUgdG9vbCBpcyBiYXNlZCBvbiBUZXh0IE1pbmluZyBhbGdvcml0aG0gdGhhdApleHBsb2l0cyBFbHNldmllcidzIFNjb3B1cyBhYnN0cmFjdHMgaW4gb3JkZXIgdG8gdGhlIGV4dHJhY3QgcmVsZXZhbnQgZGF0YSB0bwpkZWZpbmUgYSB0ZWNobm9sb2dpY2FsIHNjb3BlLiBUaGUgYXV0b21hdGljIGRlZmluaXRpb24gdG9vbCBpcyB0aGVuIGFwcGxpZWQgb24KZm91ciBjYXNlIHN0dWRpZXM6IEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlIGFuZCBEYXRhIFNjaWVuY2UuIFRoZSByZXN1bHRzIHNob3cKaG93IHRoZSB0b29sIGNhbiBwcm92aWRlIG1hbnkgY3J1Y2lhbCBpbmZvcm1hdGlvbiBpbiB0aGUgZGVmaW5pdGlvbiBwcm9jZXNzIG9mCmEgdGVjaG5vbG9naWNhbCBmaWVsZC4gSW4gcGFydGljdWxhciBmb3IgdGhlIHRhcmdldCB0ZWNobm9sb2dpY2FsIGZpZWxkIChvcgp0ZWNobm9sb2d5KSwgaXQgcHJvdmlkZXMgdGhlIGRlZmluaXRpb24gYW5kIG90aGVyIGVsZW1lbnRzIHJlbGF0ZWQgdG8gdGhlCnRhcmdldC4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Vml0byBHaW9yZGFubzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RmlsaXBwbyBDaGlhcmVsbG88L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkVsZW5hIENlcnZlbGxpPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6am91cm5hbF9yZWYgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5SJmFtcDtEIE1BTkFHRU1FTlQgQ09ORkVSRU5DRSAyMDE5IC0gREFUQSBTQ0lFTkNFIEZPUiBJTk5PVkFUSU9OIFImYW1wO0QKICBNQU5BR0VNRU5UIENPTkZFUkVOQ0UgMjAxOSAtIERBVEEgU0NJRU5DRSBGT1IgSU5OT1ZBVElPTiBSJmFtcDtEIE1hbmFnZW1lbnQKICBDb25mZXJlbmNlIDIwMjEgLSBEYXRhIFNjaWVuY2UgZm9yIElubm92YXRvcG08L2FyeGl2OmpvdXJuYWxfcmVmPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wNDIxMHYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjA0MjEwdjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLklSIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuSVIiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJzdGF0Lk1MIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMzkwNXYyPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMDlUMTU6NDE6MDBaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTA3VDE4OjMyOjMxWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkF1dG9QdG9zaXM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBCbGVwaGFyb3B0b3Npcywgb3IgcHRvc2lzIGFzIGl0IGlzIG1vcmUgY29tbW9ubHkgcmVmZXJyZWQgdG8sIGlzIGEgY29uZGl0aW9uCm9mIHRoZSBleWVsaWQgd2hlcmUgdGhlIHVwcGVyIGV5ZWxpZCBkcm9vcHMuIFRoZSBjdXJyZW50IGRpYWdub3NpcyBmb3IgcHRvc2lzCmludm9sdmVzIGN1bWJlcnNvbWUgbWFudWFsIG1lYXN1cmVtZW50cyB0aGF0IGFyZSB0aW1lLWNvbnN1bWluZyBhbmQgcHJvbmUgdG8KaHVtYW4gZXJyb3IuIEluIHRoaXMgcGFwZXIsIHdlIHByZXNlbnQgQXV0b1B0b3NpcywgYW4gYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UKYmFzZWQgc3lzdGVtIHdpdGggaW50ZXJwcmV0YWJsZSByZXN1bHRzIGZvciByYXBpZCBkaWFnbm9zaXMgb2YgcHRvc2lzLiBXZQp1dGlsaXplIGEgZGl2ZXJzZSBkYXRhc2V0IGNvbGxlY3RlZCBmcm9tIHRoZSBJbGxpbm9pcyBPcGh0aGFsbWljIERhdGFiYXNlIEF0bGFzCihJLU9EQSkgdG8gZGV2ZWxvcCBhIHJvYnVzdCBkZWVwIGxlYXJuaW5nIG1vZGVsIGZvciBwcmVkaWN0aW9uIGFuZCBhbHNvIGRldmVsb3AKYSBjbGluaWNhbGx5IGluc3BpcmVkIG1vZGVsIHRoYXQgY2FsY3VsYXRlcyB0aGUgbWFyZ2luYWwgcmVmbGV4IGRpc3RhbmNlIGFuZAppcmlzIHJhdGlvLiBBdXRvUHRvc2lzIGFjaGlldmVkIDk1LjUlIGFjY3VyYWN5IG9uIHBoeXNpY2lhbiB2ZXJpZmllZCBkYXRhIHRoYXQKaGFkIGFuIGVxdWFsIGNsYXNzIGJhbGFuY2UuIFRoZSBwcm9wb3NlZCBhbGdvcml0aG0gY2FuIGhlbHAgaW4gdGhlIHJhcGlkIGFuZAp0aW1lbHkgZGlhZ25vc2lzIG9mIHB0b3Npcywgc2lnbmlmaWNhbnRseSByZWR1Y2UgdGhlIGJ1cmRlbiBvbiB0aGUgaGVhbHRoY2FyZQpzeXN0ZW0sIGFuZCBzYXZlIHRoZSBwYXRpZW50cyBhbmQgY2xpbmljcyB2YWx1YWJsZSByZXNvdXJjZXMuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkFiZHVsbGFoIEFsZWVtPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5NYW5vaiBQcmFiaGFrYXIgTmFsbGFib3RodWxhPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5QZXRlIFNldGFidXRyPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Kb2VsbGUgQS4gSGFsbGFrPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5EYXJ2aW4gWWk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDM5MDV2MiIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wMzkwNXYyIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJlZXNzLklWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iZWVzcy5JViIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkNWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAzNzk5djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wN1QxNzowOToyMlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDdUMTc6MDk6MjJaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+RGV0ZXJtaW5pc3RpYyBJdGVyYXRpdmVseSBCdWlsdCBLRC1UcmVlIHdpdGggS05OIFNlYXJjaCBmb3IgRXhhY3QKICBBcHBsaWNhdGlvbnM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBLLU5lYXJlc3QgTmVpZ2hib3JzIChLTk4pIHNlYXJjaCBpcyBhIGZ1bmRhbWVudGFsIGFsZ29yaXRobSBpbiBhcnRpZmljaWFsCmludGVsbGlnZW5jZSBzb2Z0d2FyZSB3aXRoIGFwcGxpY2F0aW9ucyBpbiByb2JvdGljcywgYW5kIGF1dG9ub21vdXMgdmVoaWNsZXMuClRoZXNlIHdpZGUtcmFuZ2luZyBhcHBsaWNhdGlvbnMgdXRpbGl6ZSBLTk4gZWl0aGVyIGRpcmVjdGx5IGZvciBzaW1wbGUKY2xhc3NpZmljYXRpb24gb3IgY29tYmluZSBLTk4gcmVzdWx0cyBhcyBpbnB1dCB0byBvdGhlciBhbGdvcml0aG1zIHN1Y2ggYXMKTG9jYWxseSBXZWlnaHRlZCBMZWFybmluZyAoTFdMKS4gU2ltaWxhciB0byBiaW5hcnkgdHJlZXMsIGtkLXRyZWVzIGJlY29tZQp1bmJhbGFuY2VkIGFzIG5ldyBkYXRhIGlzIGFkZGVkIGluIG9ubGluZSBhcHBsaWNhdGlvbnMgd2hpY2ggY2FuIGxlYWQgdG8gcmFwaWQKZGVncmFkYXRpb24gaW4gc2VhcmNoIHBlcmZvcm1hbmNlIHVubGVzcyB0aGUgdHJlZSBpcyByZWJ1aWx0LiBBbHRob3VnaAphcHByb3hpbWF0ZSBtZXRob2RzIGFyZSBzdWl0YWJsZSBmb3IgZ3JhcGhpY3MgYXBwbGljYXRpb25zLCB3aGljaCBwcmlvcml0aXplCnF1ZXJ5IHNwZWVkIG92ZXIgcXVlcnkgYWNjdXJhY3ksIHRoZXkgYXJlIHVuc3VpdGFibGUgZm9yIGNlcnRhaW4gYXBwbGljYXRpb25zCmluIGF1dG9ub21vdXMgc3lzdGVtcywgYWVyb25hdXRpY3MsIGFuZCByb2JvdGljIG1hbmlwdWxhdGlvbiB3aGVyZSBleGFjdApzb2x1dGlvbnMgYXJlIGRlc2lyZWQuIEluIHRoaXMgcGFwZXIsIHdlIHdpbGwgYXR0ZW1wdCB0byBhc3Nlc3MgdGhlIHBlcmZvcm1hbmNlCm9mIG5vbi1yZWN1cnNpdmUgZGV0ZXJtaW5pc3RpYyBrZC10cmVlIGZ1bmN0aW9ucyBhbmQgS05OIGZ1bmN0aW9ucy4gV2Ugd2lsbAphbHNvIHByZXNlbnQgYSAiZm9yZXN0IG9mIGludGVydmFsIGtkLXRyZWVzIiB3aGljaCByZWR1Y2VzIHRoZSBudW1iZXIgb2YgdHJlZQpyZWJ1aWxkcywgd2l0aG91dCBjb21wcm9taXNpbmcgdGhlIGV4YWN0bmVzcyBvZiBxdWVyeSByZXN1bHRzLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BcnlhbiBOYWltPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Kb3NlcGggQm93a2V0dDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U2lzaXIgS2FydW1hbmNoaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+UGV5bWFuIFRhdmFsbGFsaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QnJldHQgS2VubmVkeTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMzc5OXYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAzNzk5djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLlNFIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuU0UiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkRTIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAzNzc1djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wN1QxNjozODo0M1o8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDdUMTY6Mzg6NDNaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+RXhwbGFpbmFibGUgQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UgKFhBSSkgZm9yIEluY3JlYXNpbmcgVXNlciBUcnVzdCBpbgogIERlZXAgUmVpbmZvcmNlbWVudCBMZWFybmluZyBEcml2ZW4gQXV0b25vbW91cyBTeXN0ZW1zPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgV2UgY29uc2lkZXIgdGhlIHByb2JsZW0gb2YgcHJvdmlkaW5nIHVzZXJzIG9mIGRlZXAgUmVpbmZvcmNlbWVudCBMZWFybmluZwooUkwpIGJhc2VkIHN5c3RlbXMgd2l0aCBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIHdoZW4gdGhlaXIgb3V0cHV0IGNhbiBiZQp0cnVzdGVkLiBXZSBvZmZlciBhbiBleHBsYWluYWJsZSBhcnRpZmljaWFsIGludGVsbGlnZW5jZSAoWEFJKSBmcmFtZXdvcmsgdGhhdApwcm92aWRlcyBhIHRocmVlLWZvbGQgZXhwbGFuYXRpb246IGEgZ3JhcGhpY2FsIGRlcGljdGlvbiBvZiB0aGUgc3lzdGVtcwpnZW5lcmFsaXphdGlvbiBhbmQgcGVyZm9ybWFuY2UgaW4gdGhlIGN1cnJlbnQgZ2FtZSBzdGF0ZSwgaG93IHdlbGwgdGhlIGFnZW50CndvdWxkIHBsYXkgaW4gc2VtYW50aWNhbGx5IHNpbWlsYXIgZW52aXJvbm1lbnRzLCBhbmQgYSBuYXJyYXRpdmUgZXhwbGFuYXRpb24gb2YKd2hhdCB0aGUgZ3JhcGhpY2FsIGluZm9ybWF0aW9uIGltcGxpZXMuIFdlIGNyZWF0ZWQgYSB1c2VyLWludGVyZmFjZSBmb3Igb3VyIFhBSQpmcmFtZXdvcmsgYW5kIGV2YWx1YXRlZCBpdHMgZWZmaWNhY3kgdmlhIGEgaHVtYW4tdXNlciBleHBlcmltZW50LiBUaGUgcmVzdWx0cwpkZW1vbnN0cmF0ZSBhIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgaW5jcmVhc2UgaW4gdXNlciB0cnVzdCBhbmQgYWNjZXB0YW5jZQpvZiB0aGUgQUkgc3lzdGVtIHdpdGggZXhwbGFuYXRpb24sIHZlcnN1cyB0aGUgQUkgc3lzdGVtIHdpdGhvdXQgZXhwbGFuYXRpb24uCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkplZmYgRHJ1Y2U8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1pY2hhZWwgSGFycmFkb248L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkphbWVzIFRpdHRsZTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5OZXVySVBTIERlZXAgUkwgd29ya3Nob3AsIENvbmZlcmVuY2Ugb24gTmV1cmFsIEluZm9ybWF0aW9uIFByb2Nlc3NpbmcKICBTeXN0ZW1zIChOZXVySVBTIDIwMTkpLCBWYW5jb3V2ZXIsIENhbmFkYTwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDM3NzV2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wMzc3NXYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkFJIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAzNjY5djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wN1QxNDo0NjoyM1o8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDdUMTQ6NDY6MjNaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+T3BlbiBzb3VyY2UgZGlzZWFzZSBhbmFseXNpcyBzeXN0ZW0gb2YgY2FjdHVzIGJ5IGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlCiAgYW5kIGltYWdlIHByb2Nlc3Npbmc8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBUaGVyZSBpcyBhIGdyb3dpbmcgaW50ZXJlc3QgaW4gY2FjdHVzIGN1bHRpdmF0aW9uIGJlY2F1c2Ugb2YgbnVtZXJvdXMgY2FjdGkKdXNlcyBmcm9tIGhvdXNlcGxhbnRzIHRvIGZvb2QgYW5kIG1lZGljaW5hbCBhcHBsaWNhdGlvbnMuIFZhcmlvdXMgZGlzZWFzZXMKaW1wYWN0IHRoZSBncm93dGggb2YgY2FjdGkuIFRvIGRldmVsb3AgYW4gYXV0b21hdGVkIG1vZGVsIGZvciB0aGUgYW5hbHlzaXMgb2YKY2FjdHVzIGRpc2Vhc2UgYW5kIHRvIGJlIGFibGUgdG8gcXVpY2tseSB0cmVhdCBhbmQgcHJldmVudCBkYW1hZ2UgdG8gdGhlCmNhY3R1cy4gVGhlIEZhc3RlciBSLUNOTiBhbmQgWU9MTyBhbGdvcml0aG0gdGVjaG5pcXVlIHdlcmUgdXNlZCB0byBhbmFseXplCmNhY3R1cyBkaXNlYXNlcyBhdXRvbWF0aWNhbGx5IGRpc3RyaWJ1dGVkIGludG8gc2l4IGdyb3VwczogMSkgYW50aHJhY25vc2UsIDIpCmNhbmtlciwgMykgbGFjayBvZiBjYXJlLCA0KSBhcGhpZCwgNSkgcnVzdHMgYW5kIDYpIG5vcm1hbCBncm91cC4gQmFzZWQgb24gdGhlCmV4cGVyaW1lbnRhbCByZXN1bHRzIHRoZSBZT0xPdjUgYWxnb3JpdGhtIHdhcyBmb3VuZCB0byBiZSBtb3JlIGVmZmVjdGl2ZSBhdApkZXRlY3RpbmcgYW5kIGlkZW50aWZ5aW5nIGNhY3R1cyBkaXNlYXNlIHRoYW4gdGhlIEZhc3RlciBSLUNOTiBhbGdvcml0aG0uIERhdGEKdHJhaW5pbmcgYW5kIHRlc3Rpbmcgd2l0aCBZT0xPdjVTIG1vZGVsIHJlc3VsdGVkIGluIGEgcHJlY2lzaW9uIG9mIDg5LjclIGFuZCBhbgphY2N1cmFjeSAocmVjYWxsKSBvZiA5OC41JSwgd2hpY2ggaXMgZWZmZWN0aXZlIGVub3VnaCBmb3IgZnVydGhlciB1c2UgaW4gYQpudW1iZXIgb2YgYXBwbGljYXRpb25zIGluIGNhY3R1cyBjdWx0aXZhdGlvbi4gT3ZlcmFsbCB0aGUgWU9MT3Y1IGFsZ29yaXRobSBoYWQKYSB0ZXN0IHRpbWUgcGVyIGltYWdlIG9mIG9ubHkgMjYgbWlsbGlzZWNvbmRzLiBUaGVyZWZvcmUsIHRoZSBZT0xPdjUgYWxnb3JpdGhtCndhcyBmb3VuZCB0byBzdWl0YWJsZSBmb3IgbW9iaWxlIGFwcGxpY2F0aW9ucyBhbmQgdGhpcyBtb2RlbCBjb3VsZCBiZSBmdXJ0aGVyCmRldmVsb3BlZCBpbnRvIGEgcHJvZ3JhbSBmb3IgYW5hbHl6aW5nIGNhY3R1cyBkaXNlYXNlLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LYW5sYXlhbmVlIEthd2Vlc2luc2FrdWw8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlNpcmFuZWUgTnVjaGl0cHJhc2l0Y2hhaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Sm9zaHVhIE0uIFBlYXJjZTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmRvaSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPjEwLjExNDUvMzQ2ODc4NC4zNDY5MDc1PC9hcnhpdjpkb2k+CiAgICA8bGluayB0aXRsZT0iZG9pIiBocmVmPSJodHRwOi8vZHguZG9pLm9yZy8xMC4xMTQ1LzM0Njg3ODQuMzQ2OTA3NSIgcmVsPSJyZWxhdGVkIi8+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPlByZXByaW50IGZvciBJQUlUMjAyMTwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDM2Njl2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wMzY2OXYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5DViIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkNWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQUkiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5Pgo8L2ZlZWQ+Cg==
  recorded_at: Thu, 10 Jun 2021 19:26:09 GMT
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22artificial%20intelligence%22%20OR%20abs:%22artificial%20intelligence%22&sortBy=submittedDate&sortOrder=descending&start=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 10 Jun 2021 19:26:07 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '7763'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZlZWQgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSI+CiAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hcGkvcXVlcnk/c2VhcmNoX3F1ZXJ5JTNEdGklM0ElMjJhcnRpZmljaWFsJTIwaW50ZWxsaWdlbmNlJTIyJTIwT1IlMjBhYnMlM0ElMjJhcnRpZmljaWFsJTIwaW50ZWxsaWdlbmNlJTIyJTI2aWRfbGlzdCUzRCUyNnN0YXJ0JTNEMTAlMjZtYXhfcmVzdWx0cyUzRDEwIiByZWw9InNlbGYiIHR5cGU9ImFwcGxpY2F0aW9uL2F0b20reG1sIi8+CiAgPHRpdGxlIHR5cGU9Imh0bWwiPkFyWGl2IFF1ZXJ5OiBzZWFyY2hfcXVlcnk9dGk6ImFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIiBPUiBhYnM6ImFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIiZhbXA7aWRfbGlzdD0mYW1wO3N0YXJ0PTEwJmFtcDttYXhfcmVzdWx0cz0xMDwvdGl0bGU+CiAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYXBpL0pGdFVxZlBBSWNKVG91QzVTRXFYSUQ1RDhYZzwvaWQ+CiAgPHVwZGF0ZWQ+MjAyMS0wNi0xMFQwMDowMDowMC0wNDowMDwvdXBkYXRlZD4KICA8b3BlbnNlYXJjaDp0b3RhbFJlc3VsdHMgeG1sbnM6b3BlbnNlYXJjaD0iaHR0cDovL2E5LmNvbS8tL3NwZWMvb3BlbnNlYXJjaC8xLjEvIj40NTY4PC9vcGVuc2VhcmNoOnRvdGFsUmVzdWx0cz4KICA8b3BlbnNlYXJjaDpzdGFydEluZGV4IHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+MTA8L29wZW5zZWFyY2g6c3RhcnRJbmRleD4KICA8b3BlbnNlYXJjaDppdGVtc1BlclBhZ2UgeG1sbnM6b3BlbnNlYXJjaD0iaHR0cDovL2E5LmNvbS8tL3NwZWMvb3BlbnNlYXJjaC8xLjEvIj4xMDwvb3BlbnNlYXJjaDppdGVtc1BlclBhZ2U+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDM0NTd2MjwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA5VDExOjQxOjM5WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wN1QwOTozNTo1MVo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5NZWNoYW5pc20gRGVzaWduIGZvciBGYWNpbGl0eSBMb2NhdGlvbiBQcm9ibGVtczogQSBTdXJ2ZXk8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBUaGUgc3R1ZHkgb2YgYXBwcm94aW1hdGUgbWVjaGFuaXNtIGRlc2lnbiBmb3IgZmFjaWxpdHkgbG9jYXRpb24gcHJvYmxlbXMgaGFzCmJlZW4gaW4gdGhlIGNlbnRlciBvZiByZXNlYXJjaCBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlCmFuZCBlY29ub21pY3MgZm9yIHRoZSBsYXN0IGRlY2FkZXMsIGxhcmdlbHkgZHVlIHRvIGl0cyBwcmFjdGljYWwgaW1wb3J0YW5jZSBpbgp2YXJpb3VzIGRvbWFpbnMsIHN1Y2ggYXMgc29jaWFsIHBsYW5uaW5nIGFuZCBjbHVzdGVyaW5nLiBBdCBhIGhpZ2ggbGV2ZWwsIHRoZQpnb2FsIGlzIHRvIGRlc2lnbiBtZWNoYW5pc21zIHRvIHNlbGVjdCBhIHNldCBvZiBsb2NhdGlvbnMgb24gd2hpY2ggdG8gYnVpbGQgYQpzZXQgb2YgZmFjaWxpdGllcywgYWltaW5nIHRvIG9wdGltaXplIHNvbWUgc29jaWFsIG9iamVjdGl2ZSBhbmQgZW5zdXJlCmRlc2lyYWJsZSBwcm9wZXJ0aWVzIGJhc2VkIG9uIHRoZSBwcmVmZXJlbmNlcyBvZiBzdHJhdGVnaWMgYWdlbnRzLCB3aG8gbWlnaHQKaGF2ZSBpbmNlbnRpdmVzIHRvIG1pc3JlcG9ydCB0aGVpciBwcml2YXRlIGluZm9ybWF0aW9uIHN1Y2ggYXMgdGhlaXIgbG9jYXRpb25zLgpUaGlzIHBhcGVyIHByZXNlbnRzIGEgY29tcHJlaGVuc2l2ZSBzdXJ2ZXkgb2YgdGhlIHNpZ25pZmljYW50IHByb2dyZXNzIHRoYXQgaGFzCmJlZW4gbWFkZSBzaW5jZSB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSBwcm9ibGVtLCBoaWdobGlnaHRpbmcgdGhlIGRpZmZlcmVudAp2YXJpYW50cyBhbmQgbWV0aG9kb2xvZ2llcywgYXMgd2VsbCBhcyB0aGUgbW9zdCBpbnRlcmVzdGluZyBkaXJlY3Rpb25zIGZvcgpmdXR1cmUgcmVzZWFyY2guCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkhhdSBDaGFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BcmlzIEZpbG9zLVJhdHNpa2FzPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CbyBMaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+TWlubWluZyBMaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Q2hlbmhhbyBXYW5nPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPlRvIGFwcGVhciBpbiBJSkNBSSAyMDIxIChTdXJ2ZXkgVHJhY2spPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMzQ1N3YyIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAzNDU3djIiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkdUIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuR1QiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5ETSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkRTIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMzAzNXYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMDZUMDU6MzY6MTJaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTA2VDA1OjM2OjEyWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPk9ubGluZSBUcmFkaW5nIE1vZGVscyBpbiB0aGUgRm9yZXggTWFya2V0IENvbnNpZGVyaW5nIFRyYW5zYWN0aW9uIENvc3RzPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgSW4gcmVjZW50IHllYXJzLCBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0bWVudCBtb2RlbHMgaGF2ZSBiZWVuIGNyZWF0ZWQgdXNpbmcKYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UuIEF1dG9tYXRpYyB0cmFkaW5nIGJ5IGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGNhbgpleHBhbmQgdGhlIHJhbmdlIG9mIHRyYWRpbmcgbWV0aG9kcywgc3VjaCBhcyBieSBjb25mZXJyaW5nIHRoZSBhYmlsaXR5IHRvCm9wZXJhdGUgMjQgaG91cnMgYSBkYXkgYW5kIHRoZSBhYmlsaXR5IHRvIHRyYWRlIHdpdGggaGlnaCBmcmVxdWVuY3kuIEF1dG9tYXRpYwp0cmFkaW5nIGNhbiBhbHNvIGJlIGV4cGVjdGVkIHRvIHRyYWRlIHdpdGggbW9yZSBpbmZvcm1hdGlvbiB0aGFuIGlzIGF2YWlsYWJsZQp0byBodW1hbnMgaWYgaXQgY2FuIHN1ZmZpY2llbnRseSBjb25zaWRlciBwYXN0IGRhdGEuIEluIHRoaXMgcGFwZXIsIHdlIHByb3Bvc2UKYW4gaW52ZXN0bWVudCBhZ2VudCBiYXNlZCBvbiBhIGRlZXAgcmVpbmZvcmNlbWVudCBsZWFybmluZyBtb2RlbCwgd2hpY2ggaXMgYW4KYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgbW9kZWwuIFRoZSBtb2RlbCBjb25zaWRlcnMgdGhlIHRyYW5zYWN0aW9uIGNvc3RzCmludm9sdmVkIGluIGFjdHVhbCB0cmFkaW5nIGFuZCBjcmVhdGVzIGEgZnJhbWV3b3JrIGZvciB0cmFkaW5nIG92ZXIgYSBsb25nCnBlcmlvZCBvZiB0aW1lIHNvIHRoYXQgaXQgY2FuIG1ha2UgYSBsYXJnZSBwcm9maXQgb24gYSBzaW5nbGUgdHJhZGUuIEluIGRvaW5nCnNvLCBpdCBjYW4gbWF4aW1pemUgdGhlIHByb2ZpdCB3aGlsZSBrZWVwaW5nIHRyYW5zYWN0aW9uIGNvc3RzIGxvdy4gSW4KYWRkaXRpb24sIGluIGNvbnNpZGVyYXRpb24gb2YgYWN0dWFsIG9wZXJhdGlvbnMsIHdlIHVzZSBvbmxpbmUgbGVhcm5pbmcgc28gdGhhdAp0aGUgc3lzdGVtIGNhbiBjb250aW51ZSB0byBsZWFybiBieSBjb25zdGFudGx5IHVwZGF0aW5nIHRoZSBsYXRlc3Qgb25saW5lIGRhdGEKaW5zdGVhZCBvZiBsZWFybmluZyB3aXRoIHN0YXRpYyBkYXRhLiBUaGlzIG1ha2VzIGl0IHBvc3NpYmxlIHRvIHRyYWRlIGluCm5vbi1zdGF0aW9uYXJ5IGZpbmFuY2lhbCBtYXJrZXRzIGJ5IGFsd2F5cyBpbmNvcnBvcmF0aW5nIGN1cnJlbnQgbWFya2V0IHRyZW5kCmluZm9ybWF0aW9uLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Lb3lhIElzaGlrYXdhPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LYXp1aGlkZSBOYWthdGE8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+NyBwYWdlcywgMiBmaWd1cmVzLCA2IHRhYmxlczwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDMwMzV2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wMzAzNXYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWZpbi5UUiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtZmluLlRSIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQUkiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5MRyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQzODF2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA0VDIxOjU5OjQ4WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wNFQyMTo1OTo0OFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5Db21wdXRlci1Bc3Npc3RlZCBBbmFseXNpcyBvZiBCaW9tZWRpY2FsIEltYWdlczwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIE5vd2FkYXlzLCB0aGUgYW1vdW50IG9mIGhldGVyb2dlbmVvdXMgYmlvbWVkaWNhbCBkYXRhIGlzIGluY3JlYXNpbmcgbW9yZSBhbmQKbW9yZSB0aGFua3MgdG8gbm92ZWwgc2Vuc2luZyB0ZWNobmlxdWVzIGFuZCBoaWdoLXRocm91Z2hwdXQgdGVjaG5vbG9naWVzLiBJbgpyZWZlcmVuY2UgdG8gYmlvbWVkaWNhbCBpbWFnZSBhbmFseXNpcywgdGhlIGFkdmFuY2VzIGluIGltYWdlIGFjcXVpc2l0aW9uCm1vZGFsaXRpZXMgYW5kIGhpZ2gtdGhyb3VnaHB1dCBpbWFnaW5nIGV4cGVyaW1lbnRzIGFyZSBjcmVhdGluZyBuZXcgY2hhbGxlbmdlcy4KVGhpcyBodWdlIGluZm9ybWF0aW9uIGVuc2VtYmxlIGNvdWxkIG92ZXJ3aGVsbSB0aGUgYW5hbHl0aWMgY2FwYWJpbGl0aWVzIG5lZWRlZApieSBwaHlzaWNpYW5zIGluIHRoZWlyIGRhaWx5IGRlY2lzaW9uLW1ha2luZyB0YXNrcyBhcyB3ZWxsIGFzIGJ5IGJpb2xvZ2lzdHMKaW52ZXN0aWdhdGluZyBjb21wbGV4IGJpb2NoZW1pY2FsIHN5c3RlbXMuIEluIHBhcnRpY3VsYXIsIHF1YW50aXRhdGl2ZSBpbWFnaW5nCm1ldGhvZHMgY29udmV5IHNjaWVudGlmaWNhbGx5IGFuZCBjbGluaWNhbGx5IHJlbGV2YW50IGluZm9ybWF0aW9uIGluCnByZWRpY3Rpb24sIHByb2dub3NpcyBvciB0cmVhdG1lbnQgcmVzcG9uc2UgYXNzZXNzbWVudCwgYnkgYWxzbyBjb25zaWRlcmluZwpyYWRpb21pY3MgYXBwcm9hY2hlcy4gVGhlcmVmb3JlLCB0aGUgY29tcHV0YXRpb25hbCBhbmFseXNpcyBvZiBtZWRpY2FsIGFuZApiaW9sb2dpY2FsIGltYWdlcyBwbGF5cyBhIGtleSByb2xlIGluIHJhZGlvbG9neSBhbmQgbGFib3JhdG9yeSBhcHBsaWNhdGlvbnMuIEluCnRoaXMgcmVnYXJkLCBmcmFtZXdvcmtzIGJhc2VkIG9uIGFkdmFuY2VkIE1hY2hpbmUgTGVhcm5pbmcgYW5kIENvbXB1dGF0aW9uYWwKSW50ZWxsaWdlbmNlIGNhbiBzaWduaWZpY2FudGx5IGltcHJvdmUgdHJhZGl0aW9uYWwgSW1hZ2UgUHJvY2Vzc2luZyBhbmQgUGF0dGVybgpSZWNvZ25pdGlvbiBhcHByb2FjaGVzLiBIb3dldmVyLCBjb252ZW50aW9uYWwgQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UKdGVjaG5pcXVlcyBtdXN0IGJlIHRhaWxvcmVkIHRvIGFkZHJlc3MgdGhlIHVuaXF1ZSBjaGFsbGVuZ2VzIGNvbmNlcm5pbmcKYmlvbWVkaWNhbCBpbWFnaW5nIGRhdGEuIFRoaXMgdGhlc2lzIGFpbXMgYXQgcHJvcG9zaW5nIG5vdmVsIGFuZCBhZHZhbmNlZApjb21wdXRlci1hc3Npc3RlZCBtZXRob2RzIGZvciBiaW9tZWRpY2FsIGltYWdlIGFuYWx5c2lzLCBhbHNvIGFzIGFuIGluc3RydW1lbnQKaW4gdGhlIGRldmVsb3BtZW50IG9mIENsaW5pY2FsIERlY2lzaW9uIFN1cHBvcnQgU3lzdGVtcywgYnkgYWx3YXlzIGtlZXBpbmcgaW4KbWluZCB0aGUgY2xpbmljYWwgZmVhc2liaWxpdHkgb2YgdGhlIGRldmVsb3BlZCBzb2x1dGlvbnMuIEluIGNvbmNsdXNpb24sIHRoZQp1bHRpbWF0ZSBnb2FsIG9mIHRoZXNlIHJlc2VhcmNoIHN0dWRpZXMgaXMgdG8gZ2FpbiBjbGluaWNhbGx5IGFuZCBiaW9sb2dpY2FsbHkKdXNlZnVsIGluc2lnaHRzIHRoYXQgY2FuIGd1aWRlIGRpZmZlcmVudGlhbCBkaWFnbm9zaXMgYW5kIHRoZXJhcGllcywgbGVhZGluZwp0b3dhcmRzIGJpb21lZGljYWwgZGF0YSBpbnRlZ3JhdGlvbiBmb3IgcGVyc29uYWxpemVkIG1lZGljaW5lLiBBcyBhIG1hdHRlciBvZgpmYWN0LCB0aGUgcHJvcG9zZWQgY29tcHV0ZXItYXNzaXN0ZWQgYmlvaW1hZ2UgYW5hbHlzaXMgbWV0aG9kcyBjYW4gYmUKYmVuZWZpY2lhbCBmb3IgdGhlIGRlZmluaXRpb24gb2YgaW1hZ2luZyBiaW9tYXJrZXJzLCBhcyB3ZWxsIGFzIGZvcgpxdWFudGl0YXRpdmUgbWVkaWNpbmUgYW5kIGJpb2xvZ3kuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkxlb25hcmRvIFJ1bmRvPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPlBoRCBUaGVzaXMgaW4gQ29tcHV0ZXIgU2NpZW5jZSwgVW5pdmVyc2l0eSBvZiBNaWxhbm8tQmljb2NjYSwgTWlsYW4sCiAgSXRhbHk8L2FyeGl2OmNvbW1lbnQ+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjA0MzgxdjEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDQzODF2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iZWVzcy5JViIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImVlc3MuSVYiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5DViIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjYzNHYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMDRUMTc6NTQ6NDlaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTA0VDE3OjU0OjQ5WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkxpZ2h0IEZpZWxkIE5ldHdvcmtzOiBOZXVyYWwgU2NlbmUgUmVwcmVzZW50YXRpb25zIHdpdGgKICBTaW5nbGUtRXZhbHVhdGlvbiBSZW5kZXJpbmc8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBJbmZlcnJpbmcgcmVwcmVzZW50YXRpb25zIG9mIDNEIHNjZW5lcyBmcm9tIDJEIG9ic2VydmF0aW9ucyBpcyBhIGZ1bmRhbWVudGFsCnByb2JsZW0gb2YgY29tcHV0ZXIgZ3JhcGhpY3MsIGNvbXB1dGVyIHZpc2lvbiwgYW5kIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLgpFbWVyZ2luZyAzRC1zdHJ1Y3R1cmVkIG5ldXJhbCBzY2VuZSByZXByZXNlbnRhdGlvbnMgYXJlIGEgcHJvbWlzaW5nIGFwcHJvYWNoIHRvCjNEIHNjZW5lIHVuZGVyc3RhbmRpbmcuIEluIHRoaXMgd29yaywgd2UgcHJvcG9zZSBhIG5vdmVsIG5ldXJhbCBzY2VuZQpyZXByZXNlbnRhdGlvbiwgTGlnaHQgRmllbGQgTmV0d29ya3Mgb3IgTEZOcywgd2hpY2ggcmVwcmVzZW50IGJvdGggZ2VvbWV0cnkgYW5kCmFwcGVhcmFuY2Ugb2YgdGhlIHVuZGVybHlpbmcgM0Qgc2NlbmUgaW4gYSAzNjAtZGVncmVlLCBmb3VyLWRpbWVuc2lvbmFsIGxpZ2h0CmZpZWxkIHBhcmFtZXRlcml6ZWQgdmlhIGEgbmV1cmFsIGltcGxpY2l0IHJlcHJlc2VudGF0aW9uLiBSZW5kZXJpbmcgYSByYXkgZnJvbQphbiBMRk4gcmVxdWlyZXMgb25seSBhICpzaW5nbGUqIG5ldHdvcmsgZXZhbHVhdGlvbiwgYXMgb3Bwb3NlZCB0byBodW5kcmVkcyBvZgpldmFsdWF0aW9ucyBwZXIgcmF5IGZvciByYXktbWFyY2hpbmcgb3Igdm9sdW1ldHJpYyBiYXNlZCByZW5kZXJlcnMgaW4KM0Qtc3RydWN0dXJlZCBuZXVyYWwgc2NlbmUgcmVwcmVzZW50YXRpb25zLiBJbiB0aGUgc2V0dGluZyBvZiBzaW1wbGUgc2NlbmVzLCB3ZQpsZXZlcmFnZSBtZXRhLWxlYXJuaW5nIHRvIGxlYXJuIGEgcHJpb3Igb3ZlciBMRk5zIHRoYXQgZW5hYmxlcyBtdWx0aS12aWV3CmNvbnNpc3RlbnQgbGlnaHQgZmllbGQgcmVjb25zdHJ1Y3Rpb24gZnJvbSBhcyBsaXR0bGUgYXMgYSBzaW5nbGUgaW1hZ2UKb2JzZXJ2YXRpb24uIFRoaXMgcmVzdWx0cyBpbiBkcmFtYXRpYyByZWR1Y3Rpb25zIGluIHRpbWUgYW5kIG1lbW9yeSBjb21wbGV4aXR5LAphbmQgZW5hYmxlcyByZWFsLXRpbWUgcmVuZGVyaW5nLiBUaGUgY29zdCBvZiBzdG9yaW5nIGEgMzYwLWRlZ3JlZSBsaWdodCBmaWVsZAp2aWEgYW4gTEZOIGlzIHR3byBvcmRlcnMgb2YgbWFnbml0dWRlIGxvd2VyIHRoYW4gY29udmVudGlvbmFsIG1ldGhvZHMgc3VjaCBhcwp0aGUgTHVtaWdyYXBoLiBVdGlsaXppbmcgdGhlIGFuYWx5dGljYWwgZGlmZmVyZW50aWFiaWxpdHkgb2YgbmV1cmFsIGltcGxpY2l0CnJlcHJlc2VudGF0aW9ucyBhbmQgYSBub3ZlbCBwYXJhbWV0ZXJpemF0aW9uIG9mIGxpZ2h0IHNwYWNlLCB3ZSBmdXJ0aGVyCmRlbW9uc3RyYXRlIHRoZSBleHRyYWN0aW9uIG9mIHNwYXJzZSBkZXB0aCBtYXBzIGZyb20gTEZOcy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+VmluY2VudCBTaXR6bWFubjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U2Vtb24gUmV6Y2hpa292PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5XaWxsaWFtIFQuIEZyZWVtYW48L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkpvc2h1YSBCLiBUZW5lbmJhdW08L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkZyZWRvIER1cmFuZDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5GaXJzdCB0d28gYXV0aG9ycyBjb250cmlidXRlZCBlcXVhbGx5LiBQcm9qZWN0IHdlYnNpdGU6CiAgaHR0cHM6Ly92c2l0em1hbm4uZ2l0aHViLmlvL2xmbnMvPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjYzNHYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAyNjM0djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkNWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQ1YiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkdSIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5NTSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDI1Njd2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA0VDE1OjU5OjQ2WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wNFQxNTo1OTo0Nlo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5BSSBEcml2ZW4gUm9hZCBNYWludGVuYW5jZSBJbnNwZWN0aW9uPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgUm9hZCBpbmZyYXN0cnVjdHVyZSBtYWludGVuYW5jZSBpbnNwZWN0aW9uIGlzIHR5cGljYWxseSBhIGxhYm91ci1pbnRlbnNpdmUKYW5kIGNyaXRpY2FsIHRhc2sgdG8gZW5zdXJlIHRoZSBzYWZldHkgb2YgYWxsIHRoZSByb2FkIHVzZXJzLiBJbiB0aGlzIHdvcmssIHdlCnByb3Bvc2UgYSBkZXRhaWxlZCBtZXRob2RvbG9neSB0byB1c2Ugc3RhdGUtb2YtdGhlLWFydCB0ZWNobmlxdWVzIGluIGFydGlmaWNpYWwKaW50ZWxsaWdlbmNlIGFuZCBjb21wdXRlciB2aXNpb24gdG8gYXV0b21hdGUgYSBzaXplYWJsZSBwb3J0aW9uIG9mIHRoZQptYWludGVuYW5jZSBpbnNwZWN0aW9uIHN1YnRhc2tzIGFuZCByZWR1Y2UgdGhlIGxhYm91ciBjb3N0cy4gVGhlIHByb3Bvc2VkCm1ldGhvZG9sb2d5IHVzZXMgc3RhdGUtb2YtdGhlLWFydCBjb21wdXRlciB2aXNpb24gdGVjaG5pcXVlcyBzdWNoIGFzIG9iamVjdApkZXRlY3Rpb24gYW5kIHNlbWFudGljIHNlZ21lbnRhdGlvbiB0byBhdXRvbWF0ZSBpbnNwZWN0aW9ucyBvbiBwcmltYXJ5IHJvYWQKc3RydWN0dXJlcyBzdWNoIGFzIHRoZSByb2FkIHN1cmZhY2UsIG1hcmtpbmdzLCBiYXJyaWVycyAoZ3VhcmRyYWlscykgYW5kCnRyYWZmaWMgc2lnbnMuIFRoZSBtb2RlbHMgYXJlIG1vc3RseSB0cmFpbmVkIG9uIGNvbW1lcmNpYWxseSB2aWFibGUgZGF0YXNldHMKYW5kIGF1Z21lbnRlZCB3aXRoIHByb3ByaWV0YXJ5IGRhdGEuIFdlIGRlbW9uc3RyYXRlIHRoYXQgb3VyIEFJIG1vZGVscyBjYW4gbm90Cm9ubHkgYXV0b21hdGUgYW5kIHNjYWxlIG1haW50ZW5hbmNlIGluc3BlY3Rpb25zIG9uIHByaW1hcnkgcm9hZCBzdHJ1Y3R1cmVzIGJ1dAphbHNvIHJlc3VsdCBpbiBoaWdoZXIgcmVjYWxsIGNvbXBhcmVkIHRvIHRyYWRpdGlvbmFsIG1hbnVhbCBpbnNwZWN0aW9ucy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+UmF0bmFqaXQgTXVraGVyamVlPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5IYXJpcyBJcWJhbDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U2hhYmJpciBNYXJ6YmFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BaG1lZCBCYWRhcjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+VGVyZW5jZSBCcm91bnM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlNocnV0aGkgR293ZGE8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkVsYWhlIEFyYW5pPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CYWhyYW0gWm9ub296PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPmFjY2VwdGVkIGF0IDI3dGggSVRTIFdvcmxkIENvbmdyZXNzLCAyMDIxPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjU2N3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAyNTY3djEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkNWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQ1YiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjQ5OHYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMDRUMTQ6MTI6MTJaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTA0VDE0OjEyOjEyWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPlRvd2FyZHMgRmFpcm5lc3MgQ2VydGlmaWNhdGlvbiBpbiBBcnRpZmljaWFsIEludGVsbGlnZW5jZTwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFRoYW5rcyB0byB0aGUgZ3JlYXQgcHJvZ3Jlc3Mgb2YgbWFjaGluZSBsZWFybmluZyBpbiB0aGUgbGFzdCB5ZWFycywgc2V2ZXJhbApBcnRpZmljaWFsIEludGVsbGlnZW5jZSAoQUkpIHRlY2huaXF1ZXMgaGF2ZSBiZWVuIGluY3JlYXNpbmdseSBtb3ZpbmcgZnJvbSB0aGUKY29udHJvbGxlZCByZXNlYXJjaCBsYWJvcmF0b3J5IHNldHRpbmdzIHRvIG91ciBldmVyeWRheSBsaWZlLiBBSSBpcyBjbGVhcmx5CnN1cHBvcnRpdmUgaW4gbWFueSBkZWNpc2lvbi1tYWtpbmcgc2NlbmFyaW9zLCBidXQgd2hlbiBpdCBjb21lcyB0byBzZW5zaXRpdmUKYXJlYXMgc3VjaCBhcyBoZWFsdGggY2FyZSwgaGlyaW5nIHBvbGljaWVzLCBlZHVjYXRpb24sIGJhbmtpbmcgb3IganVzdGljZSwgd2l0aAptYWpvciBpbXBhY3Qgb24gaW5kaXZpZHVhbHMgYW5kIHNvY2lldHksIGl0IGJlY29tZXMgY3J1Y2lhbCB0byBlc3RhYmxpc2gKZ3VpZGVsaW5lcyBvbiBob3cgdG8gZGVzaWduLCBkZXZlbG9wLCBkZXBsb3kgYW5kIG1vbml0b3IgdGhpcyB0ZWNobm9sb2d5LgpJbmRlZWQgdGhlIGRlY2lzaW9uIHJ1bGVzIGVsYWJvcmF0ZWQgYnkgbWFjaGluZSBsZWFybmluZyBtb2RlbHMgYXJlIGRhdGEtZHJpdmVuCmFuZCB0aGVyZSBhcmUgbXVsdGlwbGUgd2F5cyBpbiB3aGljaCBkaXNjcmltaW5hdG9yeSBiaWFzZXMgY2FuIHNlZXAgaW50byBkYXRhLgpBbGdvcml0aG1zIHRyYWluZWQgb24gdGhvc2UgZGF0YSBpbmN1ciB0aGUgcmlzayBvZiBhbXBsaWZ5aW5nIHByZWp1ZGljZXMgYW5kCnNvY2lldGFsIHN0ZXJlb3R5cGVzIGJ5IG92ZXIgYXNzb2NpYXRpbmcgcHJvdGVjdGVkIGF0dHJpYnV0ZXMgc3VjaCBhcyBnZW5kZXIsCmV0aG5pY2l0eSBvciBkaXNhYmlsaXRpZXMgd2l0aCB0aGUgcHJlZGljdGlvbiB0YXNrLiBTdGFydGluZyBmcm9tIHRoZSBleHRlbnNpdmUKZXhwZXJpZW5jZSBvZiB0aGUgTmF0aW9uYWwgTWV0cm9sb2d5IEluc3RpdHV0ZSBvbiBtZWFzdXJlbWVudCBzdGFuZGFyZHMgYW5kCmNlcnRpZmljYXRpb24gcm9hZG1hcHMsIGFuZCBvZiBQb2xpdGVjbmljbyBkaSBUb3Jpbm8gb24gbWFjaGluZSBsZWFybmluZyBhcwp3ZWxsIGFzIG1ldGhvZHMgZm9yIGRvbWFpbiBiaWFzIGV2YWx1YXRpb24gYW5kIG1hc3RlcmluZywgd2UgcHJvcG9zZSBhIGZpcnN0CmpvaW50IGVmZm9ydCB0byBkZWZpbmUgdGhlIG9wZXJhdGlvbmFsIHN0ZXBzIG5lZWRlZCBmb3IgQUkgZmFpcm5lc3MKY2VydGlmaWNhdGlvbi4gU3BlY2lmaWNhbGx5IHdlIHdpbGwgb3ZlcnZpZXcgdGhlIGNyaXRlcmlhIHRoYXQgc2hvdWxkIGJlIG1ldCBieQphbiBBSSBzeXN0ZW0gYmVmb3JlIGNvbWluZyBpbnRvIG9mZmljaWFsIHNlcnZpY2UgYW5kIHRoZSBjb25mb3JtaXR5IGFzc2Vzc21lbnQKcHJvY2VkdXJlcyB1c2VmdWwgdG8gbW9uaXRvciBpdHMgZnVuY3Rpb25pbmcgZm9yIGZhaXIgZGVjaXNpb25zLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5UYXRpYW5hIFRvbW1hc2k8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlNpbHZpYSBCdWNjaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QmFyYmFyYSBDYXB1dG88L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlBpZXRybyBBc2luYXJpPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAyNDk4djEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDI0OTh2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iY3MuQUkiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDI0MjJ2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA0VDExOjUzOjQ4WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wNFQxMTo1Mzo0OFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5DbGFzc2lmaWNhdGlvbiBvZiBBdWRpbyBTZWdtZW50cyBpbiBDYWxsIENlbnRlciBSZWNvcmRpbmdzIHVzaW5nCiAgQ29udm9sdXRpb25hbCBSZWN1cnJlbnQgTmV1cmFsIE5ldHdvcmtzPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgRGV0YWlsZWQgc3RhdGlzdGljYWwgYW5hbHlzaXMgb2YgY2FsbCBjZW50ZXIgcmVjb3JkaW5ncyBpcyBjcml0aWNhbCBpbiB0aGUKY3VzdG9tZXIgcmVsYXRpb25zaGlwIG1hbmFnZW1lbnQgcG9pbnQgb2Ygdmlldy4gV2l0aCB0aGUgcmVjZW50IGFkdmFuY2VzIGluCmFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLCBtYW55IHRhc2tzIHJlZ2FyZGluZyB0aGUgY2FsY3VsYXRpb24gb2YgY2FsbApzdGF0aXN0aWNzIGFyZSBub3cgcGVyZm9ybWVkIGF1dG9tYXRpY2FsbHkuIFRoaXMgd29yayBwcm9wb3NlcyBhIG5ldXJhbCBuZXR3b3JrCmZyYW1ld29yayB3aGVyZSB0aGUgYWltIGlzIHRvIGNvcnJlY3RseSBpZGVudGlmeSBhdWRpbyBzZWdtZW50cyBhbmQgY2xhc3NpZnkKdGhlbSBhcyBlaXRoZXIgY3VzdG9tZXIgb3IgYWdlbnQgc2VjdGlvbnMuIEFjY3VyYXRlbHkgaWRlbnRpZnlpbmcgdGhlc2UKc2VjdGlvbnMgZ2l2ZXMgYSBmYWlyIG1ldHJpYyBmb3IgZXZhbHVhdGluZyBhZ2VudHMnIHBlcmZvcm1hbmNlcy4gV2UgaW5oZXJpdGVkCnRoZSBjb252b2x1dGlvbmFsIHJlY3VycmVudCBuZXVyYWwgbmV0d29yayAoQ1JOTikgYXJjaGl0ZWN0dXJlIGNvbW1vbmx5IHVzZWQKZm9yIHN1Y2ggcHJvYmxlbXMgYXMgbXVzaWMgZ2VucmUgY2xhc3NpZmljYXRpb24uIFdlIGFsc28gdGVzdGVkIHRoZSBzYW1lCmFyY2hpdGVjdHVyZSdzIHBlcmZvcm1hbmNlLCB3aGVyZSB0aGUgcHJldmlvdXMgY2xhc3MgaW5mb3JtYXRpb24gYW5kIHRoZSBnZW5kZXIKaW5mb3JtYXRpb24gb2Ygc3BlYWtlcnMgYXJlIGFsc28gYWRkZWQgdG8gdGhlIHRyYWluaW5nIGRhdGEgbGFiZWxzLiBXZSBzYXcgdGhhdApDUk5OIGNvdWxkIGdlbmVyYWxpemUgdGhlIHRyYWluaW5nIGRhdGEgYW5kIHBlcmZvcm0gd2VsbCBvbiB2YWxpZGF0aW9uIGRhdGEgZm9yCnRoaXMgcHJvYmxlbSB3aXRoIGFuZCB3aXRob3V0IHRoZSBnZW5kZXIgaW5mb3JtYXRpb24uIE1vcmVvdmVyLCBldmVuIHRoZQp0cmFpbmluZyB3YXMgcGVyZm9ybWVkIHVzaW5nIFR1cmtpc2ggc3BlZWNoIHNhbXBsZXM7IHRoZSB0cmFpbmVkIG5ldHdvcmsgd2FzCnByb3ZlbiB0byBhY2hpZXZlIGhpZ2ggYWNjdXJhY3kgZm9yIGNhbGwgY2VudGVyIHJlY29yZGluZ3MgaW4gb3RoZXIgbGFuZ3VhZ2VzCmxpa2UgR2VybWFuIGFuZCBFbmdsaXNoLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT7FnsO8a3LDvCBPemFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8bGluayBocmVmPSJodHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAyNDIydjEiIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJ0ZXh0L2h0bWwiLz4KICAgIDxsaW5rIHRpdGxlPSJwZGYiIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvcGRmLzIxMDYuMDI0MjJ2MSIgcmVsPSJyZWxhdGVkIiB0eXBlPSJhcHBsaWNhdGlvbi9wZGYiLz4KICAgIDxhcnhpdjpwcmltYXJ5X2NhdGVnb3J5IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIgdGVybT0iZWVzcy5BUyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImVlc3MuQVMiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5TRCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDIzNTJ2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTA0VDA5OjA0OjMzWjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wNFQwOTowNDozM1o8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5DT0xEOiBDb25jdXJyZW50IExvYWRzIERpc2FnZ3JlZ2F0b3IgZm9yIE5vbi1JbnRydXNpdmUgTG9hZCBNb25pdG9yaW5nPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgVGhlIG1vZGVybiBhcnRpZmljaWFsIGludGVsbGlnZW5jZSB0ZWNobmlxdWVzIHNob3cgdGhlIG91dHN0YW5kaW5nCnBlcmZvcm1hbmNlcyBpbiB0aGUgZmllbGQgb2YgTm9uLUludHJ1c2l2ZSBMb2FkIE1vbml0b3JpbmcgKE5JTE0pLiBIb3dldmVyLCB0aGUKcHJvYmxlbSByZWxhdGVkIHRvIHRoZSBpZGVudGlmaWNhdGlvbiBvZiBhIGxhcmdlIG51bWJlciBvZiBhcHBsaWFuY2VzIHdvcmtpbmcKc2ltdWx0YW5lb3VzbHkgaXMgdW5kZXJlc3RpbWF0ZWQuIE9uZSBvZiB0aGUgcmVhc29ucyBpcyB0aGUgYWJzZW5jZSBvZiBhCnNwZWNpZmljIGRhdGEuIEluIHRoaXMgcmVzZWFyY2ggd2UgcHJvcG9zZSB0aGUgU3ludGhlc2l6ZXIgb2YgTm9ybWFsaXplZApTaWduYXR1cmVzIChTTlMpIGFsZ29yaXRobSB0byBzaW11bGF0ZSB0aGUgYWdncmVnYXRlZCBjb25zdW1wdGlvbiB3aXRoIHVwIHRvIDEwCmNvbmN1cnJlbnQgbG9hZHMuIFRoZSByZXN1bHRzIHNob3cgdGhhdCB0aGUgc3ludGhldGljIGRhdGEgcHJvdmlkZXMgdGhlIG1vZGVscwp3aXRoIGF0IGxlYXN0IGFzIGEgcG93ZXJmdWwgaWRlbnRpZmljYXRpb24gYWNjdXJhY3kgYXMgdGhlIHJlYWwtd29ybGQKbWVhc3VyZW1lbnRzLiBXZSBoYXZlIGRldmVsb3BlZCB0aGUgbmV1cmFsIGFyY2hpdGVjdHVyZSBuYW1lZCBDb25jdXJyZW50IExvYWRzCkRpc2FnZ3JlZ2F0b3IgKENPTEQpIHdoaWNoIGlzIHJlbGF0aXZlbHkgc2ltcGxlIGFuZCBlYXN5IHRvIHVuZGVyc3RhbmQgaW4KY29tcGFyaXNvbiB0byB0aGUgcHJldmlvdXMgYXBwcm9hY2hlcy4gT3VyIG1vZGVsIGFsbG93cyBpZGVudGlmeWluZyBmcm9tIDEgdG8KMTAgYXBwbGlhbmNlcyB3b3JraW5nIHNpbXVsdGFuZW91c2x5IHdpdGggbWVhbiBGMS1zY29yZSA3OC45NSUuIFRoZSBzb3VyY2UgY29kZQpvZiB0aGUgZXhwZXJpbWVudHMgcGVyZm9ybWVkIGlzIGF2YWlsYWJsZSBhdApodHRwczovL2dpdGh1Yi5jb20vYXJ4N3RpL2NvbGQtbmlsbS4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SWxpYSBLYW15c2hldjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RG1pdHJpaSBLcml1a292PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5FbGVuYSBHcnlhemluYTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjM1MnYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAyMzUydjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImVlc3MuU1AiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJlZXNzLlNQIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAyMTE4djI8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0wN1QwMTo1NjowMlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDNUMjA6MjI6MzJaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+QSBQcm9zcGVjdGl2ZSBPYnNlcnZhdGlvbmFsIFN0dWR5IHRvIEludmVzdGlnYXRlIFBlcmZvcm1hbmNlIG9mIGEgQ2hlc3QKICBYLXJheSBBcnRpZmljaWFsIEludGVsbGlnZW5jZSBEaWFnbm9zdGljIFN1cHBvcnQgVG9vbCBBY3Jvc3MgMTIgVS5TLgogIEhvc3BpdGFsczwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIEltcG9ydGFuY2U6IEFuIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIChBSSktYmFzZWQgbW9kZWwgdG8gcHJlZGljdCBDT1ZJRC0xOQpsaWtlbGlob29kIGZyb20gY2hlc3QgeC1yYXkgKENYUikgZmluZGluZ3MgY2FuIHNlcnZlIGFzIGFuIGltcG9ydGFudCBhZGp1bmN0IHRvCmFjY2VsZXJhdGUgaW1tZWRpYXRlIGNsaW5pY2FsIGRlY2lzaW9uIG1ha2luZyBhbmQgaW1wcm92ZSBjbGluaWNhbCBkZWNpc2lvbgptYWtpbmcuIERlc3BpdGUgc2lnbmlmaWNhbnQgZWZmb3J0cywgbWFueSBsaW1pdGF0aW9ucyBhbmQgYmlhc2VzIGV4aXN0IGluCnByZXZpb3VzbHkgZGV2ZWxvcGVkIEFJIGRpYWdub3N0aWMgbW9kZWxzIGZvciBDT1ZJRC0xOS4gVXRpbGl6aW5nIGEgbGFyZ2Ugc2V0Cm9mIGxvY2FsIGFuZCBpbnRlcm5hdGlvbmFsIENYUiBpbWFnZXMsIHdlIGRldmVsb3BlZCBhbiBBSSBtb2RlbCB3aXRoIGhpZ2gKcGVyZm9ybWFuY2Ugb24gdGVtcG9yYWwgYW5kIGV4dGVybmFsIHZhbGlkYXRpb24uCiAgQ29uY2x1c2lvbnMgYW5kIFJlbGV2YW5jZTogQUktYmFzZWQgZGlhZ25vc3RpYyB0b29scyBtYXkgc2VydmUgYXMgYW4gYWRqdW5jdCwKYnV0IG5vdCByZXBsYWNlbWVudCwgZm9yIGNsaW5pY2FsIGRlY2lzaW9uIHN1cHBvcnQgb2YgQ09WSUQtMTkgZGlhZ25vc2lzLCB3aGljaApsYXJnZWx5IGhpbmdlcyBvbiBleHBvc3VyZSBoaXN0b3J5LCBzaWducywgYW5kIHN5bXB0b21zLiBXaGlsZSBBSS1iYXNlZCB0b29scwpoYXZlIG5vdCB5ZXQgcmVhY2hlZCBmdWxsIGRpYWdub3N0aWMgcG90ZW50aWFsIGluIENPVklELTE5LCB0aGV5IG1heSBzdGlsbApvZmZlciB2YWx1YWJsZSBpbmZvcm1hdGlvbiB0byBjbGluaWNpYW5zIHRha2VuIGludG8gY29uc2lkZXJhdGlvbiBhbG9uZyB3aXRoCmNsaW5pY2FsIHNpZ25zIGFuZCBzeW1wdG9tcy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SnUgU3VuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5MZSBQZW5nPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5UYWlodWkgTGk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkR5YWggQWRpbGE8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlphY2ggWmFpbWFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5HZW5ldmlldmUgQi4gTWVsdG9uPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5OaWNob2xhcyBJbmdyYWhhbTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RXJpYyBNdXJyYXk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkRhbmllbCBCb2xleTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U2VhbiBTd2l0emVyPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Kb2huIEwuIEJ1cm5zPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LdW4gSHVhbmc8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlRhZGFzaGkgQWxsZW48L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlNjb3R0IEQuIFN0ZWVuYnVyZzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SnVkeSBXYXdpcmEgR2ljaG95YTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RXJpY2ggS3VtbWVyZmVsZDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Q2hyaXN0b3BoZXIgVGlnbmFuZWxsaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmRvaSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPjEwLjExMDEvMjAyMS4wNi4wNC4yMTI1ODMxNjwvYXJ4aXY6ZG9pPgogICAgPGxpbmsgdGl0bGU9ImRvaSIgaHJlZj0iaHR0cDovL2R4LmRvaS5vcmcvMTAuMTEwMS8yMDIxLjA2LjA0LjIxMjU4MzE2IiByZWw9InJlbGF0ZWQiLz4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+Q2hlY2sgb3V0IHRoZSBtZWRSeGl2IHZlcnNpb24gYXQKICBodHRwczovL2RvaS5vcmcvMTAuMTEwMS8yMDIxLjA2LjA0LjIxMjU4MzE2IGZvciB1cGRhdGVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjExOHYyIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAyMTE4djIiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImVlc3MuSVYiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJlZXNzLklWIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuQ1YiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5MRyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDIwMDZ2MTwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTAzVDE3OjIyOjQ0WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wM1QxNzoyMjo0NFo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5DbG91ZC1FbmFibGVkIEhpZ2gtQWx0aXR1ZGUgUGxhdGZvcm0gU3lzdGVtczogQ2hhbGxlbmdlcyBhbmQKICBPcHBvcnR1bml0aWVzPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgQXVnbWVudGluZyBncm91bmQtbGV2ZWwgY29tbXVuaWNhdGlvbnMgd2l0aCBmbHlpbmcgbmV0d29ya3MsIHN1Y2ggYXMgdGhlCmhpZ2gtYWx0aXR1ZGUgcGxhdGZvcm0gc3lzdGVtIChIQVBTKSwgaXMgYW1vbmcgdGhlIG1ham9yIGlubm92YXRpdmUgaW5pdGlhdGl2ZXMKb2YgdGhlIG5leHQgZ2VuZXJhdGlvbiBvZiB3aXJlbGVzcyBzeXN0ZW1zICg2RykuIEdpdmVuIEhBUFMgcXVhc2ktc3RhdGljCnBvc2l0aW9uaW5nIGF0IHRoZSBzdHJhdG9zcGhlcmUsIEhBUFMtdG8tZ3JvdW5kIGFuZCBIQVBTLXRvLWFpciBjb25uZWN0aXZpdHkKZnJhbWV3b3JrcyBhcmUgZXhwZWN0ZWQgdG8gYmUgcHJvbGlmaWMgaW4gdGVybXMgb2YgZGF0YSBhY3F1aXNpdGlvbiBhbmQKY29tcHV0aW5nLCBlc3BlY2lhbGx5IGdpdmVuIHRoZSBtaWxkIHdlYXRoZXIgYW5kIHF1YXNpLWNvbnN0YW50IHdpbmQgc3BlZWQKY2hhcmFjdGVyaXN0aWNzIG9mIHRoZSBzdHJhdG9zcGhlcmljIGxheWVyLiBUaGlzIHBhcGVyIGV4cGxvcmVzIHRoZQpvcHBvcnR1bml0aWVzIHN0ZW1taW5nIGZyb20gdGhlIHJlYWxpemF0aW9uIG9mIGNsb3VkLWVuYWJsZWQgSEFQUyBpbiB0aGUKY29udGV4dCBvZiB0ZWxlY29tbXVuaWNhdGlvbnMgYXBwbGljYXRpb25zIGFuZCBzZXJ2aWNlcy4gVGhlIHBhcGVyIGZpcnN0CmFkdm9jYXRlcyBmb3IgdGhlIHBvdGVudGlhbCBwaHlzaWNhbCBhZHZhbnRhZ2VzIG9mIGRlcGxveWluZyBIQVBTIGFzIGZseWluZwpkYXRhLWNlbnRlcnMsIGFsc28ga25vd24gYXMgc3VwZXItbWFjcm8gYmFzZSBzdGF0aW9ucy4gVGhlIHBhcGVyIHRoZW4gcHJlc2VudHMKdGhlIG1lcml0cyB0aGF0IGNhbiBiZSBhY2hpZXZlZCBieSBpbnRlZ3JhdGluZyB2YXJpb3VzIGNsb3VkIHNlcnZpY2VzIHdpdGhpbgp0aGUgSEFQUywgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGNsb3VkLXR5cGUgYXBwbGljYXRpb25zIHRoYXQgd291bGQgdXRpbGl6ZSB0aGUKSEFQUyBmb3IgZW5oYW5jaW5nIHRoZSBxdWFsaXR5LCByYW5nZSwgYW5kIHR5cGVzIG9mIG9mZmVyZWQgc2VydmljZXMuIFRoZSBwYXBlcgpmdXJ0aGVyIHNoZWRzIGxpZ2h0IG9uIHRoZSBjaGFsbGVuZ2VzIHRoYXQgbmVlZCB0byBiZSBhZGRyZXNzZWQgZm9yIHJlYWxpemluZwpwcmFjdGljYWwgY2xvdWQtZW5hYmxlZCBIQVBTLCBtYWlubHksIHRob3NlIHJlbGF0ZWQgdG8gdGhlIGhpZ2ggZW5lcmd5LApwcm9jZXNzaW5nIHBvd2VyLCBxdWFsaXR5IG9mIHNlcnZpY2UgKFFvUyksIGFuZCBzZWN1cml0eSBjb25zaWRlcmF0aW9ucy4KRmluYWxseSwgdGhlIHBhcGVyIGRpc2N1c3NlcyBzb21lIG9wZW4gaXNzdWVzIG9uIHRoZSB0b3BpYywgbmFtZWx5LCBIQVBTCm1vYmlsaXR5IGFuZCBtZXNzYWdlIHJvdXRpbmcsIEhBUFMgc2VjdXJpdHkgdmlhIGJsb2NrY2hhaW4gYW5kIG1hY2hpbmUKbGVhcm5pbmcsIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLWJhc2VkIHJlc291cmNlIGFsbG9jYXRpb24gaW4gY2xvdWQtZW5hYmxlZApIQVBTLCBhbmQgaW50ZWdyYXRpb24gd2l0aCB2ZXJ0aWNhbCBoZXRlcm9nZW5lb3VzIG5ldHdvcmtzLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LaGFsZWVsIE1lcnNoYWQ8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkhheXNzYW0gRGFocm91ajwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+SGFkaSBTYXJpZWRkZWVuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5CYXNlbSBTaGloYWRhPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5UYXJlcSBBbC1OYWZmb3VyaTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+TW9oYW1lZC1TbGltIEFsb3Vpbmk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+MTggcGFnZXMsIDQgZmlndXJlcywgMSB0YWJsZTwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDIwMDZ2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wMjAwNnYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5OSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLk5JIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KPC9mZWVkPgo=
  recorded_at: Thu, 10 Jun 2021 19:26:09 GMT
recorded_with: VCR 6.0.0
