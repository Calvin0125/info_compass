---
http_interactions:
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22synthetic%20biology%22%20OR%20abs:%22synthetic%20biology%22&sortBy=submittedDate&sortOrder=descending&start=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 10 Jun 2021 19:58:07 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '7962'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Jun 2021 19:58:09 GMT
recorded_with: VCR 6.0.0
