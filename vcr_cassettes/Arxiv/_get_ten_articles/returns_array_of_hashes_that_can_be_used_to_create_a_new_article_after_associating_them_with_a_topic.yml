---
http_interactions:
- request:
    method: get
    uri: http://export.arxiv.org/api/query?search_query=ti:%22synthetic%20biology%22%20OR%20abs:%22synthetic%20biology%22&sortBy=submittedDate&sortOrder=descending&start=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.7.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 22 Aug 2021 23:19:10 GMT
      Server:
      - Apache
      Access-Control-Allow-Origin:
      - "*"
      Vary:
      - Accept-Encoding,User-Agent
      Content-Length:
      - '8534'
      Content-Type:
      - application/atom+xml; charset=UTF-8
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZlZWQgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDUvQXRvbSI+CiAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hcGkvcXVlcnk/c2VhcmNoX3F1ZXJ5JTNEdGklM0ElMjJzeW50aGV0aWMlMjBiaW9sb2d5JTIyJTIwT1IlMjBhYnMlM0ElMjJzeW50aGV0aWMlMjBiaW9sb2d5JTIyJTI2aWRfbGlzdCUzRCUyNnN0YXJ0JTNEMCUyNm1heF9yZXN1bHRzJTNEMTAiIHJlbD0ic2VsZiIgdHlwZT0iYXBwbGljYXRpb24vYXRvbSt4bWwiLz4KICA8dGl0bGUgdHlwZT0iaHRtbCI+QXJYaXYgUXVlcnk6IHNlYXJjaF9xdWVyeT10aToic3ludGhldGljIGJpb2xvZ3kiIE9SIGFiczoic3ludGhldGljIGJpb2xvZ3kiJmFtcDtpZF9saXN0PSZhbXA7c3RhcnQ9MCZhbXA7bWF4X3Jlc3VsdHM9MTA8L3RpdGxlPgogIDxpZD5odHRwOi8vYXJ4aXYub3JnL2FwaS90SElIMjVQVDRJMWRycGVwdHdPT0xReHVvTm88L2lkPgogIDx1cGRhdGVkPjIwMjEtMDgtMjJUMDA6MDA6MDAtMDQ6MDA8L3VwZGF0ZWQ+CiAgPG9wZW5zZWFyY2g6dG90YWxSZXN1bHRzIHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+MTU4PC9vcGVuc2VhcmNoOnRvdGFsUmVzdWx0cz4KICA8b3BlbnNlYXJjaDpzdGFydEluZGV4IHhtbG5zOm9wZW5zZWFyY2g9Imh0dHA6Ly9hOS5jb20vLS9zcGVjL29wZW5zZWFyY2gvMS4xLyI+MDwvb3BlbnNlYXJjaDpzdGFydEluZGV4PgogIDxvcGVuc2VhcmNoOml0ZW1zUGVyUGFnZSB4bWxuczpvcGVuc2VhcmNoPSJodHRwOi8vYTkuY29tLy0vc3BlYy9vcGVuc2VhcmNoLzEuMS8iPjEwPC9vcGVuc2VhcmNoOml0ZW1zUGVyUGFnZT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwOC4wODE2M3YxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDgtMThUMTQ6MTQ6MzJaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA4LTE4VDE0OjE0OjMyWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkNsb25pbmcgdmVjdG9ycyBhbmQgY29udGFtaW5hdGlvbiBpbiBtZXRhZ2Vub21pYyBkYXRhc2V0cyByYWlzZSBjb25jZXJucwogIG92ZXIgcGFuZ29saW4gQ29WIGdlbm9tZSBhdXRoZW50aWNpdHk8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBNZXRhZ2Vub21pYyBkYXRhc2V0cyBmcm9tIHBhbmdvbGluIHRpc3N1ZSBzcGVjaW1lbnMgaGF2ZSBwcmV2aW91c2x5IHlpZWxkZWQKU0FSUy1yZWxhdGVkIGNvcm9uYXZpcnVzZXMgd2hpY2ggc2hvdyBoaWdoIGhvbW9sb2d5IGluIHRoZWlyIHJlY2VwdG9yIGJpbmRpbmcKZG9tYWluIHRvIFNBUlMtQ29WLTIsIHN1Z2dlc3RpbmcgYSBwb3RlbnRpYWwgem9vbm90aWMgc291cmNlIGZvciB0aGlzIGZlYXR1cmUKb2YgdGhlIGh1bWFuIHZpcnVzLCBwb3NzaWJseSB2aWEgcmVjb21iaW5hdGlvbiAoTGl1IGV0IGFsLiAyMDE5LCBMYW0gZXQgYWwuCjIwMjAsIFhpYW8gZXQgYWwuIDIwMjAsIExpdSBldCBhbC4gMjAyMCkuIEhlcmUgd2UgcmUtZXhhbWluZSB0aGVzZSBwdWJsaXNoZWQKZGF0YXNldHMuIFdlIHJlcG9ydCB0aGF0IG9ubHkgYSBmZXcgcGFuZ29saW4gc2FtcGxlcyB3ZXJlIGZvdW5kIHRvIGNvbnRhaW4KY29yb25hdmlydXMgcmVhZHMsIGFuZCBldmVuIHRoZW4gaW4gbG93IGFidW5kYW5jZSwgd2hpbGUgb3RoZXIgdmlydXNlcyB3ZXJlCnByZXNlbnQgaW4gbXVjaCBoaWdoZXIgYWJ1bmRhbmNlLiBUaGlzIG1ha2VzIGl0IHVubGlrZWx5IHRoYXQgdGhlIHBhbmdvbGlucyBpbgpxdWVzdGlvbiBoYWQgYSBjb3JvbmF2aXJ1cyBpbmZlY3Rpb24gd2hpbGUgYWxpdmUuIFdlIGFsc28gZGlzY292ZXJlZCBleHRlbnNpdmUKY29udGFtaW5hdGlvbiB3aXRoIGh1bWFuLCByb2RlbnQsIGFuZCBvdGhlciBtYW1tYWxpYW4gZ2VuZSBzZXF1ZW5jZXMsIHdoaWNoIHdhcwphIHN1cnByaXNpbmcgZmluZGluZy4gRmluYWxseSwgd2UgdW5jb3ZlcmVkIGEgbnVtYmVyIG9mIHBhbmdvbGluIENvViBzZXF1ZW5jZXMKZW1iZWRkZWQgaW4gc3RhbmRhcmQgbGFib3JhdG9yeSBjbG9uaW5nIHZlY3RvcnMsIHdoaWNoIHN1Z2dlc3RzIHRoZSBwYW5nb2xpbgpzcGVjaW1lbnMgY291bGQgaGF2ZSBiZWVuIGNvbnRhbWluYXRlZCB3aXRoIHNlcXVlbmNlcyBkZXJpdmVkIGZyb20gc3ludGhldGljCmJpb2xvZ3kgZXhwZXJpbWVudHMuIEZvciB0aGVzZSByZWFzb25zLCBhbGwgY3VycmVudCB2ZXJzaW9ucyBvZiB0aGUgY2l0ZWQKcGFwZXJzIGNsYWltaW5nIGEgem9vbm90aWMgaW5mZWN0aW9uIG9mIHBhbmdvbGlucyB3aXRoIGEgU0FSUy1yIENvViBzaG91bGQgYmUKY29uc2lkZXJlZCB1bnJlbGlhYmxlLCBhbmQgZWl0aGVyIHN1YnN0YW50aWFsIGNvcnJlY3Rpb25zIGFuZCBjbGFyaWZpY2F0aW9ucwpzaG91bGQgYmUgcHJvdmlkZWQgb3IgdGhlIHBhcGVycyBpbiBxdWVzdGlvbiBzaG91bGQgYmUgcmV0cmFjdGVkLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BZHJpYW4gSm9uZXM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkRhb3l1IFpoYW5nPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5ZdXJpIERlaWdpbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U3RldmVuIEMuIFF1YXk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpjb21tZW50IHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+MzQgcGFnZXMsIDE2IGZpZ3VyZXMsIDMgdGFibGVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwOC4wODE2M3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA4LjA4MTYzdjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09InEtYmlvLkdOIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uR04iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA4LjA3Mzg4djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wOC0xN1QwMDo0MzowMFo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDgtMTdUMDA6NDM6MDBaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+QmF5ZXNpYW4gYW5kIEFsZ2VicmFpYyBTdHJhdGVnaWVzIHRvIERlc2lnbiBpbiBTeW50aGV0aWMgQmlvbG9neTwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIElubm92YXRpb24gaW4gc3ludGhldGljIGJpb2xvZ3kgb2Z0ZW4gc3RpbGwgZGVwZW5kcyBvbiBsYXJnZS1zY2FsZQpleHBlcmltZW50YWwgdHJpYWwtYW5kLWVycm9yLCBkb21haW4gZXhwZXJ0aXNlLCBhbmQgaW5nZW51aXR5LiBUaGUgYXBwbGljYXRpb24Kb2YgcmF0aW9uYWwgZGVzaWduIGVuZ2luZWVyaW5nIG1ldGhvZHMgcHJvbWlzZSB0byBtYWtlIHRoaXMgbW9yZSBlZmZpY2llbnQsCmZhc3RlciwgY2hlYXBlciBhbmQgc2FmZXIuIEJ1dCB0aGlzIHJlcXVpcmVzIG1hdGhlbWF0aWNhbCBtb2RlbHMgb2YgY2VsbHVsYXIKc3lzdGVtcy4gQW5kIGZvciB0aGVzZSBtb2RlbHMgd2UgdGhlbiBoYXZlIHRvIGRldGVybWluZSBpZiB0aGV5IGNhbiBtZWV0IG91cgppbnRlbmRlZCB0YXJnZXQgYmVoYXZpb3VyLiBIZXJlIHdlIGRldmVsb3AgdHdvIGNvbXBsZW1lbnRhcnkgYXBwcm9hY2hlcyB0aGF0CmFsbG93IHVzIHRvIGRldGVybWluZSB3aGV0aGVyIGEgZ2l2ZW4gbW9sZWN1bGFyIGNpcmN1aXQsIHJlcHJlc2VudGVkIGJ5IGEKbWF0aGVtYXRpY2FsIG1vZGVsLCBpcyBjYXBhYmxlIG9mIGZ1bGZpbGxpbmcgb3VyIGRlc2lnbiBvYmplY3RpdmVzLiBXZSBkaXNjdXNzCmFsZ2VicmFpYyBtZXRob2RzIHRoYXQgYXJlIGNhcGFibGUgb2YgaWRlbnRpZnlpbmcgZ2VuZXJhbCBwcmluY2lwbGVzCmd1YXJhbnRlZWluZyBkZXNpcmVkIGJlaGF2aW91cjsgYW5kIHdlIHByb3ZpZGUgYW4gb3ZlcnZpZXcgb3ZlciBCYXllc2lhbiBkZXNpZ24KYXBwcm9hY2hlcyB0aGF0IGFsbG93IHVzIHRvIGNob29zZSBmcm9tIGEgc2V0IG9mIG1vZGVscywgdGhhdCBtb2RlbCB3aGljaCBoYXMKdGhlIGhpZ2hlc3QgcHJvYmFiaWxpdHkgb2YgZnVsZmlsbGluZyBvdXIgZGVzaWduIG9iamVjdGl2ZXMuIFdlIGRpc2N1c3MgdGhlaXIKdXNlcyBpbiB0aGUgY29udGV4dCBvZiBiaW9jaGVtaWNhbCBhZGFwdGF0aW9uLCBhbmQgdGhlbiBjb25zaWRlciBob3cgcm9idXN0bmVzcwpjYW4gYW5kIHNob3VsZCBhZmZlY3Qgb3VyIGRlc2lnbiBhcHByb2FjaC4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+Um9ieW4gUC4gQXJhdWpvPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5TZWFuIFQuIFZpdHRhZGVsbG88L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1pY2hhZWwgUC4gSC4gU3R1bXBmPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPjEyIHBhZ2VzLDggZmlndXJlczwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDguMDczODh2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwOC4wNzM4OHYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWJpby5NTiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLk1OIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uQ0IiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA4LjAwOTUwdjE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wOC0wMlQxNDo1MDowNlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDgtMDJUMTQ6NTA6MDZaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+QU5ET1IgYW5kIGJleW9uZDogZHluYW1pY2FsbHkgc3dpdGNoYWJsZSBsb2dpYyBnYXRlcyBhcyBtb2R1bGVzIGZvcgogIGZsZXhpYmxlIGluZm9ybWF0aW9uIHByb2Nlc3Npbmc8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBVbmRlcnN0YW5kaW5nIGhvdyBjb21wbGV4IChiaW8tKWNoZW1pY2FsIHBhdGh3YXlzIGFuZCByZWd1bGF0b3J5IG5ldHdvcmtzIG1heQpiZSBjYXBhYmxlIG9mIHByb2Nlc3NpbmcgaW5mb3JtYXRpb24gaW4gZWZmaWNpZW50LCBmbGV4aWJsZSwgYW5kIHJvYnVzdCB3YXlzIGlzCmEga2V5IHF1ZXN0aW9uIHdpdGggaW1wbGljYXRpb25zIHRvdWNoaW5nIGZpZWxkcyBhY3Jvc3MgYmlvbG9neSwgc3lzdGVtcwpiaW9sb2d5LCBiaW9jaGVtaXN0cnksIHN5bnRoZXRpYyBiaW9sb2d5LCBkeW5hbWljYWwgc3lzdGVtcyB0aGVvcnksIGFuZCBuZXR3b3JrCnNjaWVuY2UuIENvbnNpZGVyYWJsZSBlZmZvcnQgaGFzIGJlZW4gZm9jdXNlZCBvbiB0aGUgaWRlbnRpZmljYXRpb24gYW5kCmNoYXJhY3Rlcml6YXRpb24gb2Ygc3RydWN0dXJhbCBtb3RpZnMgaW4gdGhlc2Ugc2lnbmFsaW5nIG5ldHdvcmtzLCBhbmQKY29tcGFuaW9uIGVmZm9ydHMgaGF2ZSBpbnN0ZWFkIHNvdWdodCB0byBjYXN0IHRoZWlyIG9wZXJhdGlvbiBhcyBjb250cm9sbGVkIGJ5CmR5bmFtaWNhbCBtb2R1bGVzIHRoYXQgYXBwZWFyIG91dCBvZiBkeW5hbWljYWwgY29ycmVsYXRpb25zIGR1cmluZyBpbmZvcm1hdGlvbgpwcm9jZXNzaW5nLiBXaGlsZSBib3RoIHRoZXNlIGFwcHJvYWNoZXMgaGF2ZSBiZWVuIHN1Y2Nlc3NmdWwgaW4gbWFueSBleGFtcGxlcwpvZiBiaW9sb2dpY2FsIGluZm9ybWF0aW9uIHByb2Nlc3NpbmcsIGNhc2VzIGluIHdoaWNoIHRoZSBzaWduYWxpbmcgb3IKcmVndWxhdG9yeSBuZXR3b3JrIGV4aGliaXRzIG11bHRpLWZ1bmN0aW9uYWxpdHkgb3IgY29udGV4dCBkZXBlbmRlbmNlIHJlbWFpbgpwcm9ibGVtYXRpYy4gV2UgaGVyZSBwcm9wb3NlIGEgc21hbGwgc2V0IG9mIGhpZ2hlci1vcmRlciBlZmZlY3RpdmUgbW9kdWxlcyB0aGF0CnNpbXVsdGFuZW91c2x5IGluY29ycG9yYXRlIGJvdGggbmV0d29yayBzdHJ1Y3R1cmUgYW5kIHRoZSBhdHRlbmRhbnQgZHluYW1pY2FsCmxhbmRzY2FwZS4gSW4gc28gZG9pbmcsIHdlIHJlbmRlciBlZmZlY3RpdmUgY29tcHV0YXRpb25hbCB1bml0cyB0aGF0IGNhbgpwZXJmb3JtIGRpZmZlcmVudCBsb2dpY2FsIG9wZXJhdGlvbnMgYmFzZWQgcHVyZWx5IG9uIHRoZSBiYXNpbiBvZiBhdHRyYWN0aW9uIGluCndoaWNoIHRoZSBuZXR3b3JrIGR5bmFtaWNzIHJlc2lkZXMgb3IgaXMgc3RlZXJlZCB0by4gVGhlc2UgZHluYW1pY2FsbHkKc3dpdGNoYWJsZSBiaW9jaGVtaWNhbCBsb2dpYyBnYXRlcyByZXF1aXJlIGZld2VyIGNoZW1pY2FsIGNvbXBvbmVudHMgb3IgZ2VuZQpwcm9kdWN0cyBvdmVyYWxsIHRoYW4gdGhlaXIgdHJhZGl0aW9uYWwgYW5hbG9ncyB3aGVyZSBzdGF0aWMsIHNlcGFyYXRlIGdhdGVzCmFyZSB1c2VkIGZvciBlYWNoIGRlc2lyZWQgZnVuY3Rpb24uIFdlIGRlbW9uc3RyYXRlIHRoZSBhcHBsaWNhYmlsaXR5IGFuZCBsaW1pdHMKb2YgdGhlc2UgZmxleGlibGUgZ2F0ZXMgYnkgZGV0ZXJtaW5pbmcgYSByb2J1c3QgcmFuZ2Ugb2YgcGFyYW1ldGVycyBvdmVyIHdoaWNoCnRoZXkgY29ycmVjdGx5IG9wZXJhdGUgYW5kIGZ1cnRoZXIgY2hhcmFjdGVyaXplIHRoZSByZXNpbGllbmNlIG9mIHRoZWlyCmZ1bmN0aW9uIGFnYWluc3QgaW50cmluc2ljIG5vaXNlIG9mIHRoZSBjb25zdGl0dWVudCByZWFjdGlvbnMgdXNpbmcgdGhlIHRoZW9yeQpvZiBsYXJnZSBkZXZpYXRpb25zLiBXZSBhbHNvIHNob3cgdGhlIGNhcGFiaWxpdHkgb2YgdGhpcyBmcmFtZXdvcmsgZm9yIGdlbmVyYWwKY29tcHV0YXRpb25zIGJ5IGRlc2lnbmluZyBhIGJpbmFyeSBhZGRlci9zdWJ0cmFjdG9yIGNpcmN1aXQgY29tcG9zZWQgb2Ygb25seQpzaXggY29tcG9uZW50cy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+TW9oYW1tYWRyZXphIEJhaGFkb3JpYW48L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkNhcmwgRC4gTW9kZXM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDguMDA5NTB2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwOC4wMDk1MHYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWJpby5NTiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLk1OIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0ibmxpbi5BTyIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InBoeXNpY3MuYmlvLXBoIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNy4xMzY4MXYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDctMjlUMDA6Mzc6MDdaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA3LTI5VDAwOjM3OjA3WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPlJhdGUtSW5kZXBlbmRlbnQgQ29tcHV0YXRpb24gaW4gQ29udGludW91cyBDaGVtaWNhbCBSZWFjdGlvbiBOZXR3b3JrczwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFVuZGVyc3RhbmRpbmcgdGhlIGFsZ29yaXRobWljIGJlaGF2aW9ycyB0aGF0IGFyZSAqaW4gcHJpbmNpcGxlKiByZWFsaXphYmxlIGluCmEgY2hlbWljYWwgc3lzdGVtIGlzIG5lY2Vzc2FyeSBmb3IgYSByaWdvcm91cyB1bmRlcnN0YW5kaW5nIG9mIHRoZSBkZXNpZ24KcHJpbmNpcGxlcyBvZiBiaW9sb2dpY2FsIHJlZ3VsYXRvcnkgbmV0d29ya3MuIEZ1cnRoZXIsIGFkdmFuY2VzIGluIHN5bnRoZXRpYwpiaW9sb2d5IGhlcmFsZCB0aGUgdGltZSB3aGVuIHdlJ2xsIGJlIGFibGUgdG8gcmF0aW9uYWxseSBlbmdpbmVlciBjb21wbGV4CmNoZW1pY2FsIHN5c3RlbXMsIGFuZCB3aGVuIGlkZWFsaXplZCBmb3JtYWwgbW9kZWxzIHdpbGwgYmVjb21lIGJsdWVwcmludHMgZm9yCmVuZ2luZWVyaW5nLiBDb3VwbGVkIGNoZW1pY2FsIGludGVyYWN0aW9ucyBpbiBhIHdlbGwtbWl4ZWQgc29sdXRpb24gYXJlCmNvbW1vbmx5IGZvcm1hbGl6ZWQgYXMgY2hlbWljYWwgcmVhY3Rpb24gbmV0d29ya3MgKENSTnMpLiBIb3dldmVyLCBkZXNwaXRlIHRoZQp3aWRlc3ByZWFkIHVzZSBvZiBDUk5zIGluIHRoZSBuYXR1cmFsIHNjaWVuY2VzLCB0aGUgcmFuZ2Ugb2YgY29tcHV0YXRpb25hbApiZWhhdmlvcnMgZXhoaWJpdGVkIGJ5IENSTnMgaXMgbm90IHdlbGwgdW5kZXJzdG9vZC4gSGVyZSB3ZSBzdHVkeSB0aGUgZm9sbG93aW5nCnByb2JsZW06IHdoYXQgZnVuY3Rpb25zICRmOlxtYXRoYmJ7Un1eayBcdG8gXG1hdGhiYntSfSQgY2FuIGJlIGNvbXB1dGVkIGJ5IGEKQ1JOLCBpbiB3aGljaCB0aGUgQ1JOIGV2ZW50dWFsbHkgcHJvZHVjZXMgdGhlIGNvcnJlY3QgYW1vdW50IG9mIHRoZSAib3V0cHV0Igptb2xlY3VsZSwgbm8gbWF0dGVyIHRoZSByYXRlIGF0IHdoaWNoIHJlYWN0aW9ucyBwcm9jZWVkPyBUaGlzIGNhcHR1cmVzIGEKcHJldmlvdXNseSB1bmV4cGxvcmVkLCBidXQgdmVyeSBuYXR1cmFsIGNsYXNzIG9mIGNvbXB1dGF0aW9uczogZm9yIGV4YW1wbGUsIHRoZQpyZWFjdGlvbiAkWF8xICsgWF8yIFx0byBZJCBjYW4gYmUgdGhvdWdodCB0byBjb21wdXRlIHRoZSBmdW5jdGlvbiAkeSA9ClxtaW4oeF8xLCB4XzIpJC4gU3VjaCBhIENSTiBpcyByb2J1c3QgaW4gdGhlIHNlbnNlIHRoYXQgaXQgaXMgY29ycmVjdCB3aGV0aGVyCml0cyBldm9sdXRpb24gaXMgZ292ZXJuZWQgYnkgdGhlIHN0YW5kYXJkIG1vZGVsIG9mIG1hc3MtYWN0aW9uIGtpbmV0aWNzLAphbHRlcm5hdGl2ZXMgc3VjaCBhcyBIaWxsLWZ1bmN0aW9uIG9yIE1pY2hhZWxpcy1NZW50ZW4ga2luZXRpY3MsIG9yIG90aGVyCmFyYml0cmFyeSBtb2RlbHMgb2YgY2hlbWlzdHJ5IHRoYXQgcmVzcGVjdCB0aGUgKGZ1bmRhbWVudGFsbHkgZGlnaXRhbCkKc3RvaWNoaW9tZXRyaWMgY29uc3RyYWludHMgKHdoYXQgYXJlIHRoZSByZWFjdGFudHMgYW5kIHByb2R1Y3RzPykuIFdlIGRldmVsb3AgYQpmb3JtYWwgZGVmaW5pdGlvbiBvZiBzdWNoIGNvbXB1dGF0aW9uIHVzaW5nIGEgbm92ZWwgbm90aW9uIG9mIHJlYWNoYWJpbGl0eSwgYW5kCnByb3ZlIHRoYXQgYSBmdW5jdGlvbiBpcyBjb21wdXRhYmxlIGluIHRoaXMgbWFubmVyIGlmIGFuZCBvbmx5IGlmIGl0IGlzCipjb250aW51b3VzIHBpZWNld2lzZSBsaW5lYXIqLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5Iby1MaW4gQ2hlbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGF2aWQgRG90eTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGF2aWQgU29sb3ZlaWNoaWs8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPld5YXR0IFJlZXZlczwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5wcmVsaW1pbmFyeSB2ZXJzaW9uIGFwcGVhcmVkIGluIElUQ1MgMjAxNDoKICBodHRwOi8vZG9pLm9yZy8xMC4xMTQ1LzI1NTQ3OTcuMjU1NDgyNzwvYXJ4aXY6Y29tbWVudD4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDcuMTM2ODF2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNy4xMzY4MXYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJjcy5FVCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkVUIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uTU4iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA3LjA2ODgydjE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNy0xNFQxNzo1NToyOFo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDctMTRUMTc6NTU6MjhaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+Q29uc2VydmF0aXZlIE9iamVjdGl2ZSBNb2RlbHMgZm9yIEVmZmVjdGl2ZSBPZmZsaW5lIE1vZGVsLUJhc2VkCiAgT3B0aW1pemF0aW9uPC90aXRsZT4KICAgIDxzdW1tYXJ5PiAgQ29tcHV0YXRpb25hbCBkZXNpZ24gcHJvYmxlbXMgYXJpc2UgaW4gYSBudW1iZXIgb2Ygc2V0dGluZ3MsIGZyb20gc3ludGhldGljCmJpb2xvZ3kgdG8gY29tcHV0ZXIgYXJjaGl0ZWN0dXJlcy4gSW4gdGhpcyBwYXBlciwgd2UgYWltIHRvIHNvbHZlIGRhdGEtZHJpdmVuCm1vZGVsLWJhc2VkIG9wdGltaXphdGlvbiAoTUJPKSBwcm9ibGVtcywgd2hlcmUgdGhlIGdvYWwgaXMgdG8gZmluZCBhIGRlc2lnbgppbnB1dCB0aGF0IG1heGltaXplcyBhbiB1bmtub3duIG9iamVjdGl2ZSBmdW5jdGlvbiBwcm92aWRlZCBhY2Nlc3MgdG8gb25seSBhCnN0YXRpYyBkYXRhc2V0IG9mIHByaW9yIGV4cGVyaW1lbnRzLiBTdWNoIGRhdGEtZHJpdmVuIG9wdGltaXphdGlvbiBwcm9jZWR1cmVzCmFyZSB0aGUgb25seSBwcmFjdGljYWwgbWV0aG9kcyBpbiBtYW55IHJlYWwtd29ybGQgZG9tYWlucyB3aGVyZSBhY3RpdmUgZGF0YQpjb2xsZWN0aW9uIGlzIGV4cGVuc2l2ZSAoZS5nLiwgd2hlbiBvcHRpbWl6aW5nIG92ZXIgcHJvdGVpbnMpIG9yIGRhbmdlcm91cwooZS5nLiwgd2hlbiBvcHRpbWl6aW5nIG92ZXIgYWlyY3JhZnQgZGVzaWducykuIFR5cGljYWwgbWV0aG9kcyBmb3IgTUJPIHRoYXQKb3B0aW1pemUgdGhlIGRlc2lnbiBhZ2FpbnN0IGEgbGVhcm5lZCBtb2RlbCBzdWZmZXIgZnJvbSBkaXN0cmlidXRpb25hbCBzaGlmdDoKaXQgaXMgZWFzeSB0byBmaW5kIGEgZGVzaWduIHRoYXQgImZvb2xzIiB0aGUgbW9kZWwgaW50byBwcmVkaWN0aW5nIGEgaGlnaAp2YWx1ZS4gVG8gb3ZlcmNvbWUgdGhpcywgd2UgcHJvcG9zZSBjb25zZXJ2YXRpdmUgb2JqZWN0aXZlIG1vZGVscyAoQ09NcyksIGEKbWV0aG9kIHRoYXQgbGVhcm5zIGEgbW9kZWwgb2YgdGhlIG9iamVjdGl2ZSBmdW5jdGlvbiB0aGF0IGxvd2VyIGJvdW5kcyB0aGUKYWN0dWFsIHZhbHVlIG9mIHRoZSBncm91bmQtdHJ1dGggb2JqZWN0aXZlIG9uIG91dC1vZi1kaXN0cmlidXRpb24gaW5wdXRzLCBhbmQKdXNlcyBpdCBmb3Igb3B0aW1pemF0aW9uLiBTdHJ1Y3R1cmFsbHksIENPTXMgcmVzZW1ibGUgYWR2ZXJzYXJpYWwgdHJhaW5pbmcKbWV0aG9kcyB1c2VkIHRvIG92ZXJjb21lIGFkdmVyc2FyaWFsIGV4YW1wbGVzLiBDT01zIGFyZSBzaW1wbGUgdG8gaW1wbGVtZW50IGFuZApvdXRwZXJmb3JtIGEgbnVtYmVyIG9mIGV4aXN0aW5nIG1ldGhvZHMgb24gYSB3aWRlIHJhbmdlIG9mIE1CTyBwcm9ibGVtcywKaW5jbHVkaW5nIG9wdGltaXppbmcgcHJvdGVpbiBzZXF1ZW5jZXMsIHJvYm90IG1vcnBob2xvZ2llcywgbmV1cmFsIG5ldHdvcmsKd2VpZ2h0cywgYW5kIHN1cGVyY29uZHVjdGluZyBtYXRlcmlhbHMuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkJyYW5kb24gVHJhYnVjY288L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkF2aXJhbCBLdW1hcjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+WGlueWFuZyBHZW5nPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5TZXJnZXkgTGV2aW5lPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPklDTUwgMjAyMS4gRmlyc3QgdHdvIGF1dGhvcnMgY29udHJpYnV0ZWQgZXF1YWxseS4gQ29kZSBhdDoKICBodHRwczovL2dpdGh1Yi5jb20vYnJhbmRvbnRyYWJ1Y2NvL2Rlc2lnbi1iYXNlbGluZXMvYmxvYi9jNjVhNTNmZTFlNjU2N2I3NDBmMGFkZjYwYzVkYjk5MjFjMWYyMzMwL2Rlc2lnbl9iYXNlbGluZXMvY29tc19jbGVhbmVkL19faW5pdF9fLnB5PC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNy4wNjg4MnYxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA3LjA2ODgydjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjE1ODg0djE8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0zMFQwODoxOTo0Nlo8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMzBUMDg6MTk6NDZaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+Q29tcGlsaW5nIEVsZW1lbnRhcnkgTWF0aGVtYXRpY2FsIEZ1bmN0aW9ucyBpbnRvIEZpbml0ZSBDaGVtaWNhbAogIFJlYWN0aW9uIE5ldHdvcmtzIHZpYSBhIFBvbHlub21pYWxpemF0aW9uIEFsZ29yaXRobSBmb3IgT0RFczwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFRoZSBUdXJpbmcgY29tcGxldGVuZXNzIHJlc3VsdCBmb3IgY29udGludW91cyBjaGVtaWNhbCByZWFjdGlvbiBuZXR3b3JrcwooQ1JOKSBzaG93cyB0aGF0IGFueSBjb21wdXRhYmxlIGZ1bmN0aW9uIG92ZXIgdGhlIHJlYWwgbnVtYmVycyBjYW4gYmUgY29tcHV0ZWQKYnkgYSBDUk4gb3ZlciBhIGZpbml0ZSBzZXQgb2YgZm9ybWFsIG1vbGVjdWxhciBzcGVjaWVzIHVzaW5nIGF0IG1vc3QKYmltb2xlY3VsYXIgcmVhY3Rpb25zIHdpdGggbWFzcyBhY3Rpb24gbGF3IGtpbmV0aWNzLiBUaGUgcHJvb2YgdXNlcyBhIHByZXZpb3VzCnJlc3VsdCBvZiBUdXJpbmcgY29tcGxldGVuZXNzIGZvciBmdW5jdGlvbnMgZGVmaW5lZCBieSBwb2x5bm9taWFsIG9yZGluYXJ5CmRpZmZlcmVudGlhbCBlcXVhdGlvbnMgKFBPREUpLCB0aGUgZHVhbHJhaWwgZW5jb2Rpbmcgb2YgcmVhbCB2YXJpYWJsZXMgYnkgdGhlCmRpZmZlcmVuY2Ugb2YgY29uY2VudHJhdGlvbiBiZXR3ZWVuIHR3byBtb2xlY3VsYXIgc3BlY2llcywgYW5kIGEgYmFjay1lbmQKcXVhZHJhdGl6YXRpb24gdHJhbnNmb3JtYXRpb24gdG8gcmVzdHJpY3QgdG8gZWxlbWVudGFyeSByZWFjdGlvbnMgd2l0aCBhdCBtb3N0CnR3byByZWFjdGFudHMuIEluIHRoaXMgcGFwZXIsIHdlIHByZXNlbnQgYSBwb2x5bm9taWFsaXphdGlvbiBhbGdvcml0aG0gb2YKcXVhZHJhdGljIHRpbWUgY29tcGxleGl0eSB0byB0cmFuc2Zvcm0gYSBzeXN0ZW0gb2YgZWxlbWVudGFyeSBkaWZmZXJlbnRpYWwKZXF1YXRpb25zIGluIFBPREUuIFRoaXMgYWxnb3JpdGhtIGlzIHVzZWQgYXMgYSBmcm9udC1lbmQgdHJhbnNmb3JtYXRpb24gdG8KY29tcGlsZSBhbnkgZWxlbWVudGFyeSBtYXRoZW1hdGljYWwgZnVuY3Rpb24sIGVpdGhlciBvZiB0aW1lIG9yIG9mIHNvbWUgaW5wdXQKc3BlY2llcywgaW50byBhIGZpbml0ZSBDUk4uIFdlIGlsbHVzdHJhdGUgdGhlIHBlcmZvcm1hbmNlIG9mIG91ciBjb21waWxlciBvbiBhCmJlbmNobWFyayBvZiBlbGVtZW50YXJ5IGZ1bmN0aW9ucyByZWxldmFudCB0byBDUk4gZGVzaWduIHByb2JsZW1zIGluIHN5bnRoZXRpYwpiaW9sb2d5IHNwZWNpZmllZCBieSBtYXRoZW1hdGljYWwgZnVuY3Rpb25zLiBJbiBwYXJ0aWN1bGFyLCB0aGUgYWJzdHJhY3QgQ1JOCm9idGFpbmVkIGJ5IGNvbXBpbGF0aW9uIG9mIHRoZSBIaWxsIGZ1bmN0aW9uIG9mIG9yZGVyIDUgaXMgY29tcGFyZWQgdG8gdGhlCm5hdHVyYWwgQ1JOIHN0cnVjdHVyZSBvZiBNQVBLIHNpZ25hbGxpbmcgbmV0d29ya3MuCjwvc3VtbWFyeT4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1hdGhpZXUgSGVtZXJ5PC9uYW1lPgogICAgICA8YXJ4aXY6YWZmaWxpYXRpb24geG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5MaWZld2FyZTwvYXJ4aXY6YWZmaWxpYXRpb24+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkZyYW7Dp29pcyBGYWdlczwvbmFtZT4KICAgICAgPGFyeGl2OmFmZmlsaWF0aW9uIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+TGlmZXdhcmU8L2FyeGl2OmFmZmlsaWF0aW9uPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5TeWx2YWluIFNvbGltYW48L25hbWU+CiAgICAgIDxhcnhpdjphZmZpbGlhdGlvbiB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPkxpZmV3YXJlPC9hcnhpdjphZmZpbGlhdGlvbj4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmpvdXJuYWxfcmVmIHhtbG5zOmFyeGl2PSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSI+UHJvY2VlZGluZ3Mgb2YgdGhlIG5pbmV0ZWVudGggaW50ZXJuYXRpb25hbCBjb25mZXJlbmNlIG9uCiAgQ29tcHV0YXRpb25hbCBNZXRob2RzIGluIFN5c3RlbXMgQmlvbG9neSwsIFNlcCAyMDIxLCBCb3JkZWF1eCwgRnJhbmNlPC9hcnhpdjpqb3VybmFsX3JlZj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMTU4ODR2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4xNTg4NHYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJxLWJpby5RTSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLlFNIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4xNDI3M3YxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMjdUMTY6Mzc6MTFaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTI3VDE2OjM3OjExWjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkEgU3lzdGVtYXRpYyBSZXZpZXcgb2YgQmlvLUN5YmVyIEludGVyZmFjZSBUZWNobm9sb2dpZXMgYW5kIFNlY3VyaXR5CiAgSXNzdWVzIGZvciBJbnRlcm5ldCBvZiBCaW8tTmFubyBUaGluZ3M8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBBZHZhbmNlcyBpbiBzeW50aGV0aWMgYmlvbG9neSBhbmQgbmFub3RlY2hub2xvZ3kgaGF2ZSBjb250cmlidXRlZCB0byB0aGUKZGVzaWduIG9mIHRvb2xzIHRoYXQgY2FuIGJlIHVzZWQgdG8gY29udHJvbCwgcmV1c2UsIG1vZGlmeSwgYW5kIHJlLWVuZ2luZWVyCmNlbGxzJyBzdHJ1Y3R1cmUsIGFzIHdlbGwgYXMgZW5hYmxpbmcgZW5naW5lZXJzIHRvIGVmZmVjdGl2ZWx5IHVzZSBiaW9sb2dpY2FsCmNlbGxzIGFzIHByb2dyYW1tYWJsZSBzdWJzdHJhdGVzIHRvIHJlYWxpemUgQmlvLU5hbm8gVGhpbmdzIChiaW9sb2dpY2FsCmVtYmVkZGVkIGNvbXB1dGluZyBkZXZpY2VzKS4gQmlvLU5hbm9UaGluZ3MgYXJlIGdlbmVyYWxseSB0aW55LCBub24taW50cnVzaXZlLAphbmQgY29uY2VhbGFibGUgZGV2aWNlcyB0aGF0IGNhbiBiZSB1c2VkIGZvciBpbi12aXZvIGFwcGxpY2F0aW9ucyBzdWNoIGFzCmludHJhLWJvZHkgc2Vuc2luZyBhbmQgYWN0dWF0aW9uIG5ldHdvcmtzLCB3aGVyZSB0aGUgdXNlIG9mIGFydGlmaWNpYWwgZGV2aWNlcwpjYW4gYmUgZGV0cmltZW50YWwuIFN1Y2ggKG5hbm8tc2NhbGUpIGRldmljZXMgY2FuIGJlIHVzZWQgaW4gdmFyaW91cyBoZWFsdGhjYXJlCnNldHRpbmdzIHN1Y2ggYXMgY29udGludW91cyBoZWFsdGggbW9uaXRvcmluZywgdGFyZ2V0ZWQgZHJ1ZyBkZWxpdmVyeSwgYW5kCm5hbm8tc3VyZ2VyaWVzLiBUaGVzZSBzZXJ2aWNlcyBjYW4gYWxzbyBiZSBncm91cGVkIHRvIGZvcm0gYSBjb2xsYWJvcmF0aXZlCm5ldHdvcmsgKGkuZS4sIG5hbm9uZXR3b3JrKSwgd2hvc2UgcGVyZm9ybWFuY2UgY2FuIHBvdGVudGlhbGx5IGJlIGltcHJvdmVkIHdoZW4KY29ubmVjdGVkIHRvIGhpZ2hlciBiYW5kd2lkdGggZXh0ZXJuYWwgbmV0d29ya3Mgc3VjaCBhcyB0aGUgSW50ZXJuZXQsIHNheSB2aWEKNUcuIEhvd2V2ZXIsIHRvIHJlYWxpemUgdGhlIElvQk5UIHBhcmFkaWdtLCBpdCBpcyBhbHNvIGltcG9ydGFudCB0byBzZWFtbGVzc2x5CmNvbm5lY3QgdGhlIGJpb2xvZ2ljYWwgZW52aXJvbm1lbnQgd2l0aCB0aGUgdGVjaG5vbG9naWNhbCBsYW5kc2NhcGUgYnkgaGF2aW5nIGEKZHluYW1pYyBpbnRlcmZhY2UgZGVzaWduIHRvIGNvbnZlcnQgYmlvY2hlbWljYWwgc2lnbmFscyBmcm9tIHRoZSBodW1hbiBib2R5CmludG8gYW4gZXF1aXZhbGVudCBlbGVjdHJvbWFnbmV0aWMgc2lnbmFsIChhbmQgdmljZSB2ZXJzYSkuIFRoaXMsCnVuZm9ydHVuYXRlbHksIHJpc2tzIHRoZSBleHBvc3VyZSBvZiBpbnRlcm5hbCBiaW9sb2dpY2FsIG1lY2hhbmlzbXMgdG8KY3liZXItYmFzZWQgc2Vuc2luZyBhbmQgbWVkaWNhbCBhY3R1YXRpb24sIHdpdGggcG90ZW50aWFsIHNlY3VyaXR5IGFuZCBwcml2YWN5CmltcGxpY2F0aW9ucy4gVGhpcyBwYXBlciBjb21wcmVoZW5zaXZlbHkgcmV2aWV3cyBiaW8tY3liZXIgaW50ZXJmYWNlIGZvciBJb0JOVAphcmNoaXRlY3R1cmUsIGZvY3VzaW5nIG9uIGJpby1jeWJlciBpbnRlcmZhY2luZyBvcHRpb25zIGZvciBJb0JOVCBsaWtlCmJpb2xvZ2ljYWxseSBpbnNwaXJlZCBiaW8tZWxlY3Ryb25pYyBkZXZpY2VzLCBSRklEIGVuYWJsZWQgaW1wbGFudGFibGUgY2hpcHMsCmFuZCBlbGVjdHJvbmljIHRhdHRvb3MuIFRoaXMgc3R1ZHkgYWxzbyBpZGVudGlmaWVzIGtub3duIGFuZCBwb3RlbnRpYWwgc2VjdXJpdHkKYW5kIHByaXZhY3kgdnVsbmVyYWJpbGl0aWVzIGFuZCBtaXRpZ2F0aW9uIHN0cmF0ZWdpZXMgZm9yIGNvbnNpZGVyYXRpb24gaW4KZnV0dXJlIElvQk5UIGRlc2lnbnMgYW5kIGltcGxlbWVudGF0aW9ucy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+U2lkcmEgWmFmYXI8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1vaHNpbiBOYXppcjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+VGFpbXVyIEJha2hzaGk8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPkhhc2FuIEFsaSBLaGF0dGFrPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5TYXJtYWR1bGxhaCBLaGFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5NdWhhbW1hZCBCaWxhbDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+S2ltLUt3YW5nIFJheW1vbmQgQ2hvbzwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+S3l1bmctU3VwIEt3YWs3PC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BbmVlcWEgU2FiYWg8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhcnhpdjpkb2kgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj4xMC4xMTA5L0FDQ0VTUy4yMDIxLjMwOTM0NDI8L2FyeGl2OmRvaT4KICAgIDxsaW5rIHRpdGxlPSJkb2kiIGhyZWY9Imh0dHA6Ly9keC5kb2kub3JnLzEwLjExMDkvQUNDRVNTLjIwMjEuMzA5MzQ0MiIgcmVsPSJyZWxhdGVkIi8+CiAgICA8YXJ4aXY6Y29tbWVudCB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iPjQxIHBhZ2VzLCA5IHRhYmxlcywgNiBmaWd1cmVzPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4xNDI3M3YxIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjE0MjczdjEiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLk5JIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTkkiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5DUiIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09ImNzLkVUIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KICA8ZW50cnk+CiAgICA8aWQ+aHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wOTg4MnYxPC9pZD4KICAgIDx1cGRhdGVkPjIwMjEtMDYtMThUMDI6NDk6MzZaPC91cGRhdGVkPgogICAgPHB1Ymxpc2hlZD4yMDIxLTA2LTE4VDAyOjQ5OjM2WjwvcHVibGlzaGVkPgogICAgPHRpdGxlPkVuZ2luZWVyZWQgQmFjdGVyaWEgQ29tcHV0YXRpb25hbGx5IFNvbHZlIENoZW1pY2FsbHkgR2VuZXJhdGVkIDJYMiBNYXplCiAgUHJvYmxlbXM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBNYXplIGdlbmVyYXRpbmcgYW5kIHNvbHZpbmcgYXJlIGNoYWxsZW5naW5nIHByb2JsZW1zIGluIG1hdGhlbWF0aWNzIGFuZApjb21wdXRpbmcuIEhlcmUgd2UgZ2VuZXJhdGVkIHNpbXBsZSAyWDIgbWF6ZSBwcm9ibGVtcyBhcHBseWluZyBmb3VyIGNoZW1pY2FscwphbmQgY3JlYXRlZCBhIHNldCBvZiBlbmdpbmVlcmVkIGJhY3RlcmlhLCB3aGljaCBpbiBhIG1peGVkIHBvcHVsYXRpb24gd29ya2VkIGFzCmEgY29tcHV0YXRpb25hbCBzb2x2ZXIgZm9yIGFueSBzdWNoIHByb2JsZW0uIFRoZSBpbnB1dC1vdXRwdXQgbWF0cmljZXMgb2YgYQptYXRoZW1hdGljYWwgbWF6ZSB3ZXJlIG1hcHBlZCB0aHJvdWdoIGEgdHJ1dGggdGFibGUsIHdoZXJlIHRoZSBsb2dpYyB2YWx1ZXMgb2YKZm91ciBjaGVtaWNhbCBpbnB1dHMgZGV0ZXJtaW5lZCB0aGUgc2l4dGVlbiBkaWZmZXJlbnQgMlgyIG1hemUgcHJvYmxlbXMgb24gYQpjaGVtaWNhbCBzcGFjZS4gT3VyIGVuZ2luZWVyZWQgYmFjdGVyaWEsIHdoaWNoIGNvbnNpc3RlZCBvZiBzaXggZGlmZmVyZW50CmdlbmV0aWMgbG9naWMgY2lyY3VpdHMgYW5kIGRpc3RyaWJ1dGVkIGFtb25nIHNpeCBjZWxsIHBvcHVsYXRpb25zIHByb2Nlc3NlZCB0aGUKY2hlbWljYWwgaW5mb3JtYXRpb24gYW5kIHNvbHZlZCB0aGUgcHJvYmxlbXMgYnkgZXhwcmVzc2luZyBvciBub3QgZXhwcmVzc2luZwpmb3VyIGRpZmZlcmVudCBmbHVvcmVzY2VudCBwcm90ZWlucy4gVGhlIHRocmVlIGF2YWlsYWJsZSBzb2x1dGlvbnMgd2VyZQp2aXN1YWxpemVkIGJ5IGdsb3dpbmcgYmFjdGVyaWEgYW5kIGZvciB0aGUgdGhpcnRlZW4gbm8gc29sdXRpb24gY2FzZXMgbm8KYmFjdGVyaWEgZ2xvd2VkLiBUaHVzLCBvdXIgc3lzdGVtIG5vdCBvbmx5IHNvbHZlZCB0aGUgbWF6ZSBwcm9ibGVtcyBidXQgYWxzbwpzaG93ZWQgdGhlIG51bWJlciBvZiBzb2x2YWJsZSBhbmQgdW5zb2x2YWJsZSBwcm9ibGVtcy4gVGhpcyB3b3JrIHByZXNlbnRlZCBhCm5ldyBhbmQgYWJzdHJhY3QgY2VsbHVsYXIgY29tcHV0YXRpb25hbCB3YXkgdG93YXJkcyBtYXplIHByb2JsZW1zIGFuZCBtYXkgaGF2ZQpzaWduaWZpY2FuY2UgaW4gYmlvY29tcHV0YXRpb24gYW5kIHN5bnRoZXRpYyBiaW9sb2d5Lgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5LYXRoYWthbGkgU2Fya2FyPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5EZWVwcm8gQm9ubmVyamVlPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5TYW5ncmFtIEJhZ2g8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDk4ODJ2MSIgcmVsPSJhbHRlcm5hdGUiIHR5cGU9InRleHQvaHRtbCIvPgogICAgPGxpbmsgdGl0bGU9InBkZiIgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9wZGYvMjEwNi4wOTg4MnYxIiByZWw9InJlbGF0ZWQiIHR5cGU9ImFwcGxpY2F0aW9uL3BkZiIvPgogICAgPGFyeGl2OnByaW1hcnlfY2F0ZWdvcnkgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIiB0ZXJtPSJwaHlzaWNzLmJpby1waCIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InBoeXNpY3MuYmlvLXBoIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuRVQiIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJxLWJpby5RTSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogIDwvZW50cnk+CiAgPGVudHJ5PgogICAgPGlkPmh0dHA6Ly9hcnhpdi5vcmcvYWJzLzIxMDYuMDQyNDN2MjwvaWQ+CiAgICA8dXBkYXRlZD4yMDIxLTA2LTExVDEzOjE1OjU4WjwvdXBkYXRlZD4KICAgIDxwdWJsaXNoZWQ+MjAyMS0wNi0wOFQxMDozOToxOVo8L3B1Ymxpc2hlZD4KICAgIDx0aXRsZT5QYXJhbWV0ZXIgSW5mZXJlbmNlIHdpdGggQmlmdXJjYXRpb24gRGlhZ3JhbXM8L3RpdGxlPgogICAgPHN1bW1hcnk+ICBFc3RpbWF0aW9uIG9mIHBhcmFtZXRlcnMgaW4gZGlmZmVyZW50aWFsIGVxdWF0aW9uIG1vZGVscyBjYW4gYmUgYWNoaWV2ZWQgYnkKYXBwbHlpbmcgbGVhcm5pbmcgYWxnb3JpdGhtcyB0byBxdWFudGl0YXRpdmUgdGltZS1zZXJpZXMgZGF0YS4gSG93ZXZlciwKc29tZXRpbWVzIGl0IGlzIG9ubHkgcG9zc2libGUgdG8gbWVhc3VyZSBxdWFsaXRhdGl2ZSBjaGFuZ2VzIG9mIGEgc3lzdGVtIGluCnJlc3BvbnNlIHRvIGEgY29udHJvbGxlZCBjb25kaXRpb24uIEluIGR5bmFtaWNhbCBzeXN0ZW1zIHRoZW9yeSwgc3VjaCBjaGFuZ2UKcG9pbnRzIGFyZSBrbm93biBhcyBiaWZ1cmNhdGlvbnMgYW5kIGxpZSBvbiBhIGZ1bmN0aW9uIG9mIHRoZSBjb250cm9sbGVkCmNvbmRpdGlvbiBjYWxsZWQgdGhlIGJpZnVyY2F0aW9uIGRpYWdyYW0uIEluIHRoaXMgd29yaywgd2UgcHJvcG9zZSBhCmdyYWRpZW50LWJhc2VkIHNlbWktc3VwZXJ2aXNlZCBhcHByb2FjaCBmb3IgaW5mZXJyaW5nIHRoZSBwYXJhbWV0ZXJzIG9mCmRpZmZlcmVudGlhbCBlcXVhdGlvbnMgdGhhdCBwcm9kdWNlIGEgdXNlci1zcGVjaWZpZWQgYmlmdXJjYXRpb24gZGlhZ3JhbS4gVGhlCmNvc3QgZnVuY3Rpb24gY29udGFpbnMgYSBzdXBlcnZpc2VkIGVycm9yIHRlcm0gdGhhdCBpcyBtaW5pbWFsIHdoZW4gdGhlIG1vZGVsCmJpZnVyY2F0aW9ucyBtYXRjaCB0aGUgc3BlY2lmaWVkIHRhcmdldHMgYW5kIGFuIHVuc3VwZXJ2aXNlZCBiaWZ1cmNhdGlvbgptZWFzdXJlIHdoaWNoIGhhcyBncmFkaWVudHMgdGhhdCBwdXNoIG9wdGltaXNlcnMgdG93YXJkcyBiaWZ1cmNhdGluZyBwYXJhbWV0ZXIKcmVnaW1lcy4gVGhlIGdyYWRpZW50cyBjYW4gYmUgY29tcHV0ZWQgd2l0aG91dCB0aGUgbmVlZCB0byBkaWZmZXJlbnRpYXRlCnRocm91Z2ggdGhlIG9wZXJhdGlvbnMgb2YgdGhlIHNvbHZlciB0aGF0IHdhcyB1c2VkIHRvIGNvbXB1dGUgdGhlIGRpYWdyYW0uIFdlCmRlbW9uc3RyYXRlIHBhcmFtZXRlciBpbmZlcmVuY2Ugd2l0aCBtaW5pbWFsIG1vZGVscyB3aGljaCBleHBsb3JlIHRoZSBzcGFjZSBvZgpzYWRkbGUtbm9kZSBhbmQgcGl0Y2hmb3JrIGRpYWdyYW1zIGFuZCB0aGUgZ2VuZXRpYyB0b2dnbGUgc3dpdGNoIGZyb20gc3ludGhldGljCmJpb2xvZ3kuIEZ1cnRoZXJtb3JlLCB0aGUgY29zdCBsYW5kc2NhcGUgYWxsb3dzIHVzIHRvIG9yZ2FuaXNlIG1vZGVscyBpbiB0ZXJtcwpvZiB0b3BvbG9naWNhbCBhbmQgZ2VvbWV0cmljIGVxdWl2YWxlbmNlLgo8L3N1bW1hcnk+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5HcmVnb3J5IFN6ZXA8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk5laWwgRGFsY2hhdTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QXR0aWxhIENzaWthc3otTmFneTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGFyeGl2OmNvbW1lbnQgeG1sbnM6YXJ4aXY9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIj5VbmRlciByZXZpZXcgYXQgTmV1cklQUyAyMDIxPC9hcnhpdjpjb21tZW50PgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wNDI0M3YyIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjA0MjQzdjIiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJtYXRoLkRTIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0icS1iaW8uUU0iIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICA8L2VudHJ5PgogIDxlbnRyeT4KICAgIDxpZD5odHRwOi8vYXJ4aXYub3JnL2Ficy8yMTA2LjAyMTkwdjM8L2lkPgogICAgPHVwZGF0ZWQ+MjAyMS0wNi0yMFQwMjoyOToyN1o8L3VwZGF0ZWQ+CiAgICA8cHVibGlzaGVkPjIwMjEtMDYtMDRUMDA6MzY6NDdaPC9wdWJsaXNoZWQ+CiAgICA8dGl0bGU+U3BhdGlhbCBHcmFwaCBBdHRlbnRpb24gYW5kIEN1cmlvc2l0eS1kcml2ZW4gUG9saWN5IGZvciBBbnRpdmlyYWwgRHJ1ZwogIERpc2NvdmVyeTwvdGl0bGU+CiAgICA8c3VtbWFyeT4gIFdlIGRldmVsb3BlZCBEaXN0aWxsZWQgR3JhcGggQXR0ZW50aW9uIFBvbGljeSBOZXR3b3JrcyAoREdBUE5zKSwgYQpjdXJpb3NpdHktZHJpdmVuIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgbW9kZWwgdG8gZ2VuZXJhdGUgbm92ZWwKZ3JhcGgtc3RydWN0dXJlZCBjaGVtaWNhbCByZXByZXNlbnRhdGlvbnMgdGhhdCBvcHRpbWl6ZSB1c2VyLWRlZmluZWQgb2JqZWN0aXZlcwpieSBlZmZpY2llbnRseSBuYXZpZ2F0aW5nIGEgcGh5c2ljYWxseSBjb25zdHJhaW5lZCBkb21haW4uIFRoZSBmcmFtZXdvcmsgaXMKZXhhbWluZWQgb24gdGhlIHRhc2sgb2YgZ2VuZXJhdGluZyBtb2xlY3VsZXMgdGhhdCBhcmUgZGVzaWduZWQgdG8gYmluZCwKbm9uY292YWxlbnRseSwgdG8gZnVuY3Rpb25hbCBzaXRlcyBvZiBTQVJTLUNvVi0yIHByb3RlaW5zLiBXZSBwcmVzZW50IGEgc3BhdGlhbApHcmFwaCBBdHRlbnRpb24gTmV0d29yayAoc0dBVCkgdGhhdCBsZXZlcmFnZXMgc2VsZi1hdHRlbnRpb24gb3ZlciBib3RoIG5vZGUgYW5kCmVkZ2UgYXR0cmlidXRlcyBhcyB3ZWxsIGFzIGVuY29kaW5nIHNwYXRpYWwgc3RydWN0dXJlIC0tIHRoaXMgY2FwYWJpbGl0eSBpcyBvZgpjb25zaWRlcmFibGUgaW50ZXJlc3QgaW4gYXJlYXMgc3VjaCBhcyBtb2xlY3VsYXIgYW5kIHN5bnRoZXRpYyBiaW9sb2d5IGFuZCBkcnVnCmRpc2NvdmVyeS4gQW4gYXR0ZW50aW9uYWwgcG9saWN5IG5ldHdvcmsgaXMgdGhlbiBpbnRyb2R1Y2VkIHRvIGxlYXJuIGRlY2lzaW9uCnJ1bGVzIGZvciBhIGR5bmFtaWMsIGZyYWdtZW50LWJhc2VkIGNoZW1pY2FsIGVudmlyb25tZW50LCBhbmQgc3RhdGUtb2YtdGhlLWFydApwb2xpY3kgZ3JhZGllbnQgdGVjaG5pcXVlcyBhcmUgZW1wbG95ZWQgdG8gdHJhaW4gdGhlIG5ldHdvcmsgd2l0aCBlbmhhbmNlZApzdGFiaWxpdHkuIEV4cGxvcmF0aW9uIGlzIGVmZmljaWVudGx5IGVuY291cmFnZWQgYnkgaW5jb3Jwb3JhdGluZyBpbm5vdmF0aW9uCnJld2FyZCBib251c2VzIGxlYXJuZWQgYW5kIHByb3Bvc2VkIGJ5IHJhbmRvbSBuZXR3b3JrIGRpc3RpbGxhdGlvbi4gSW4KZXhwZXJpbWVudHMsIG91ciBmcmFtZXdvcmsgYWNoaWV2ZWQgb3V0c3RhbmRpbmcgcmVzdWx0cyBjb21wYXJlZCB0bwpzdGF0ZS1vZi10aGUtYXJ0IGFsZ29yaXRobXMsIHdoaWxlIGluY3JlYXNpbmcgdGhlIGRpdmVyc2l0eSBvZiBwcm9wb3NlZAptb2xlY3VsZXMgYW5kIHJlZHVjaW5nIHRoZSBjb21wbGV4aXR5IG9mIHBhdGhzIHRvIGNoZW1pY2FsIHN5bnRoZXNpcy4KPC9zdW1tYXJ5PgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+WXVsdW4gV3U8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk5pY2hvbGFzIENob21hPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5BbmRyZXcgQ2hlbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+TWlrYWVsYSBDYXNobWFuPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT7DiXJpY2EgVC4gUHJhdGVzPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5NYW5lc2ggU2hhaDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+VmVyw7NuaWNhIEcuIE1lbGVzc2UgVmVyZ2FyYTwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+QXVzdGluIENseWRlPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5UaG9tYXMgUy4gQnJldHRpbjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+V2liZSBBLiBkZSBKb25nPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5OZWVyYWogS3VtYXI8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPk1hcnRoYSBTLiBIZWFkPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5SaWNrIEwuIFN0ZXZlbnM8L25hbWU+CiAgICA8L2F1dGhvcj4KICAgIDxhdXRob3I+CiAgICAgIDxuYW1lPlBldGVyIE51Z2VudDwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGF1dGhvcj4KICAgICAgPG5hbWU+RGFuaWVsIEEuIEphY29ic29uPC9uYW1lPgogICAgPC9hdXRob3I+CiAgICA8YXV0aG9yPgogICAgICA8bmFtZT5KYW1lcyBCLiBCcm93bjwvbmFtZT4KICAgIDwvYXV0aG9yPgogICAgPGxpbmsgaHJlZj0iaHR0cDovL2FyeGl2Lm9yZy9hYnMvMjEwNi4wMjE5MHYzIiByZWw9ImFsdGVybmF0ZSIgdHlwZT0idGV4dC9odG1sIi8+CiAgICA8bGluayB0aXRsZT0icGRmIiBocmVmPSJodHRwOi8vYXJ4aXYub3JnL3BkZi8yMTA2LjAyMTkwdjMiIHJlbD0icmVsYXRlZCIgdHlwZT0iYXBwbGljYXRpb24vcGRmIi8+CiAgICA8YXJ4aXY6cHJpbWFyeV9jYXRlZ29yeSB4bWxuczphcnhpdj0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iIHRlcm09ImNzLkxHIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgICA8Y2F0ZWdvcnkgdGVybT0iY3MuTEciIHNjaGVtZT0iaHR0cDovL2FyeGl2Lm9yZy9zY2hlbWFzL2F0b20iLz4KICAgIDxjYXRlZ29yeSB0ZXJtPSJjcy5BSSIgc2NoZW1lPSJodHRwOi8vYXJ4aXYub3JnL3NjaGVtYXMvYXRvbSIvPgogICAgPGNhdGVnb3J5IHRlcm09InEtYmlvLkJNIiBzY2hlbWU9Imh0dHA6Ly9hcnhpdi5vcmcvc2NoZW1hcy9hdG9tIi8+CiAgPC9lbnRyeT4KPC9mZWVkPgo=
  recorded_at: Sun, 22 Aug 2021 23:19:25 GMT
recorded_with: VCR 6.0.0
